{"version":3,"sources":["utils/base.js","utils/algoritims.js","utils/Firestore.js","utils/Auth.js","components/SideBar.js","components/FooterSection.js","components/HeaderSection.js","components/Home.js","components/Navbar.js","components/Login.js","components/Main.js","components/SelectRole.js","utils/PrivateRoute.js","components/ExtraInfo.js","components/Classes.js","components/Assessment.js","components/room.js","components/whiteboard.js","components/Settings.js","components/App.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","mean","a","reduce","acc","val","length","generateCode","str","genStr","i","Math","floor","random","convertMS","ms","d","h","m","s","date","quickSort","arr","start","end","index","p","elapsedTime","pIndex","temp","partition","checkUserExist","uid","docRef","collection","doc","get","exists","addUser","userRole","role","set","addInfo","values","update","addClass","code","className","room","data","classCode","owner","students","assessments","addClassToUser","joinClass","classesRef","trim","FieldValue","arrayUnion","console","log","getAllClasses","studentOrTeacher","query","where","classes","docs","tempData","id","getNameById","name","push","Classes","getUserRole","updateClass","updateUserDetails","nickname","status","getLatestAssessments","undefined","currentDate","Date","filteredData","map","getTime","lenght","username","addAssessment","assessmentObj","roomId","descp","toString","socketId","getAssessment","addTeacherSocket","sockedId","roomdId","filteredArr","deleteAssessment","filter","AuthContext","React","createContext","AuthProvider","state","currentUser","photoUrl","loader","sendUser","style","display","justifyContent","alignItems","height","checkUser","history","props","res","setState","getRole","onForce","auth","onAuthStateChanged","user","this","size","tip","Provider","value","children","Component","withRouter","Sider","Layout","SideBar","onCollapse","collapsed","collapsible","src","theme","mode","Item","icon","PieChartOutlined","to","pathname","DesktopOutlined","SettingOutlined","memo","Footer","FooterSection","textAlign","Header","HeaderSection","padding","float","margin","onClick","signOut","type","Content","Home","getLatestAssesment","context","latest","renderLatest","idx","title","extra","showModal","visible","handleOk","handleCancel","addToClass","alert","onOk","onCancel","onFinish","rules","required","message","placeholder","htmlType","minHeight","location","contextType","Navbar","Login","googleLogin","provider","GoogleAuthProvider","signInWithRedirect","viewBox","xmlns","fill","Main","Step","Steps","SelectRole","selectRole","current","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","ExtraInfo","getFormData","layout","label","tooltip","InfoCircleOutlined","createClass","uuid","getClass","editClass","renderClass","defaultValue","roomID","collapse","PlusOutlined","Assessment","getAllAssessment","classInfo","addAssessmentOnClick","createAssessment","_d","assessmentName","delete","renderAssessments","marginRight","disabled","labelCol","span","wrapperCol","Video","ref","useRef","useState","setVisible","url","setUrl","useEffect","peer","on","stream","srcObject","target","document","getElementById","MutationObserver","mutations","forEach","mutation","takepicture","observe","childList","subtree","characterData","parseInt","innerText","replace","canvas","createElement","getContext","drawImage","width","toDataURL","vid","marginLeft","alt","playsInline","autoPlay","window","innerHeight","innerWidth","Room","peers","setPeers","checker","currentImage","socketRef","userVideo","peersRef","counter","endPoint","io","connect","navigator","mediaDevices","getDisplayMedia","video","frameRate","ideal","max","cursor","mimeType","then","setInterval","ctx","imageData","getImageData","result","b","avgA","avgB","newA","Array","newB","ii","p2","q2","kumarHassebrook","pearson","emit","myId","time","e","addSocket","users","userID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","payload","count","percent","abs","setTimeout","incomingSignal","addPeer","calcPlayerSize","item","find","peerObj","destroy","close","Whiteboard","color","setColor","weight","setWeight","setup","p5","parent","background","coord","x","y","px","py","settings","c","w","widthSize","heighthSize","x1","y1","x2","y2","stroke","strokeWeight","line","createCanvas","connection","onChange","min","mouseDragged","mouseX","mouseY","pmouseX","pmouseY","TextArea","Input","Settings","updateDetail","getUserDetails","userDetail","photoURL","autoSize","App","Auth","exact","path","Boolean","hostname","match","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44dabfcd.chunk.js","sourcesContent":["//Noel Gregory\n//2021-03-30\n//This file contains firebase initialization\n\n//imports\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\n//initing the firebase\nconst app = firebase.initializeApp({\n  apiKey: \"AIzaSyDiUddtS0KDs9okreiSVbCqcMQF2OxN38c\",\n  authDomain: \"cheater-a4c1b.firebaseapp.com\",\n  projectId: \"cheater-a4c1b\",\n  storageBucket: \"cheater-a4c1b.appspot.com\",\n  messagingSenderId: \"684918680862\",\n  appId: \"1:684918680862:web:862ae1f24dc62ff5632d0f\",\n  measurementId: \"G-DT9Y6X17CQ\",\n});\n\nconst db = firebase.firestore(); //creating firestore instance\n\nexport { app, db };\n","//Noel Gregory\r\n//2021-03-30\r\n//This file has function for similarity of images and sorting\r\n\r\n//this function wlll check the similarty between two images\r\n//a:Array:image array of first image\r\n//b:Array:image array of second image\r\n//return:Float:contains similarity rate\r\nfunction kumarHassebrook(a, b) {\r\n  var ii = a.length;\r\n  var p = 0;\r\n  var p2 = 0;\r\n  var q2 = 0;\r\n  for (let i = 0; i < ii; i++) {\r\n    p += a[i] * b[i];\r\n    p2 += a[i] * a[i];\r\n    q2 += b[i] * b[i];\r\n  } //end for i\r\n  return p / (p2 + q2 - p);\r\n} //end kumarHassebrook\r\n\r\n//This function will calcualte the mean of an array\r\n//a:Array:this contains the image array\r\n//return:Flaot:contains the mean value of array\r\nfunction mean(a) {\r\n  let total = a.reduce((acc, val) => (acc += val), 0);\r\n  return total / a.length;\r\n} //end mean\r\n\r\n//This fucntion will normilize the images and get similarity\r\n//a:Array:image array of first image\r\n//b:Array:image array of second image\r\n//return:Float:contains similarity rate\r\nexport function pearson(a, b) {\r\n  var avgA = mean(a);\r\n  var avgB = mean(b);\r\n\r\n  var newA = new Array(a.length);\r\n  var newB = new Array(b.length);\r\n  for (var i = 0; i < newA.length; i++) {\r\n    newA[i] = a[i] - avgA;\r\n    newB[i] = b[i] - avgB;\r\n  } //end for i\r\n\r\n  return kumarHassebrook(newA, newB);\r\n}\r\n\r\n//this function generates a random code\r\n//returnLString:random code\r\nexport const generateCode = () => {\r\n  const str = \"qwertyuioplkjhgfdsazxcvbnm1234567890QAZXSWEDCVFRTGBNHYUJMKILOP\";\r\n  let genStr = \"\";\r\n  for (let i = 0; i < 5; i++) {\r\n    const randomIndex = Math.floor(Math.random() * str.length);\r\n    genStr += str[randomIndex];\r\n  } //end for i\r\n  return genStr;\r\n}; //end generateCode\r\n\r\n//This function will convert ms to date\r\n//ms:Integer:contains ms of date\r\n//return:String:date in formated string\r\nexport const convertMS = (ms) => {\r\n  var d, h, m, s;\r\n  s = Math.floor(ms / 1000);\r\n  m = Math.floor(s / 60);\r\n  s = s % 60;\r\n  h = Math.floor(m / 60);\r\n  m = m % 60;\r\n  d = Math.floor(h / 24);\r\n  h = h % 24;\r\n  let date = \"\";\r\n  if (d != 0) {\r\n    date += d + \" days, \";\r\n    return date;\r\n  } //end if d\r\n  if (h != 0) {\r\n    date += h + \" hours, \";\r\n  } //end if h\r\n  if (m != 0) {\r\n    date += m + \" minutes, \";\r\n  } //end if m\r\n  if (s != 0) {\r\n    date += s + \" seconds \";\r\n  } //end if s\r\n\r\n  return date;\r\n}; //end convertMS\r\n\r\n//this function will partition the array\r\n//arr:Array:contains the array\r\n//start:Intger:start index\r\n//end:Integer:contains end index\r\n//return:Integer:contains the pivot index\r\nconst partition = (arr, start, end) => {\r\n  let p = arr[end].elapsedTime;\r\n  let pIndex = start;\r\n  for (let i = start; i < end; i++) {\r\n    if (arr[i].elapsedTime <= p) {\r\n      let temp = arr[i];\r\n      arr[i] = arr[pIndex];\r\n      arr[pIndex] = temp;\r\n      pIndex++;\r\n    } //end if arr[i].elapsedTime\r\n  } //end for i\r\n  let temp = arr[pIndex];\r\n  arr[pIndex] = arr[end];\r\n  arr[end] = temp;\r\n  return pIndex;\r\n}; //end partition\r\n\r\n//This function will run quicksort on array\r\n//arr:Array:contains the array\r\n//start:Intger:start index\r\n//end:Integer:contains end index\r\n//return:Array:sorted array\r\nexport const quickSort = (arr, start, end) => {\r\n  if (start >= end) return;\r\n\r\n  let index = partition(arr, start, end);\r\n  quickSort(arr, start, index - 1);\r\n  quickSort(arr, index + 1, end);\r\n  return arr;\r\n}; //end quickSort\r\n","//noel Gregory\n//2021-03-30\n//This file contains all functions needed for database calls\n\n//imports\nimport { db } from \"./base\";\nimport firebase from \"firebase/app\";\nimport { quickSort } from \"./algoritims\";\n\n//This function will check if a user exist in firestore\n//uid:String:user id\n//return:Boolean:if the user exist or not\nexport const checkUserExist = async (uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  const doc = await docRef.get();\n\n  if (!doc.exists) {\n    return true;\n  } else {\n    return false;\n  } //end if !doc.exists\n}; //end checkUserExist\n\n//This function will add a user to firestore\n//uid:String:user id\n//val:Object:user object\nexport const addUser = async (uid, val) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  let userRole = {\n    role: null,\n  };\n  if (val) {\n    userRole.role = true;\n  } else {\n    userRole.role = false;\n  } //end if val\n  await docRef.set(userRole);\n}; //end addUser\n\n//This function will add info to user\n//values:Object:user info\n//uid:String:user id\nexport const addInfo = async (values, uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  await docRef.update(values);\n}; //end addInfo\n\n//This function will add a class\n//code:String:class code\n//className:String: contains class name\n//uid:String:user id\n//room:String:room id\nexport const addClass = (code, className, uid, room) => {\n  const docRef = db.collection(\"classes\").doc(code);\n  let data = {\n    classCode: code,\n    className: className,\n    owner: uid,\n    room: room,\n    students: null,\n  };\n  docRef.set(data);\n  const asmRef = db.collection(\"assessment\").doc(code);\n  asmRef.set({\n    className: className,\n    assessments: [],\n  });\n  addClassToUser(code, uid);\n}; //end addClass\n\n//This function will join a class to a user\n//code:String: class code\n//uid:String: user id\nexport const joinClass = async (code, uid) => {\n  try {\n    const classesRef = db.collection(\"classes\").doc(code.trim());\n    await classesRef.update({\n      students: firebase.firestore.FieldValue.arrayUnion(uid),\n    });\n    addClassToUser(code, uid);\n  } catch (err) {\n    console.log(err);\n    return err;\n  } //end try\n}; //end joinClass\n\n//this function will get all classes\n//uid:String:user id\n//studentOrTeacher:Boolean: contaisn the user role\n//return:Object:contains classes\nexport const getAllClasses = async (uid, studentOrTeacher) => {\n  const docRef = db.collection(\"classes\");\n  let query = null;\n  if (studentOrTeacher == true) {\n    query = docRef.where(\"owner\", \"==\", uid);\n  } else {\n    query = docRef.where(\"students\", \"array-contains\", uid);\n  } //end if studentOrTeacher\n  const data = await query.get();\n  const classes = [];\n  for (let i = 0; i < data.docs.length; i++) {\n    let tempData = data.docs[i].data();\n    const id = tempData.owner;\n    const name = await getNameById(id);\n    tempData.owner = name;\n    classes.push(tempData);\n  } //end for i\n  return classes;\n}; //end getAllClasses\n\n//this function will add class to a user\n//code:String:class code\n//uid:String: user id\nexport const addClassToUser = async (code, uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  await docRef.update({\n    Classes: firebase.firestore.FieldValue.arrayUnion(code),\n  });\n}; //end addClassToUser\n\n//This function will get user role\n//uid:String:user id\n//return:Object:user info object\nexport const getUserRole = async (uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  const doc = await docRef.get();\n  const data = doc.data();\n  return data;\n}; //end getUserRole\n\n//This function will update the class info\n//classCode:String:class code\n//className:String: class name\nexport const updateClass = async (classCode, className) => {\n  try {\n    const docRef = db.collection(\"classes\").doc(classCode);\n    await docRef.update({\n      className,\n    });\n  } catch (e) {} //end try\n}; //end updateClass\n\n//This function will update the user info\n//uid:String:user id\n//nickname:String:user name\n//status:String:contains user status\nexport const updateUserDetails = async (uid, nickname, status) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  await docRef.update({\n    nickname,\n    status,\n  });\n}; //end updateUserDetails\n\n//This function will get latest assessments\n//classes:Array:an array of all classes user has\n//return:Array:hold latest assessments\nexport const getLatestAssessments = async (classes) => {\n  if (classes != undefined) {\n    const docRef = db.collection(\"assessment\");\n    const query = docRef.where(\"classCode\", \"in\", classes);\n    const data = await query.get();\n    const currentDate = new Date();\n    let filteredData = [];\n    data.docs.map((doc) => {\n      const tempData = doc.data();\n      tempData.assessments.map((val) => {\n        filteredData.push(val);\n        var storedDate = new Date(val.date);\n        var elapsedTime = storedDate.getTime() - currentDate.getTime();\n        val.elapsedTime = elapsedTime;\n        return val;\n      }); //end mapping assessments\n    }); //end mapping docs\n    console.log(filteredData);\n    if (filteredData.lenght > 1) {\n      filteredData = quickSort(filteredData, 0, filteredData.length - 1);\n    } //end if filteredData.lenght\n    return filteredData;\n  } else {\n    return [];\n  } //end classes\n}; //end getLatestAssessments\n\n//This function will get name of user form id\n//uid:String:user id\n//return:Boolean:caontsin ther username\nexport const getNameById = async (uid) => {\n  try {\n    const docRef = db.collection(\"users\").doc(uid);\n    const doc = await docRef.get();\n    const username = doc.data().nickname;\n    return username;\n  } catch (e) {\n    return false;\n  } //end try catch\n}; //end getNameById\n\n//This function will ass assessments\n//classCode:String:class code\n//assessmentObj:String:contains assessment name\n//roomId:String:room id\n//date:String:contains date\n//descp:String:assessment description\n//return:Boolean:contain boolean if the assessment was added or not\nexport const addAssessment = async (\n  classCode,\n  assessmentObj,\n  roomId,\n  date,\n  descp\n) => {\n  try {\n    const docRef = db.collection(\"assessment\").doc(classCode);\n    await docRef.update({\n      classCode,\n      assessments: firebase.firestore.FieldValue.arrayUnion({\n        assessmentObj,\n        descp,\n        roomId,\n        date: date.toString(),\n        socketId: null,\n      }),\n    });\n    return true;\n  } catch (e) {\n    console.log(e);\n    return false;\n  } //end try\n}; //end addAssessment\n\n//This function will get all assessments\n//classCode:String:class code\n//return:Object:all assessments form database\nexport const getAssessment = async (classCode) => {\n  const docRef = db.collection(\"assessment\").doc(classCode);\n  const doc = await docRef.get();\n  return doc.data();\n}; //end getAssessment\n\n//This function will add teacher socket to database\n//socketId:String:socket id\n//classCode:String: class code\n//roomId:String: room id\nexport const addTeacherSocket = async (sockedId, classCode, roomdId) => {\n  const docRef = db.collection(\"assessment\").doc(classCode);\n  const doc = await docRef.get();\n  let data = doc.data();\n  let filteredArr = data.assessments.map((val) => {\n    if (val.roomId == roomdId) {\n      val[\"socketId\"] = sockedId;\n    } //end if val.roomId\n    return val;\n  }); //end mapping assessments\n  data.assessments = filteredArr;\n  docRef.set(data);\n}; //end addTeacherSocket\n\n//This function will delete assessments\n//classCode:String:class code\n//roomId:String: room id\nexport const deleteAssessment = async (classCode, roomId) => {\n  const docRef = db.collection(\"assessment\").doc(classCode);\n  const doc = await docRef.get();\n  let data = doc.data();\n  let filteredArr = data.assessments.filter((val) => val.roomId != roomId);\n  data.assessments = filteredArr;\n  docRef.set(data);\n}; //end deleteAssessment\n","//Noel Gregory\n//2021-03-30\n//This file will check if user is authenticated\n\n//imports\nimport React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport { Spin } from \"antd\";\nimport { checkUserExist, getUserRole } from \"./Firestore\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const AuthContext = React.createContext(); //create react context\n\nclass AuthProvider extends Component {\n  state = {\n    currentUser: null,\n    photoUrl: null,\n    loader: true,\n    status: null,\n    sendUser: false,\n  };\n  style = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"75vh\",\n  };\n\n  //This function will create auth trigger\n  componentDidMount() {\n    app.auth().onAuthStateChanged((user) => {\n      if (user != null) {\n        this.setState({\n          currentUser: user,\n          status: null,\n        });\n      } else {\n        this.setState({\n          currentUser: null,\n          loader: false,\n        });\n      } //end if user\n    });\n  } //end componentDidMount\n\n  //This function will check if a user exists\n  checkUser = async () => {\n    let { currentUser, sendUser } = this.state;\n    const { history } = this.props;\n    if (currentUser != null && sendUser == false) {\n      let res = await checkUserExist(currentUser.uid);\n      let temp = \"\";\n      if (res) {\n        temp = \"/selectrole\";\n      } else {\n        temp = \"/\";\n      } //end if res\n      sendUser = true;\n      history.push(temp);\n      this.setState({ currentUser, sendUser });\n    } //end if currentUser and sendUser\n  }; //end checkUser\n\n  //This function will get user role\n  //onForce:Boolean:force user to get role\n  getRole = async (onForce) => {\n    const { currentUser, status } = this.state;\n    if (currentUser != null && status == null) {\n      const data = await getUserRole(currentUser.uid);\n      this.setState({ status: data, loader: false });\n    } else if (onForce == true) {\n      const data = await getUserRole(currentUser.uid);\n      console.log(\"////////\");\n      console.log(data);\n      this.setState({ status: data, loader: false });\n    } //end if currentUser and status\n  }; //end getRole\n\n  //This function will check if user exist and get there role\n  componentDidUpdate() {\n    this.checkUser();\n    this.getRole();\n  } //end componentDidUpdate\n\n  //This function will render the auth component\n  //return:JSX:contains the auth render component\n  render() {\n    const { currentUser, loader, status } = this.state;\n    if (loader) {\n      return (\n        <div style={this.style}>\n          <Spin size=\"large\" tip=\"Loading...\" />\n        </div>\n      );\n    } else {\n      return (\n        <AuthContext.Provider\n          value={{ currentUser, status, getRole: this.getRole }}\n        >\n          {this.props.children}\n        </AuthContext.Provider>\n      );\n    } //end loader\n  } //end render\n} //endclass AuthProvider\n\nexport default withRouter(AuthProvider);\n","//Noel Gregory\n//2021-03-30\n//This file creates the sidebar component\n\n//imports\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nconst { Sider } = Layout;\n\nclass SideBar extends Component {\n  //This function will create the gloabal variables\n  //props:Object:contains parent component values\n  constructor(props) {\n    super(props);\n    let temp = false;\n    if (this.props[\"state\"] != undefined) {\n      temp = this.props.state;\n    } //end this.props[\"state\"]\n    this.state = {\n      collapsed: temp,\n    };\n  } //end constructor\n\n  //This function will change collapse state\n  onCollapse = (collapsed) => {\n    this.setState({ collapsed });\n  }; //end onCollapse\n\n  //This function will render the sidebar component\n  //return:JSX:contains jsx expression of sidebar\n  render() {\n    const { collapsed } = this.state;\n    return (\n      <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n        {\n          collapsed ? (\n            <img className=\"logosmall\" src=\"/logosmall.png\"></img>\n          ) : (\n            <img className=\"logo\" src=\"/logo.png\"></img>\n          ) //end if collapsed\n        }\n        <Menu theme=\"dark\" mode=\"inline\">\n          <Menu.Item icon={<PieChartOutlined />}>\n            <Link\n              to={{\n                pathname: \"/\",\n                state: collapsed,\n              }}\n            >\n              Home\n            </Link>\n          </Menu.Item>\n          <Menu.Item icon={<DesktopOutlined />}>\n            <Link\n              to={{\n                pathname: \"/classes\",\n                state: collapsed,\n              }}\n            >\n              Classes\n            </Link>\n          </Menu.Item>\n          <Menu.Item icon={<SettingOutlined />}>\n            <Link\n              to={{\n                pathname: \"/setting\",\n                state: collapsed,\n              }}\n            >\n              Settings\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n  } //end render\n} //end class SideBar\n\nexport default React.memo(SideBar);\n","//Noel Gregory\n//2021-03-29\n//This file will create a footer section component\n\n//imports\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./ui.css\";\nimport { Layout } from \"antd\";\nconst { Footer } = Layout;\n\n//This function will return a footer section component\n//return:JSX:will return the footer section's jsx expression\nconst FooterSection = () => {\n  return (\n    <Footer style={{ textAlign: \"center\" }}>\n      CheaterChecker ©2021 Created by Noel Gregory\n    </Footer>\n  );\n}; //end FooterSection\n\nexport default React.memo(FooterSection);\n","//Noel Gregory\n//2021-03-29\n//This file will create a header section component\n\n//imports\nimport React from \"react\";\nimport { Layout, Input, Button } from \"antd\";\nimport { app } from \"../utils/base\";\nconst { Header } = Layout;\n\n//This function will return a header component\n//return:JSX:returns headersections jsx expression\nconst HeaderSection = () => {\n  return (\n    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n      <Button\n        size=\"large\"\n        style={{ float: \"right\", margin: \"10px\" }}\n        onClick={() => app.auth().signOut()}\n        type=\"primary\"\n      >\n        Sign out\n      </Button>\n    </Header>\n  );\n}; //end HeaderSection\n\nexport default React.memo(HeaderSection);\n","// Noel Gregory\n//2021-03-29\n//This class is made for the home route and will return the home page in jsx\n\n//imports\nimport React, { Component } from \"react\";\nimport { AuthContext } from \"../utils/Auth\";\nimport { getLatestAssessments, joinClass } from \"../utils/Firestore\";\nimport \"./ui.css\";\nimport { Layout, Card, Spin, Button, Form, Input, Modal } from \"antd\";\nimport SiderBar from \"./SideBar\";\nimport FooterSection from \"./FooterSection\";\nimport HeaderSection from \"./HeaderSection\";\nimport { convertMS } from \"../utils/algoritims\";\nconst { Content } = Layout;\n\nclass Home extends Component {\n  static contextType = AuthContext;\n  //This function will be called when the class instance is created\n  //props:Object:holds values given by parent components\n  constructor(props) {\n    super(props);\n    this.state = { latest: undefined, visible: false }; //creating state variables\n  } //end constructor\n\n  //This function will get the latest assesments from the database\n  //code:String:class code\n  getLatestAssesment = async (code) => {\n    const { status } = this.context;\n    if (code != undefined) {\n      if (status[\"Classes\"] == undefined) {\n        status[\"Classes\"] = [];\n      }\n      status[\"Classes\"].push(code);\n    } //end code\n    console.log(status.Classes);\n\n    let latest = await getLatestAssessments(status.Classes);\n    if (latest == undefined) latest = false; // end if latest\n    this.setState({ latest });\n  }; //end getLatestAssesment\n\n  //This function will render the lastest assesments from the database\n  //return:JSX:returns the latest assements using jsx expressions\n  renderLatest = () => {\n    const { latest } = this.state;\n    if (latest == false) return <h3>No Latest Assessment</h3>; //end if latest\n    return latest.map((val, idx) => {\n      return (\n        <Card\n          className=\"customCard\"\n          key={idx}\n          type=\"inner\"\n          title={val.assessmentObj}\n          extra={\n            val.elapsedTime > 0 ? convertMS(val.elapsedTime) : \"Assessment Done\"\n          }\n        >\n          {val.descp}\n        </Card>\n      );\n    });\n  }; //end renderLatest\n\n  //This function handles the show button in modal\n  showModal = () => {\n    this.setState({ visible: true });\n  }; //end showModal\n\n  //This function handles the ok button in modal\n  handleOk = () => {\n    this.setState({ visible: false });\n  }; //end handleOk\n\n  //This function handles the cancel button in modal\n  handleCancel = () => {\n    this.setState({ visible: false });\n  }; //end handleCancel\n\n  //This function will add a class to the database\n  //values:Object:holds values from the form\n  addToClass = async (values) => {\n    const { currentUser, getRole } = this.context;\n    if (values != null) {\n      const result = await joinClass(values.code, currentUser.uid); //calling joinClass to add class to firestore\n      if (result != undefined) {\n        alert(\"This Class Does Not Exist\");\n      } //end if result\n    } //end if values\n    getRole(true);\n    this.getLatestAssesment(values.code);\n    this.handleCancel();\n  }; //end addToClass\n\n  //This function will check if the user is a student and return student info\n  //return:JSX:this returns a jsx expression if the user is a student\n  getRole = () => {\n    const { status } = this.context;\n    if (status.role == false) {\n      return (\n        <div>\n          <Button type=\"primary\" onClick={this.showModal}>\n            Join Class\n          </Button>\n          <Modal\n            title=\"Join Class\"\n            visible={this.state.visible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n          >\n            <Form onFinish={this.addToClass} name=\"dynamic_rule\">\n              <Form.Item\n                name=\"code\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input class code\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Please input class code\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Join Class\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </div>\n      );\n    } //end if status.role\n  }; //end getRole\n\n  //This function is called at component mount\n  componentDidMount() {\n    this.getLatestAssesment();\n  } //end componentDidMount\n\n  //This function will render the home component\n  //return:JSX:contains jsx expression of home component\n  render() {\n    const { latest } = this.state;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SiderBar state={this.props.location.state} />\n        <Layout className=\"site-layout\">\n          <HeaderSection />\n          <Content style={{ margin: \"10px 16px\" }}>\n            <Card title=\"Latest Assessments\" extra={this.getRole()}>\n              {latest == undefined ? (\n                <div className=\"loader\">\n                  <Spin size=\"large\" tip=\"Loading...\" />\n                </div>\n              ) : (\n                this.renderLatest()\n              )}\n            </Card>\n          </Content>\n          <FooterSection />\n        </Layout>\n      </Layout>\n    );\n  } //end render\n} //end class Home\n\nexport default Home;\n","//Noel Gregory\n//2021-03-30\n\n//imports\nimport React from \"react\";\nimport { Layout, Menu } from \"antd\";\n\nconst { Header } = Layout;\n\n//This function will render the navbar component\n//return:JSX:contains jsx expression of navbar component\nconst Navbar = () => {\n  return (\n    <Header>\n      <img className=\"logoNavbar\" src=\"/logo.png\"></img>\n      <Menu theme=\"dark\" mode=\"horizontal\"></Menu>\n    </Header>\n  );\n}; //end Navbar\n\nexport default React.memo(Navbar);\n","//Noel Gregory\n//2021-03-29\n//This class will create a login page\n\n//imports\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport { app } from \"../utils/base.js\";\nimport firebase from \"firebase\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport Navbar from \"./Navbar\";\nimport { Layout, Steps } from \"antd\";\nimport FooterSection from \"./FooterSection\";\nconst { Content } = Layout;\n\nclass Login extends Component {\n  static contextType = AuthContext;\n\n  //This function will handle gooLogin\n  googleLogin = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    app.auth().signInWithRedirect(provider);\n  }; //end googleLogin\n\n  //This function will render the login page\n  //return:JSX:returns thr login page\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navbar />\n        <Content style={{ padding: \"5vh\" }}>\n          <div className=\"site-layout-content\">\n            <h1>Log in</h1>\n            <button\n              type=\"button\"\n              onClick={this.googleLogin}\n              className=\"google-button\"\n            >\n              <span className=\"google-button__icon\">\n                <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\"\n                    id=\"Shape\"\n                    fill=\"#EA4335\"\n                  />\n                  <path\n                    d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\"\n                    id=\"Shape\"\n                    fill=\"#FBBC05\"\n                  />\n                  <path\n                    d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\"\n                    id=\"Shape\"\n                    fill=\"#4285F4\"\n                  />\n                  <path\n                    d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\"\n                    fill=\"#34A853\"\n                  />\n                </svg>\n              </span>\n              <span className=\"google-button__text\">Sign in with Google</span>\n            </button>\n          </div>\n        </Content>\n        <FooterSection />\n      </Layout>\n    );\n  } //end render\n} //end class Login\n\nexport default Login;\n","//Noel Gregory\n//2021-03-29\n//This class will create main component\n\n//imports\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Main extends Component {\n  //This function will render the main page component\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Start using Cheater Checker</p>\n          <Link className=\"App-link\" to=\"/login\">\n            Login\n          </Link>\n        </header>\n      </div>\n    );\n  } //end render\n} //end class Main\n\nexport default Main;\n","//Noel Gregory\n//2021-03-29\n//This class will create the select role component\n\n//imports\nimport React, { Component } from \"react\";\nimport { addUser } from \"../utils/Firestore\";\nimport Navbar from \"./Navbar\";\nimport { Layout, Steps, Button } from \"antd\";\nimport FooterSection from \"./FooterSection\";\nimport { AuthContext } from \"../utils/Auth\";\nconst { Content } = Layout;\nconst { Step } = Steps;\n\nclass SelectRole extends Component {\n  static contextType = AuthContext;\n  //This function will handle selecting role\n  //val:Object:holds the object from the form\n  selectRole = async (val) => {\n    const { currentUser } = this.context;\n    if (val == \"teacher\") {\n      await addUser(currentUser.uid, true);\n    } else {\n      await addUser(currentUser.uid, false);\n    } //end if val\n    this.props.history.push(\"/extrainfo\"); //push to history\n  }; //end selectRole\n  //This function will render the select role page\n  //return:JSX:returns the select role page\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navbar />\n        <Content style={{ padding: \"5vh\" }}>\n          <div className=\"site-layout-content\">\n            <Steps size=\"small\" current={1}>\n              <Step title=\"Login\" />\n              <Step title=\"Select Role\" />\n              <Step title=\"Extra Info\" />\n            </Steps>\n            <Button\n              size=\"large\"\n              style={{ float: \"center\", margin: \"10px\" }}\n              onClick={() => this.selectRole(\"student\")}\n              type=\"primary\"\n            >\n              Student\n            </Button>\n            <Button\n              size=\"large\"\n              style={{ float: \"center\", margin: \"10px\" }}\n              onClick={() => this.selectRole(\"teacher\")}\n              type=\"primary\"\n            >\n              Teacher\n            </Button>\n          </div>\n        </Content>\n        <FooterSection />\n      </Layout>\n    );\n  } //end render\n} //end class SelectRole\n\nexport default SelectRole;\n","//Noel Gregory\n//2021-03-30\n//This file redirects user that are not logged in\n\n//imports\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\n//This function will render the private route component\n//component:Object:contains component hsitory\n//return:JSX: jsx expression of private route\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/main\"} />\n        )\n      }\n    />\n  );\n}; //end PrivateRoute\n\nexport default PrivateRoute;\n","//Noel Gregory\n//2021-03-29\n//This class will create a extra info component\n\n//imports\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport { addInfo } from \"../utils/Firestore\";\nimport Navbar from \"./Navbar\";\nimport { Layout, Steps, Button, Form, Input } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport FooterSection from \"./FooterSection\";\nconst { Content } = Layout;\nconst { Step } = Steps;\n\nclass ExtraInfo extends Component {\n  static contextType = AuthContext;\n  //This function will add extra data to user\n  //values:Object:contains the values from form\n  getFormData = async (value) => {\n    console.log(value);\n    const { currentUser } = this.context;\n    await addInfo(value, currentUser.uid); //add user info\n    this.props.history.push(\"/\");\n  }; //end getFormData\n\n  //This fucntion will render the extra info component\n  //return:JSX:will return a extra info page in jsx\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navbar />\n        <Content style={{ padding: \"5vh\" }}>\n          <div className=\"site-layout-content\">\n            <Steps size=\"small\" current={2}>\n              <Step title=\"Login\" />\n              <Step title=\"Select Role\" />\n              <Step title=\"Extra Info\" />\n            </Steps>\n            <Form layout=\"vertical\" onFinish={this.getFormData}>\n              <Form.Item\n                label=\"Nickname\"\n                className=\"info\"\n                name=\"nickname\"\n                required\n                tooltip=\"This is a required field\"\n              >\n                <Input className=\"infoInput\" placeholder=\"input placeholder\" />\n              </Form.Item>\n              <Form.Item\n                label=\"Status Info\"\n                name=\"status\"\n                className=\"info\"\n                tooltip={{\n                  title: \"Tooltip with customize icon\",\n                  icon: <InfoCircleOutlined />,\n                }}\n              >\n                <Input className=\"infoInput\" placeholder=\"input placeholder\" />\n              </Form.Item>\n              <Form.Item className=\"info\">\n                <Button htmlType=\"submit\" type=\"primary\">\n                  Add\n                </Button>\n                <Button\n                  style={{ float: \"center\", margin: \"10px\" }}\n                  onClick={() => this.props.history.push(\"/\")}\n                  type=\"primary\"\n                >\n                  Skip\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </Content>\n        <FooterSection />\n      </Layout>\n    );\n  } //end render\n} //end class ExtraInfo\n\nexport default ExtraInfo;\n","//Noel Gregory\n//2021-03-30\n//This file will contains teh class component\n\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport {\n  addClass,\n  getAllClasses,\n  getNameById,\n  updateClass,\n} from \"../utils/Firestore\";\nimport FooterSection from \"./FooterSection\";\nimport HeaderSection from \"./HeaderSection\";\nimport { Layout, Card, Spin, Button, Form, Input, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport SiderBar from \"./SideBar\";\nimport { AuthContext } from \"../utils/Auth\";\nimport { Link } from \"react-router-dom\";\nimport { v1 as uuid } from \"uuid\";\nimport { generateCode } from \"../utils/algoritims\";\nconst { Content } = Layout;\n\nclass Classes extends Component {\n  static contextType = AuthContext;\n  //This function is called when class instance is made and will define state variables\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: undefined,\n      visible: [],\n    };\n  } //end constructor\n\n  //This function handle adding class from button\n  //values:Object:holds form values\n  addClass = (values) => {\n    this.createClass(values); //send info\n    this.handleCancel(0);\n  }; //end addClass\n  //this function will create new classes\n  //values:Object:contians new class info\n  createClass = async (values) => {\n    const { currentUser } = this.context;\n    let { classes } = this.state;\n    const str = generateCode();\n    const room = uuid();\n    addClass(str, values.className, currentUser.uid, room);\n    let name = await getNameById(currentUser.uid);\n\n    let data = {\n      classCode: str,\n      className: values.className,\n      owner: currentUser.uid,\n      students: null,\n      code: true,\n      owner: name,\n    };\n    if (classes == false) {\n      classes = [data];\n    } else {\n      classes.push(data);\n    } //end if classes\n    this.setState({ classes });\n  }; //end createClass\n\n  //This function will get all the classes for user\n  getClass = async () => {\n    const { currentUser, status } = this.context;\n    let data = await getAllClasses(currentUser.uid, status.role);\n    if (data == null) data = false; //end if data\n    this.setState({ classes: data });\n  }; //end getClass\n\n  //This function will be called when component is mounted and will get all class user is in\n  componentDidMount() {\n    this.getClass();\n  } //end componentDidMount\n\n  //This function will handles show of modal\n  //idx:Intger:holds the id for current modal\n  showModal = (idx) => {\n    const { visible } = this.state;\n    visible[idx] = true;\n    this.setState({ visible });\n  }; //end showModal\n\n  //This function will handles ok of modal\n  //idx:Intger:holds the id for current modal\n  handleOk = (idx) => {\n    const { visible } = this.state;\n    visible[idx] = false;\n    this.setState({ visible });\n  }; //end handleOk\n\n  //This function will handles cancel of modal\n  //idx:Intger:holds the id for current modal\n  handleCancel = (idx) => {\n    const { visible } = this.state;\n    visible[idx] = false;\n    this.setState({ visible });\n  }; //end handleCancel\n\n  //This function will edit class detials\n  //code:String:class code\n  //value:Object:contains class details fromt he form\n  editClass = async (code, value, idx) => {\n    this.handleCancel(idx);\n    await updateClass(code, value.className);\n    this.getClass();\n  }; //editClass\n\n  //This function will render all the classes\n  //classes:Object:contains all the classes\n  //return:JSX:contains jsx expression of class section\n  renderClass = (classes) => {\n    const { status } = this.context;\n    if (classes == false) return <h2>No Class</h2>; //end if classes\n    return classes.map((val, idx) => {\n      idx++;\n      return (\n        <Card\n          className=\"customCard\"\n          key={idx}\n          type=\"inner\"\n          title={val.className}\n          extra={\n            <div>\n              <h4>\n                {val[\"code\"] != undefined ? `Class Code: ${val.classCode}` : \"\"}\n              </h4>\n              {\n                status.role == true ? (\n                  <Button type=\"primary\" onClick={() => this.showModal(idx)}>\n                    Edit Class{\" \"}\n                  </Button>\n                ) : (\n                  \"\"\n                ) //end if statis.role\n              }\n\n              <Modal\n                title=\"Edit Class\"\n                visible={this.state.visible[idx]}\n                onOk={() => this.handleOk(idx)}\n                onCancel={() => this.handleCancel(idx)}\n              >\n                <Form\n                  onFinish={(value) =>\n                    this.editClass(val.classCode, value, idx)\n                  }\n                  layout=\"inline\"\n                  name=\"dynamic_rule\"\n                >\n                  <Form.Item name=\"className\">\n                    <h4>{`Class Code: ${val.classCode}`}</h4>\n                  </Form.Item>\n                  <Form.Item\n                    name=\"className\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input Class Name\",\n                      },\n                    ]}\n                  >\n                    <Input\n                      className=\"infoInput\"\n                      defaultValue={val.className}\n                      placeholder=\"Please input Class Name\"\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      className=\"addButton\"\n                      htmlType=\"submit\"\n                      type=\"primary\"\n                    >\n                      Update Class\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Modal>\n              <Link\n                style={{ margin: \"10px\" }}\n                to={{\n                  pathname: `/whiteboard`,\n                  state: { roomID: val.roomId, role: status.role },\n                }}\n              >\n                Whiteboard\n              </Link>\n              <Link\n                to={{\n                  pathname: \"/assessment\",\n                  state: { val, collapse: this.props.location.state },\n                }}\n              >\n                Assessment\n              </Link>\n            </div>\n          }\n        >\n          Teacher: {val.owner}\n        </Card>\n      );\n    });\n  }; //end renderClass\n\n  //This function will render jsx depending on role\n  //return:JSX:contains jsx expression of teacher role parts\n  getRole = () => {\n    const { status } = this.context;\n    if (status.role) {\n      return (\n        <div>\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => this.showModal(0)}\n          ></Button>\n          <Modal\n            title=\"Create Class\"\n            visible={this.state.visible[0]}\n            onOk={() => this.handleOk(0)}\n            onCancel={() => this.handleCancel(0)}\n          >\n            <Form onFinish={this.addClass} layout=\"inline\" name=\"dynamic_rule\">\n              <Form.Item\n                name=\"className\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input Class Name\",\n                  },\n                ]}\n              >\n                <Input\n                  className=\"infoInput\"\n                  placeholder=\"Please input Class Name\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Button className=\"addButton\" htmlType=\"submit\" type=\"primary\">\n                  Create Class\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </div>\n      );\n    }\n  }; //end getRole\n\n  //This function will render the class component\n  //return:JSX:contians the jsx ecpression of the class componenet\n  render() {\n    const { classes } = this.state;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SiderBar state={this.props.location.state} />\n        <Layout className=\"site-layout\">\n          <HeaderSection />\n          <Content style={{ margin: \"10px 16px\" }}>\n            <Card title=\"Classes\" extra={this.getRole()}>\n              {\" \"}\n              {classes == undefined ? (\n                <div className=\"loader\">\n                  <Spin size=\"large\" tip=\"Loading...\" />\n                </div>\n              ) : (\n                this.renderClass(classes)\n              )}\n            </Card>\n          </Content>\n          <FooterSection />\n        </Layout>\n      </Layout>\n    );\n  } //end render\n} //end class Classes\n\nexport default Classes;\n","//Noel Gregory\n//2021-03-30\n//This class will create assessments component\n\n//imports\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport FooterSection from \"./FooterSection\";\nimport HeaderSection from \"./HeaderSection\";\nimport {\n  Layout,\n  Card,\n  Spin,\n  Button,\n  Form,\n  Input,\n  Modal,\n  DatePicker,\n} from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport SideBar from \"./SideBar\";\nimport { AuthContext } from \"../utils/Auth\";\nimport { Link } from \"react-router-dom\";\nimport { v1 as uuid } from \"uuid\";\nimport {\n  deleteAssessment,\n  getAssessment,\n  addAssessment,\n} from \"../utils/Firestore\";\nconst { Content } = Layout;\n\nclass Assessment extends Component {\n  static contextType = AuthContext;\n\n  //This function will create the global variables\n  //props:Object:contains parent props\n  constructor(props) {\n    super(props);\n    this.state = {\n      classInfo: this.props.location.state.val,\n      assessments: undefined,\n      visible: false,\n    };\n  } //end constructor\n\n  //This function will get all the assessments\n  getAllAssessment = async () => {\n    const { classInfo } = this.state;\n    const classCode = classInfo.classCode;\n    let data = await getAssessment(classCode);\n    if (data.assessments.length == 0) {\n      data = false;\n    } //end if data.assessments.length\n    this.setState({ assessments: data });\n  }; //end getAllAssessment\n\n  //This function will add assessment on button click\n  //value:Object:contains the value form form\n  addAssessmentOnClick = (value) => {\n    this.createAssessment(value);\n  }; //end addAssessmentOnClick\n\n  //This function will create an assessment\n  //values:Object:contains value from form\n  createAssessment = async (value) => {\n    const date = value.date._d;\n    const descp = value.descp;\n    let { assessments, classInfo } = this.state;\n    const classCode = classInfo.classCode;\n    const roomId = uuid();\n    const assessmentObj = value.assessmentName;\n    const result = await addAssessment(\n      classCode,\n      assessmentObj,\n      roomId,\n      date,\n      descp\n    );\n    if (result == false) {\n      alert(\"Error, please try again later\");\n    } else {\n      if (assessments == false) {\n        assessments = { assessments: [{ assessmentObj, descp, roomId }] };\n      } else {\n        assessments.assessments.push({ assessmentObj, descp, roomId });\n      } //end if assessments\n      this.handleOk();\n    } //end if result\n    this.setState({ assessments });\n  };\n\n  //This function handles the show button in modal\n  showModal = () => {\n    this.setState({ visible: true });\n  }; //end showModal\n\n  //This function handles the ok button in modal\n  handleOk = () => {\n    this.setState({ visible: false });\n  }; //end handleOk\n\n  //This function handles the cancel button in modal\n  handleCancel = () => {\n    this.setState({ visible: false });\n  }; //end handleCancel\n\n  //This function will delete the specfic assessment\n  //roomId:String:room code\n  delete = async (roomId) => {\n    const { classInfo } = this.state;\n    const classCode = classInfo.classCode;\n    await deleteAssessment(classCode, roomId);\n    this.getAllAssessment();\n  }; //end delete\n\n  //This function will render the assessments\n  //return:Array:contains the jsx expression of each assessment\n  renderAssessments = () => {\n    const { assessments, classInfo } = this.state;\n    const { status } = this.context;\n    const classCode = classInfo.classCode;\n    if (assessments == false) return <h2>No Assessments</h2>; //end if assessments\n    return assessments.assessments.map((val, idx) => {\n      const { assessmentObj, roomId, descp, socketId } = val;\n      return (\n        <Card\n          className=\"customCard\"\n          key={idx}\n          type=\"inner\"\n          title={assessmentObj}\n          extra={\n            socketId != null || status.role == true ? (\n              <div>\n                {\n                  status.role == true ? (\n                    <Button\n                      type=\"primary\"\n                      style={{ marginRight: \"10px\" }}\n                      onClick={() => this.delete(roomId)}\n                    >\n                      Delete Assessment\n                    </Button>\n                  ) : (\n                    \"\"\n                  ) //end if status.role\n                }\n                <Link\n                  to={{\n                    pathname: \"/room\",\n                    state: {\n                      roomID: roomId,\n                      name: status.nickname,\n                      code: classCode,\n                      socketId,\n                      role: status.role,\n                    },\n                  }}\n                >\n                  Join Assessment Room\n                </Link>\n              </div>\n            ) : (\n              <Link disabled>{socketId}Assessment Not Open</Link>\n            ) //end if socketId and socket.role\n          }\n        >\n          {descp}\n        </Card>\n      );\n    }); //end mapping assessments\n  }; //end renderAssessments\n  //This function will render jsx depending on role\n  //return:JSX:contains jsx expression of teacher role parts\n  getRole = () => {\n    const { status } = this.context;\n    if (status != null) {\n      if (status.role) {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={this.showModal}\n            ></Button>\n            <Modal\n              title=\"Add Assessment\"\n              visible={this.state.visible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n            >\n              <Form\n                onFinish={this.addAssessmentOnClick}\n                name=\"dynamic_rule\"\n                labelCol={{\n                  span: 2,\n                }}\n                wrapperCol={{\n                  span: 14,\n                }}\n                layout=\"horizontal\"\n              >\n                <Form.Item\n                  name=\"assessmentName\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input Assessment Name\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Please input Assessment Name\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"descp\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input Description \",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Please input Description\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter a date\",\n                    },\n                  ]}\n                >\n                  <DatePicker />\n                </Form.Item>\n                <Form.Item>\n                  <Button\n                    className=\"addButton\"\n                    htmlType=\"submit\"\n                    type=\"primary\"\n                  >\n                    Add Assessment\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Modal>\n          </div>\n        );\n      } else {\n        return <div>Student</div>;\n      } //end if status.role\n    } //end if status\n  }; //end getRole\n\n  //This function will get all assements on component mount\n  componentDidMount() {\n    this.getAllAssessment();\n  } //end componentDidMount\n\n  //This function will render the assessment component\n  //return:JSX:contians the jsx ecpression of the assessment componenet\n  render() {\n    const { assessments } = this.state;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SideBar state={this.props.location.state.collapse} />\n        <Layout className=\"site-layout\">\n          <HeaderSection />\n          <Content style={{ margin: \"10px 16px\" }}>\n            <Card title=\"Assessments\" extra={this.getRole()}>\n              {assessments == undefined ? (\n                <div className=\"loader\">\n                  <Spin size=\"large\" tip=\"Loading...\" />\n                </div>\n              ) : (\n                this.renderAssessments()\n              )}\n            </Card>\n          </Content>\n          <FooterSection />\n        </Layout>\n      </Layout>\n    );\n  } //end render\n} //end class Assessment\n\nexport default Assessment;\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport { addTeacherSocket } from \"../utils/Firestore\";\r\nimport { pearson } from \"../utils/algoritims\";\r\nimport { Modal, Button, Image } from \"antd\";\r\nimport \"./room.css\";\r\n\r\n//This function will create the video component\r\n//props:Object:contains the parent component values\r\n//return:JSX:contains the jsx expression of video component\r\nconst Video = (props) => {\r\n  const ref = useRef();\r\n  const [visible, setVisible] = useState(false);\r\n  const [url, setUrl] = useState();\r\n\r\n  //This function will create stream using the peer object at component mount\r\n  useEffect(() => {\r\n    props.peer.peer.on(\"stream\", (stream) => {\r\n      ref.current.srcObject = stream;\r\n    });\r\n    let target = document.getElementById(\"d\" + props.id);\r\n\r\n    //creaitng mutationobserver\r\n    let observer = new MutationObserver(function (mutations) {\r\n      mutations.forEach(function (mutation) {\r\n        takepicture();\r\n      });\r\n    });\r\n\r\n    let config = {\r\n      childList: true,\r\n      subtree: true,\r\n      characterData: true,\r\n    };\r\n\r\n    observer.observe(target, config);\r\n  }, []); //end useEffect\r\n\r\n  //This function handles the show button in modal\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  }; //end showModal\r\n\r\n  //This function handles the ok button in modal\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  }; //end handleOk\r\n\r\n  //This function handles the cancel button in modal\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  }; //end handleCancel\r\n\r\n  //This function will take picture when the percent cheating is greater than 60\r\n  const takepicture = () => {\r\n    const percentTxt = parseInt(\r\n      document\r\n        .getElementById(\"d\" + props.id)\r\n        .innerText.replace(\"Cheating %: \", \"\")\r\n    );\r\n\r\n    if (percentTxt >= 60) {\r\n      var canvas = document.createElement(\"CANVAS\");\r\n      var context = canvas.getContext(\"2d\");\r\n      context.drawImage(ref.current, 0, 0, canvas.width, canvas.height);\r\n      var data = canvas.toDataURL(\"image/png\");\r\n      setUrl(data);\r\n    } //end if percentTxt\r\n  }; //end takepicture\r\n\r\n  return (\r\n    <div\r\n      style={{ width: vid.width + 30, height: vid.height + 30 }}\r\n      className=\"grid-item\"\r\n    >\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td id={\"d\" + props.id}>Cheating %: 0</td>\r\n            <td style={{ marginLeft: \"20px\" }} id={props.id}></td>\r\n            <td\r\n              style={{ marginLeft: \"20px\" }}\r\n              className=\"cheating_blink\"\r\n              id={\"c\" + props.id}\r\n            ></td>\r\n            <td>\r\n              {\" \"}\r\n              <Button type=\"primary\" onClick={showModal}>\r\n                Get Cheating Image\r\n              </Button>\r\n              <Modal\r\n                title=\"Cheating Image\"\r\n                visible={visible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                width={vid.width + 50}\r\n                height={vid.height}\r\n              >\r\n                <Image\r\n                  width={vid.width}\r\n                  height={vid.height}\r\n                  id={\"img\" + props.id}\r\n                  src={url}\r\n                  alt=\"Not Available\"\r\n                />\r\n              </Modal>\r\n            </td>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <video\r\n        width={vid.width}\r\n        height={vid.height}\r\n        playsInline\r\n        autoPlay\r\n        ref={ref}\r\n      ></video>\r\n    </div>\r\n  );\r\n}; //end Video\r\n\r\nlet vid = {\r\n  height: window.innerHeight / 1,\r\n  width: window.innerWidth / 1,\r\n}; //video size\r\n\r\n//This function will create a Room component\r\n//props:Object:contains the parent component values\r\n//return:JSX:contains the room component jsx expression\r\nconst Room = (props) => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [visible, setVisible] = useState();\r\n  let checker = 0;\r\n  let currentImage = [];\r\n  const socketRef = useRef();\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const { name, roomID, code, socketId, role } = props.location.state;\r\n  let counter = 1;\r\n  const endPoint = {\r\n    local: \"http://localhost:8000/\",\r\n    prod: \"https://isugapi.herokuapp.com/\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(endPoint.prod);\r\n    navigator.mediaDevices\r\n      .getDisplayMedia({\r\n        video: {\r\n          width: 1280,\r\n          height: 720,\r\n          frameRate: {\r\n            ideal: 10,\r\n            max: 15,\r\n          },\r\n        },\r\n        cursor: true,\r\n        mimeType: \"video/webm; codecs=vp9\",\r\n      })\r\n      .then((stream) => {\r\n        userVideo.current.srcObject = stream;\r\n\r\n        if (role == false) {\r\n          setInterval(() => {\r\n            try {\r\n              if (checker >= 1) {\r\n                const canvas = document.getElementById(\"canvas\");\r\n                const ctx = canvas.getContext(\"2d\");\r\n                ctx.drawImage(userVideo.current, 0, 0, 16, 12);\r\n                const imageData = ctx.getImageData(\r\n                  0,\r\n                  0,\r\n                  canvas.width,\r\n                  canvas.height\r\n                );\r\n                let data = imageData.data;\r\n\r\n                if (checker == 1 || checker == 2) {\r\n                  currentImage = imageData.data;\r\n                  checker++;\r\n                }\r\n                const result = pearson(data, currentImage);\r\n                const date = new Date().getTime();\r\n                socketRef.current.emit(\"sendMsg\", {\r\n                  data: result,\r\n                  id: socketId,\r\n                  myId: socketRef.current.id,\r\n                  time: date,\r\n                  name: name,\r\n                });\r\n              }\r\n            } catch (e) {}\r\n          }, 1000);\r\n        }\r\n\r\n        socketRef.current.emit(\"join room\", roomID);\r\n\r\n        if (role == true) {\r\n          addSocket(socketRef.current.id);\r\n        }\r\n        socketRef.current.on(\"all users\", (users) => {\r\n          const peers = [];\r\n\r\n          users.forEach((userID) => {\r\n            if (socketId == userID) {\r\n              const peer = createPeer(userID, socketRef.current.id, stream);\r\n              peersRef.current.push({\r\n                id: userID,\r\n                peer,\r\n              });\r\n              peers.push({ peer, id: userID });\r\n            }\r\n          });\r\n          setPeers(peers);\r\n        });\r\n        socketRef.current.on(\"cheater\", (payload) => {\r\n          try {\r\n            let data = document.getElementById(payload.myId);\r\n            let count = document.getElementById(\"d\" + payload.myId);\r\n\r\n            data.innerText = \"Name: \" + payload.name;\r\n            if (typeof payload.data === \"number\") {\r\n              const percent = parseInt(Math.abs(payload.data * 100 - 100));\r\n\r\n              if (percent >= 60) {\r\n                document.getElementById(\"c\" + payload.myId).innerText =\r\n                  \"Cheating !\";\r\n                setTimeout(() => {\r\n                  document.getElementById(\"c\" + payload.myId).innerText = \"\";\r\n                }, 5000);\r\n              }\r\n              count.innerText = `Cheating %: ${percent}`;\r\n            }\r\n          } catch (e) {}\r\n        });\r\n        if (role == false) {\r\n          socketRef.current.on(\"startChecker\", (payload) => {\r\n            if (payload.roomId == roomID) {\r\n              checker++;\r\n            }\r\n          });\r\n        }\r\n\r\n        socketRef.current.on(\"user joined\", (payload) => {\r\n          const peer = addPeer(payload.signal, payload.callerID, stream);\r\n          peersRef.current.push({\r\n            id: payload.callerID,\r\n            peer,\r\n          });\r\n          counter++;\r\n          calcPlayerSize();\r\n\r\n          setPeers((users) => [...users, { peer, id: payload.callerID }]);\r\n        });\r\n\r\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.id == payload.id);\r\n          if (item) {\r\n            item.peer.signal(payload.signal);\r\n          }\r\n        });\r\n\r\n        socketRef.current.on(\"user disconnected\", (id) => {\r\n          const peerObj = peersRef.current.find((p) => p.id == id);\r\n          if (peerObj) {\r\n            peerObj.peer.destroy();\r\n            counter--;\r\n            calcPlayerSize();\r\n          }\r\n\r\n          const peers = peersRef.current.filter((p) => p.id !== id);\r\n          peersRef.current = peers;\r\n          setPeers(peers);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const addSocket = (id) => {\r\n    addTeacherSocket(id, code, roomID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socketRef.current.close();\r\n    };\r\n  }, []);\r\n\r\n  function createPeer(userToSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      console.log(signal);\r\n      socketRef.current.emit(\"sending signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n      });\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  //This function will add peer\r\n  //incomingSignal:\r\n  function addPeer(incomingSignal, callerID, stream) {\r\n    console.log(stream);\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    //This function will be called on peer signal\r\n    //signal:Object:contains peer signal object\r\n    peer.on(\"signal\", (signal) => {\r\n      console.log(signal);\r\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\r\n    }); //end function\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  //this function will calcualte the video size\r\n  const calcPlayerSize = () => {\r\n    //calculations\r\n    let width = window.innerWidth / counter;\r\n    let height = window.innerHeight / counter;\r\n    if (height > 150 || width > 150) {\r\n      vid.height = height;\r\n      vid.width = width;\r\n    } //end if height and width\r\n  }; //end calcPlayerSize\r\n  //This function handles the show button in modal\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  }; //end showModal\r\n\r\n  //This function handles the ok button in modal\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  }; //end handleOk\r\n\r\n  //This function handles the cancel button in modal\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  }; //end handleCancel\r\n\r\n  //This function will start checking algorthim on students\r\n  const startChecker = () => {\r\n    socketRef.current.emit(\"checker\", { roomId: roomID });\r\n    handleCancel();\r\n  }; //end startChecker\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div\r\n        style={\r\n          role == true\r\n            ? { width: vid.width + 30, height: vid.height + 30 }\r\n            : { width: vid.width, height: vid.height }\r\n        }\r\n        className=\"grid-item\"\r\n      >\r\n        <table>\r\n          <tr>\r\n            <td>\r\n              <canvas\r\n                style={{ display: \"none\" }}\r\n                id=\"canvas\"\r\n                width=\"16\"\r\n                height=\"12\"\r\n              ></canvas>\r\n            </td>\r\n\r\n            {\r\n              role == true ? (\r\n                <td>\r\n                  <Button type=\"primary\" onClick={showModal}>\r\n                    Start Cheater Checker\r\n                  </Button>\r\n                  <Modal\r\n                    title=\"Cheating Image\"\r\n                    visible={visible}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                  >\r\n                    <p> Click Start when all students are on test screen</p>\r\n                    <Button type=\"primary\" onClick={startChecker}>\r\n                      Start\r\n                    </Button>\r\n                  </Modal>\r\n                </td>\r\n              ) : (\r\n                \"\"\r\n              ) //end if role\r\n            }\r\n\r\n            <td style={{ marginLeft: \"100px\" }}>{\"Name: \" + name}</td>\r\n          </tr>\r\n        </table>\r\n\r\n        <video\r\n          width={vid.width}\r\n          height={vid.height}\r\n          playsInline\r\n          autoPlay\r\n          ref={userVideo}\r\n        ></video>\r\n      </div>\r\n\r\n      {\r\n        role == true\r\n          ? peers.map((peer) => {\r\n              return <Video key={peer.id} id={peer.id} peer={peer} />;\r\n            })\r\n          : \"\" //end if role\r\n      }\r\n    </div>\r\n  );\r\n}; //end Room\r\n\r\nexport default Room;\r\n","//Noel Gregory\r\n//2021-03-30\r\n//This file will create a whiteboard component\r\n\r\n//imports\r\nimport React, { useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./room.css\";\r\nimport Sketch from \"react-p5\";\r\n\r\n//This function will render the whiteboard component\r\n//props:Object:contains props form parent component\r\nconst Whiteboard = (props) => {\r\n  const [color, setColor] = useState(\"#000000\");\r\n  const [weight, setWeight] = useState(3);\r\n  const socketRef = useRef();\r\n  const { roomID, role } = props.location.state;\r\n  const endPoint = {\r\n    local: \"http://localhost:8000/\",\r\n    prod: \"https://isugapi.herokuapp.com/\",\r\n  };\r\n  let p = null; //contains p5 instance\r\n\r\n  //This function will setup the canvas and socket.on\r\n  //p5:Object:contains in p5 Object\r\n  //parent:Object:contains p5 parent\r\n  const setup = (p5, parent) => {\r\n    socketRef.current = io.connect(endPoint.prod);\r\n    socketRef.current.on(\"sendClear\", (payload) => {\r\n      if (payload.room == roomID) {\r\n        p.background(240);\r\n      } //end if payload.room\r\n    });\r\n    socketRef.current.on(\"sendCoord\", (coord) => {\r\n      if (roomID == coord.room) {\r\n        //calculations\r\n        const { x, y, px, py } = coord.data;\r\n        const { c, w, widthSize, heighthSize } = coord.settings;\r\n        let x1 = p5.map(x, 0, widthSize, 0, window.innerWidth);\r\n        let y1 = p5.map(\r\n          y,\r\n          0,\r\n          heighthSize,\r\n          0,\r\n          window.innerHeight - window.innerHeight / 18\r\n        );\r\n        let x2 = p5.map(px, 0, widthSize, 0, window.innerWidth);\r\n        let y2 = p5.map(\r\n          py,\r\n          0,\r\n          heighthSize,\r\n          0,\r\n          window.innerHeight - window.innerHeight / 18\r\n        );\r\n        //draw\r\n        p5.stroke(c);\r\n        p5.strokeWeight(w);\r\n        p5.line(x1, y1, x2, y2);\r\n      } //end if roomID\r\n    });\r\n    const canvas = p5\r\n      .createCanvas(\r\n        window.innerWidth,\r\n        window.innerHeight - window.innerHeight / 18\r\n      )\r\n      .parent(parent);\r\n    if (role == true) {\r\n      canvas.addClass(\"drawTeacherCanvas\");\r\n    } else {\r\n      canvas.addClass(\"drawStudentCanvas\");\r\n    } //end if role\r\n    p = p5;\r\n    p5.background(240);\r\n  }; //end setup\r\n\r\n  //This fucntion will clear the canvas\r\n  const clear = () => {\r\n    p.background(240);\r\n    //emit\r\n    socketRef.current.emit(\"clear\", {\r\n      room: roomID,\r\n    });\r\n  }; //end clear\r\n\r\n  //This function will draw a line where the mouse position is\r\n  //p5:Object:p5 object\r\n  function mouseDragged(p5) {\r\n    p5.stroke(color);\r\n    p5.strokeWeight(weight);\r\n    connection(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\r\n    p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\r\n    p = p5;\r\n  } //end mouseDragged\r\n\r\n  //This function will send  mouse position to students\r\n  //x:Integer:x position\r\n  //y:Integer:y position\r\n  //px:Integer:previous x position\r\n  //py:Integer:previous y position\r\n  const connection = (x, y, px, py) => {\r\n    socketRef.current.emit(\"coord\", {\r\n      data: { x, y, px, py },\r\n      settings: {\r\n        c: color,\r\n        w: weight,\r\n        widthSize: window.innerWidth,\r\n        heighthSize: window.innerHeight - window.innerHeight / 18,\r\n      },\r\n      room: roomID,\r\n    });\r\n  }; //end connection\r\n\r\n  return (\r\n    <div>\r\n      {role == true ? (\r\n        <div>\r\n          {\" \"}\r\n          <div className=\"optionToDraw\">\r\n            <label>Color:</label>\r\n            <button onClick={clear}>Clear Screen</button>\r\n            <input\r\n              type=\"color\"\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              min={1}\r\n              max={100}\r\n              value={weight}\r\n              onChange={(e) => setWeight(e.target.value)}\r\n            />\r\n          </div>\r\n          <Sketch setup={setup} mouseDragged={mouseDragged} />\r\n        </div>\r\n      ) : (\r\n        <Sketch setup={setup} />\r\n      )}\r\n    </div>\r\n  );\r\n}; //end Whiteboard\r\n\r\nexport default Whiteboard;\r\n","//Noel Gregory\r\n//2021-03-30\r\n//This class will create the settings component\r\n\r\n//imports\r\nimport React, { Component } from \"react\";\r\nimport FooterSection from \"./FooterSection\";\r\nimport HeaderSection from \"./HeaderSection\";\r\nimport { Avatar, Layout, Card, Button, Form, Input } from \"antd\";\r\nimport SiderBar from \"./SideBar\";\r\nimport { AuthContext } from \"../utils/Auth\";\r\nimport { getUserRole, updateUserDetails } from \"../utils/Firestore\";\r\nconst { Content } = Layout;\r\nconst { TextArea } = Input;\r\n\r\nclass Settings extends Component {\r\n  static contextType = AuthContext;\r\n\r\n  //This function will create in the global state variables\r\n  //props:Object:contains props from parent component\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { photoUrl: null, userDetail: null };\r\n  } //end constructor\r\n\r\n  //This function will call updateDetail function on button press\r\n  //values:Object:contains the valeus from form\r\n  onFinish = (values) => {\r\n    const { currentUser } = this.context;\r\n    this.updateDetail(currentUser.uid, values.nickname, values.status);\r\n  }; //end onFinish\r\n\r\n  //This function wll update the user details\r\n  //uid:String:user id\r\n  //nickname:String:user name\r\n  //status:String: user status\r\n  updateDetail = async (uid, nickname, status) => {\r\n    await updateUserDetails(uid, nickname, status);\r\n  }; //end updateDetial\r\n\r\n  //This function will get the user detials form firestore\r\n  //uid:String:user id\r\n  getUserDetails = async (uid) => {\r\n    const data = await getUserRole(uid);\r\n    this.setState({ userDetail: data });\r\n  }; //end getUserDetails\r\n\r\n  //This function will get the user details\r\n  componentDidMount() {\r\n    const { currentUser } = this.context;\r\n    this.getUserDetails(currentUser.uid);\r\n    this.setState({ photoUrl: currentUser.photoURL });\r\n  } //end componentDidMount\r\n\r\n  //This function will render the setting component\r\n  //return:JSX:contains the jsx expression fo settings component\r\n  render() {\r\n    const { photoUrl, userDetail } = this.state;\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <SiderBar state={this.props.location.state} />\r\n        <Layout className=\"site-layout\">\r\n          <HeaderSection />\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            {userDetail != null ? (\r\n              <Card\r\n                className=\"customCard\"\r\n                key={\"add\"}\r\n                type=\"inner\"\r\n                title=\"Profile\"\r\n              >\r\n                <Avatar size=\"large\" src={photoUrl} />\r\n                <Form name=\"basic\" onFinish={this.onFinish}>\r\n                  <Form.Item\r\n                    name=\"nickname\"\r\n                    label=\"Name\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please input a valid nickname\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input defaultValue={userDetail.nickname} />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"status\"\r\n                    label=\"Status\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please input a valid status\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <TextArea autoSize defaultValue={userDetail.status} />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                      Update Profile\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </Card>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Content>\r\n          <FooterSection />\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  } //end render\r\n} //end class Settings\r\n\r\nexport default Settings;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Main from \"./Main\";\nimport AuthProvider from \"../utils/Auth\";\nimport SelectRole from \"./SelectRole\";\nimport PrivateRoute from \"../utils/PrivateRoute\";\nimport ExtraInfo from \"./ExtraInfo\";\nimport Classes from \"./Classes\";\nimport Assessment from \"./Assessment\";\nimport Room from \"./room\";\nimport Whiteboard from \"./whiteboard\";\nimport Settings from \"./Settings\";\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <Router>\n        <AuthProvider>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <PrivateRoute exact path=\"/classes\" component={Classes} />\n          <PrivateRoute exact path=\"/setting\" component={Settings} />\n          <PrivateRoute path=\"/room\" component={Room} />\n          <PrivateRoute exact path=\"/assessment\" component={Assessment} />\n          <PrivateRoute exact path=\"/whiteboard\" component={Whiteboard} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/main\" component={Main} />\n          <Route exact path=\"/selectrole\" component={SelectRole} />\n          <Route exact path=\"/extrainfo\" component={ExtraInfo} />\n        </AuthProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}