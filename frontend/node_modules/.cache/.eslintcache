[{"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\index.js":"1","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\App.js":"4","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\Home.js":"5","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\Login.js":"6","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\PrivateRoute.js":"7","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\utils\\Auth.js":"8","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\utils\\base.js":"9","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\index.js":"10","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\serviceWorker.js":"11","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\App.js":"12","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\PrivateRoute.js":"13","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\Auth.js":"14","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Home.js":"15","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Login.js":"16","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Main.js":"17","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\SelectRole.js":"18","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Classes.js":"19","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\ExtraInfo.js":"20","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Assessment.js":"21","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\base.js":"22","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\Firestore.js":"23","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\FooterSection.js":"24","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\HeaderSection.js":"25","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Navbar.js":"26","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\SideBar.js":"27","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\room.js":"28","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\whiteboard.js":"29","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Settings.js":"30","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\algorithm.js":"31"},{"size":463,"mtime":1613094876907,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":4951,"mtime":1585488580000,"results":"35","hashOfConfig":"33"},{"size":536,"mtime":1613095648203,"results":"36","hashOfConfig":"33"},{"size":227,"mtime":1613094862257,"results":"37","hashOfConfig":"33"},{"size":649,"mtime":1613095630672,"results":"38","hashOfConfig":"33"},{"size":533,"mtime":1613094860284,"results":"39","hashOfConfig":"33"},{"size":612,"mtime":1613094861248,"results":"40","hashOfConfig":"33"},{"size":403,"mtime":1613094806717,"results":"41","hashOfConfig":"33"},{"size":463,"mtime":1613963237000,"results":"42","hashOfConfig":"43"},{"size":4951,"mtime":1613963237000,"results":"44","hashOfConfig":"43"},{"size":1624,"mtime":1617240673482,"results":"45","hashOfConfig":"43"},{"size":764,"mtime":1617222797008,"results":"46","hashOfConfig":"43"},{"size":2879,"mtime":1617240421631,"results":"47","hashOfConfig":"43"},{"size":5429,"mtime":1617240364816,"results":"48","hashOfConfig":"43"},{"size":2901,"mtime":1617238989494,"results":"49","hashOfConfig":"43"},{"size":569,"mtime":1617066415347,"results":"50","hashOfConfig":"43"},{"size":2013,"mtime":1617239943956,"results":"51","hashOfConfig":"43"},{"size":8862,"mtime":1617240684875,"results":"52","hashOfConfig":"43"},{"size":2710,"mtime":1617238827092,"results":"53","hashOfConfig":"43"},{"size":8684,"mtime":1617238859103,"results":"54","hashOfConfig":"43"},{"size":600,"mtime":1617192589326,"results":"55","hashOfConfig":"43"},{"size":7771,"mtime":1617240354116,"results":"56","hashOfConfig":"43"},{"size":566,"mtime":1617222806601,"results":"57","hashOfConfig":"43"},{"size":740,"mtime":1617238857602,"results":"58","hashOfConfig":"43"},{"size":467,"mtime":1617222853565,"results":"59","hashOfConfig":"43"},{"size":2228,"mtime":1617222850867,"results":"60","hashOfConfig":"43"},{"size":14757,"mtime":1617241218764,"results":"61","hashOfConfig":"43"},{"size":4386,"mtime":1617241034139,"results":"62","hashOfConfig":"43"},{"size":3933,"mtime":1617222808501,"results":"63","hashOfConfig":"43"},{"size":3424,"mtime":1617240141900,"results":"64","hashOfConfig":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1635bik",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"jbey44",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"87"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"87"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"87"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"87"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"87"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"87"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"87"},"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\index.js",[],["142","143"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\reportWebVitals.js",[],["144","145"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\App.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\Home.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\Login.js",["146"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\utils\\Auth.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\utils\\base.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\index.js",[],["147","148"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\App.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\Auth.js",["149","150"],"//Noel Gregory\n//2021-03-30\n//This file will check if user is authenticated\n\n//imports\nimport React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport { Spin } from \"antd\";\nimport { checkUserExist, getUserRole } from \"./Firestore\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const AuthContext = React.createContext(); //create react context\n\nclass AuthProvider extends Component {\n  state = {\n    currentUser: null,\n    photoUrl: null,\n    loader: true,\n    status: null,\n    sendUser: false,\n  };\n  style = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"75vh\",\n  };\n\n  //This function will create auth trigger\n  componentDidMount() {\n    app.auth().onAuthStateChanged((user) => {\n      if (user != null) {\n        this.setState({\n          currentUser: user,\n          status: null,\n        });\n      } else {\n        this.setState({\n          currentUser: null,\n          loader: false,\n        });\n      } //end if user\n    });\n  } //end componentDidMount\n\n  //This function will check if a user exists\n  checkUser = async () => {\n    let { currentUser, sendUser } = this.state;\n    const { history } = this.props;\n    if (currentUser != null && sendUser == false) {\n      let res = await checkUserExist(currentUser.uid);\n      let temp = \"\";\n      if (res) {\n        temp = \"/selectrole\";\n      } else {\n        temp = \"/\";\n      } //end if res\n      sendUser = true;\n      history.push(temp);\n      this.setState({ currentUser, sendUser });\n    } //end if currentUser and sendUser\n  }; //end checkUser\n\n  //This function will get user role\n  //onForce:Boolean:force user to get role\n  getRole = async (onForce) => {\n    const { currentUser, status } = this.state;\n    if (currentUser != null && status == null) {\n      const data = await getUserRole(currentUser.uid);\n      this.setState({ status: data, loader: false });\n    } else if (onForce == true) {\n      const data = await getUserRole(currentUser.uid);\n      this.setState({ status: data, loader: false });\n    } //end if currentUser and status\n  }; //end getRole\n\n  //This function will check if user exist and get there role\n  componentDidUpdate() {\n    this.checkUser();\n    this.getRole();\n  } //end componentDidUpdate\n\n  //This function will render the auth component\n  //return:String:contains the auth render component\n  render() {\n    const { currentUser, loader, status } = this.state;\n    if (loader) {\n      return (\n        <div style={this.style}>\n          <Spin size=\"large\" tip=\"Loading...\" />\n        </div>\n      );\n    } else {\n      return (\n        <AuthContext.Provider\n          value={{ currentUser, status, getRole: this.getRole }}\n        >\n          {this.props.children}\n        </AuthContext.Provider>\n      );\n    } //end loader\n  } //end render\n} //endclass AuthProvider\n\nexport default withRouter(AuthProvider);\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Home.js",["151","152","153","154","155","156","157"],"// Noel Gregory\n//2021-03-29\n//This class is made for the home route and will return the home page in jsx\n\n//imports\nimport React, { Component } from \"react\";\nimport { AuthContext } from \"../utils/Auth\";\nimport { getLatestAssessments, joinClass } from \"../utils/Firestore\";\nimport \"./ui.css\";\nimport { Layout, Card, Spin, Button, Form, Input, Modal } from \"antd\";\nimport SiderBar from \"./SideBar\";\nimport FooterSection from \"./FooterSection\";\nimport HeaderSection from \"./HeaderSection\";\nimport { convertMS } from \"../utils/algorithm\";\nconst { Content } = Layout;\n\nclass Home extends Component {\n  static contextType = AuthContext;\n  //This function will be called when the class instance is created\n  //props:Object:holds values given by parent components\n  constructor(props) {\n    super(props);\n    this.state = { latest: undefined, visible: false }; //creating state variables\n  } //end constructor\n\n  //This function will get the latest assesments from the database\n  //code:String:class code\n  getLatestAssesment = async (code) => {\n    const { status } = this.context;\n    if (code != undefined) {\n      if (status[\"Classes\"] == undefined) {\n        status[\"Classes\"] = [];\n      } //end if status[\"Classes\"]\n      status[\"Classes\"].push(code);\n    } //end code\n\n    let latest = await getLatestAssessments(status.Classes); // get latest assessments\n    if (latest == undefined) latest = false; // end if latest\n    this.setState({ latest });\n  }; //end getLatestAssesment\n\n  //This function will render the lastest assesments from the database\n  //return:String:returns the latest assements using jsx expressions\n  renderLatest = () => {\n    const { latest } = this.state;\n    if (latest == false) return <h3>No Latest Assessment</h3>; //end if latest\n    return latest.map((val, idx) => {\n      return (\n        <Card\n          className=\"customCard\"\n          key={idx}\n          type=\"inner\"\n          title={val.assessmentObj}\n          extra={\n            val.elapsedTime > 0 ? convertMS(val.elapsedTime) : \"Assessment Done\"\n          }\n        >\n          {val.descp}\n        </Card>\n      );\n    }); //end mapping latest\n  }; //end renderLatest\n\n  //This function handles the show button in modal\n  showModal = () => {\n    this.setState({ visible: true });\n  }; //end showModal\n\n  //This function handles the ok button in modal\n  handleOk = () => {\n    this.setState({ visible: false });\n  }; //end handleOk\n\n  //This function handles the cancel button in modal\n  handleCancel = () => {\n    this.setState({ visible: false });\n  }; //end handleCancel\n\n  //This function will add a class to the database\n  //values:Object:holds values from the form\n  addToClass = async (values) => {\n    const { currentUser, getRole } = this.context;\n    if (values != null) {\n      const result = await joinClass(values.code, currentUser.uid); //calling joinClass to add class to firestore\n      if (result != undefined) {\n        alert(\"This Class Does Not Exist\"); //alert if class doesnt exist\n      } //end if result\n    } //end if values\n    getRole(true);\n    this.getLatestAssesment(values.code);\n    this.handleCancel();\n  }; //end addToClass\n\n  //This function will check if the user is a student and return student info\n  //return:String:this returns a jsx expression if the user is a student\n  getRole = () => {\n    const { status } = this.context;\n    if (status.role == false) {\n      return (\n        <div>\n          <Button type=\"primary\" onClick={this.showModal}>\n            Join Class\n          </Button>\n          <Modal\n            title=\"Join Class\"\n            visible={this.state.visible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n          >\n            <Form onFinish={this.addToClass} name=\"dynamic_rule\">\n              <Form.Item\n                name=\"code\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input class code\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Please input class code\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Join Class\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </div>\n      );\n    } //end if status.role\n  }; //end getRole\n\n  //This function is called at component mount\n  componentDidMount() {\n    this.getLatestAssesment();\n  } //end componentDidMount\n\n  //This function will render the home component\n  //return:String:contains jsx expression of home component\n  render() {\n    const { latest } = this.state;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SiderBar state={this.props.location.state} />\n        <Layout className=\"site-layout\">\n          <HeaderSection />\n          <Content style={{ margin: \"10px 16px\" }}>\n            <Card title=\"Latest Assessments\" extra={this.getRole()}>\n              {\n                latest == undefined ? (\n                  <div className=\"loader\">\n                    <Spin size=\"large\" tip=\"Loading...\" />\n                  </div>\n                ) : (\n                  this.renderLatest()\n                ) //end if latest\n              }\n            </Card>\n          </Content>\n          <FooterSection />\n        </Layout>\n      </Layout>\n    );\n  } //end render\n} //end class Home\n\nexport default Home;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Login.js",["158"],"//Noel Gregory\n//2021-03-29\n//This class will create a login page\n\n//imports\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport { app } from \"../utils/base.js\";\nimport firebase from \"firebase\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport Navbar from \"./Navbar\";\nimport { Layout, Steps } from \"antd\";\nimport FooterSection from \"./FooterSection\";\nconst { Content } = Layout;\n\nclass Login extends Component {\n  static contextType = AuthContext;\n\n  //This function will handle google login\n  googleLogin = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    app.auth().signInWithRedirect(provider); //google sign in\n  }; //end googleLogin\n\n  //This function will render the login page\n  //return:String:returns thr login page\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navbar />\n        <Content style={{ padding: \"5vh\" }}>\n          <div className=\"site-layout-content\">\n            <h1>Log in</h1>\n            <button\n              type=\"button\"\n              onClick={this.googleLogin}\n              className=\"google-button\"\n            >\n              <span className=\"google-button__icon\">\n                <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\"\n                    id=\"Shape\"\n                    fill=\"#EA4335\"\n                  />\n                  <path\n                    d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\"\n                    id=\"Shape\"\n                    fill=\"#FBBC05\"\n                  />\n                  <path\n                    d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\"\n                    id=\"Shape\"\n                    fill=\"#4285F4\"\n                  />\n                  <path\n                    d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\"\n                    fill=\"#34A853\"\n                  />\n                </svg>\n              </span>\n              <span className=\"google-button__text\">Sign in with Google</span>\n            </button>\n          </div>\n        </Content>\n        <FooterSection />\n      </Layout>\n    );\n  } //end render\n} //end class Login\n\nexport default Login;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Main.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\SelectRole.js",["159"],"//Noel Gregory\n//2021-03-29\n//This class will create the select role component\n\n//imports\nimport React, { Component } from \"react\";\nimport { addUser } from \"../utils/Firestore\";\nimport Navbar from \"./Navbar\";\nimport { Layout, Steps, Button } from \"antd\";\nimport FooterSection from \"./FooterSection\";\nimport { AuthContext } from \"../utils/Auth\";\nconst { Content } = Layout;\nconst { Step } = Steps;\n\nclass SelectRole extends Component {\n  static contextType = AuthContext;\n  //This function will handle selecting role\n  //val:Object:holds the object from the form\n  selectRole = async (val) => {\n    const { currentUser } = this.context;\n    if (val == \"teacher\") {\n      await addUser(currentUser.uid, true); // add a role to user\n    } else {\n      await addUser(currentUser.uid, false);\n    } //end if val\n    this.props.history.push(\"/extrainfo\"); //push to history\n  }; //end selectRole\n  //This function will render the select role page\n  //return:String:returns the select role page\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navbar />\n        <Content style={{ padding: \"5vh\" }}>\n          <div className=\"site-layout-content\">\n            <Steps size=\"small\" current={1}>\n              <Step title=\"Login\" />\n              <Step title=\"Select Role\" />\n              <Step title=\"Extra Info\" />\n            </Steps>\n            <Button\n              size=\"large\"\n              style={{ float: \"center\", margin: \"10px\" }}\n              onClick={() => this.selectRole(\"student\")}\n              type=\"primary\"\n            >\n              Student\n            </Button>\n            <Button\n              size=\"large\"\n              style={{ float: \"center\", margin: \"10px\" }}\n              onClick={() => this.selectRole(\"teacher\")}\n              type=\"primary\"\n            >\n              Teacher\n            </Button>\n          </div>\n        </Content>\n        <FooterSection />\n      </Layout>\n    );\n  } //end render\n} //end class SelectRole\n\nexport default SelectRole;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Classes.js",["160","161","162","163","164","165"],"//Noel Gregory\n//2021-03-30\n//This file will contains teh class component\n\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport {\n  addClass,\n  getAllClasses,\n  getNameById,\n  updateClass,\n} from \"../utils/Firestore\";\nimport FooterSection from \"./FooterSection\";\nimport HeaderSection from \"./HeaderSection\";\nimport { Layout, Card, Spin, Button, Form, Input, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport SiderBar from \"./SideBar\";\nimport { AuthContext } from \"../utils/Auth\";\nimport { Link } from \"react-router-dom\";\nimport { v1 as uuid } from \"uuid\";\nimport { generateCode } from \"../utils/algorithm\";\nconst { Content } = Layout;\n\nclass Classes extends Component {\n  static contextType = AuthContext;\n  //This function is called when class instance is made and will define state variables\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: undefined,\n      visible: [],\n    };\n  } //end constructor\n\n  //This function handle adding class from button\n  //values:Object:holds form values\n  addClass = (values) => {\n    this.createClass(values); //send info\n    this.handleCancel(0);\n  }; //end addClass\n  //This function will create new classes\n  //values:Object:contians new class info\n  createClass = async (values) => {\n    const { currentUser } = this.context;\n    let { classes } = this.state;\n    const str = generateCode();\n    const room = uuid();\n    addClass(str, values.className, currentUser.uid, room);\n    let name = await getNameById(currentUser.uid);\n\n    let data = {\n      classCode: str,\n      className: values.className,\n      owner: currentUser.uid,\n      students: null,\n      code: true,\n      owner: name,\n    };\n    if (classes == false) {\n      classes = [data];\n    } else {\n      classes.push(data);\n    } //end if classes\n    this.setState({ classes });\n  }; //end createClass\n\n  //This function will get all the classes for user\n  getClass = async () => {\n    const { currentUser, status, getRole } = this.context;\n    await getRole(true); //get user role\n    let data = await getAllClasses(currentUser.uid, status.role); //get all classess that user is in\n    if (data == null) data = false; //end if data\n    this.setState({ classes: data });\n  }; //end getClass\n\n  //This function will be called when component is mounted and will get all class user is in\n  componentDidMount() {\n    this.getClass();\n  } //end componentDidMount\n\n  //This function will handles show of modal\n  //idx:Intger:holds the id for current modal\n  showModal = (idx) => {\n    const { visible } = this.state;\n    visible[idx] = true;\n    this.setState({ visible });\n  }; //end showModal\n\n  //This function will handles ok of modal\n  //idx:Intger:holds the id for current modal\n  handleOk = (idx) => {\n    const { visible } = this.state;\n    visible[idx] = false;\n    this.setState({ visible });\n  }; //end handleOk\n\n  //This function will handles cancel of modal\n  //idx:Intger:holds the id for current modal\n  handleCancel = (idx) => {\n    const { visible } = this.state;\n    visible[idx] = false;\n    this.setState({ visible });\n  }; //end handleCancel\n\n  //This function will edit class details\n  //code:String:class code\n  //value:Object:contains class details fromt he form\n  editClass = async (code, value, idx) => {\n    this.handleCancel(idx);\n    await updateClass(code, value.className); // update the class info\n    this.getClass();\n  }; //editClass\n\n  //This function will render all the classes\n  //classes:Object:contains all the classes\n  //return:String:contains jsx expression of class section\n  renderClass = (classes) => {\n    const { status } = this.context;\n    if (classes == false) return <h2>No Class</h2>; //end if classes\n    return classes.map((val, idx) => {\n      idx++;\n      return (\n        <Card\n          className=\"customCard\"\n          key={idx}\n          type=\"inner\"\n          title={val.className}\n          extra={\n            <div>\n              <h4>\n                {\n                  val[\"code\"] != undefined ? `Class Code: ${val.classCode}` : \"\" //end if val[\"code\"]\n                }\n              </h4>\n              {\n                status.role == true ? (\n                  <Button type=\"primary\" onClick={() => this.showModal(idx)}>\n                    Edit Class{\" \"}\n                  </Button>\n                ) : (\n                  \"\"\n                ) //end if status.role\n              }\n\n              <Modal\n                title=\"Edit Class\"\n                visible={this.state.visible[idx]}\n                onOk={() => this.handleOk(idx)}\n                onCancel={() => this.handleCancel(idx)}\n              >\n                <Form\n                  onFinish={(value) =>\n                    this.editClass(val.classCode, value, idx)\n                  }\n                  layout=\"inline\"\n                  name=\"dynamic_rule\"\n                >\n                  <Form.Item name=\"className\">\n                    <h4>{`Class Code: ${val.classCode}`}</h4>\n                  </Form.Item>\n                  <Form.Item\n                    name=\"className\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input Class Name\",\n                      },\n                    ]}\n                  >\n                    <Input\n                      className=\"infoInput\"\n                      defaultValue={val.className}\n                      placeholder=\"Please input Class Name\"\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      className=\"addButton\"\n                      htmlType=\"submit\"\n                      type=\"primary\"\n                    >\n                      Update Class\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Modal>\n              <Link\n                style={{ margin: \"10px\" }}\n                to={{\n                  pathname: `/whiteboard`,\n                  state: { roomID: val.roomId, role: status.role },\n                }}\n              >\n                Whiteboard\n              </Link>\n              <Link\n                to={{\n                  pathname: \"/assessment\",\n                  state: { val, collapse: this.props.location.state },\n                }}\n              >\n                Assessment\n              </Link>\n            </div>\n          }\n        >\n          Teacher: {val.owner}\n        </Card>\n      );\n    });\n  }; //end renderClass\n\n  //This function will render jsx depending on role\n  //return:String:contains jsx expression of teacher role parts\n  getRole = () => {\n    const { status } = this.context;\n    if (status.role) {\n      return (\n        <div>\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => this.showModal(0)}\n          ></Button>\n          <Modal\n            title=\"Create Class\"\n            visible={this.state.visible[0]}\n            onOk={() => this.handleOk(0)}\n            onCancel={() => this.handleCancel(0)}\n          >\n            <Form onFinish={this.addClass} layout=\"inline\" name=\"dynamic_rule\">\n              <Form.Item\n                name=\"className\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input Class Name\",\n                  },\n                ]}\n              >\n                <Input\n                  className=\"infoInput\"\n                  placeholder=\"Please input Class Name\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Button className=\"addButton\" htmlType=\"submit\" type=\"primary\">\n                  Create Class\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </div>\n      );\n    } //end if status.role\n  }; //end getRole\n\n  //This function will render the class component\n  //return:String:contians the jsx ecpression of the class componenet\n  render() {\n    const { classes } = this.state;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SiderBar state={this.props.location.state} />\n        <Layout className=\"site-layout\">\n          <HeaderSection />\n          <Content style={{ margin: \"10px 16px\" }}>\n            <Card title=\"Classes\" extra={this.getRole()}>\n              {\" \"}\n              {\n                classes == undefined ? (\n                  <div className=\"loader\">\n                    <Spin size=\"large\" tip=\"Loading...\" />\n                  </div>\n                ) : (\n                  this.renderClass(classes)\n                ) //end if classes\n              }\n            </Card>\n          </Content>\n          <FooterSection />\n        </Layout>\n      </Layout>\n    );\n  } //end render\n} //end class Classes\n\nexport default Classes;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\ExtraInfo.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Assessment.js",["166","167","168","169","170","171","172"],"//Noel Gregory\n//2021-03-30\n//This class will create assessments component\n\n//imports\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport FooterSection from \"./FooterSection\";\nimport HeaderSection from \"./HeaderSection\";\nimport {\n  Layout,\n  Card,\n  Spin,\n  Button,\n  Form,\n  Input,\n  Modal,\n  DatePicker,\n} from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport SideBar from \"./SideBar\";\nimport { AuthContext } from \"../utils/Auth\";\nimport { Link } from \"react-router-dom\";\nimport { v1 as uuid } from \"uuid\";\nimport {\n  deleteAssessment,\n  getAssessment,\n  addAssessment,\n} from \"../utils/Firestore\";\nconst { Content } = Layout;\n\nclass Assessment extends Component {\n  static contextType = AuthContext;\n\n  //This function will create the global variables\n  //props:Object:contains parent props\n  constructor(props) {\n    super(props);\n    this.state = {\n      classInfo: this.props.location.state.val,\n      assessments: undefined,\n      visible: false,\n    };\n  } //end constructor\n\n  //This function will get all the assessments\n  getAllAssessment = async () => {\n    const { classInfo } = this.state;\n    const { getRole } = this.context;\n    await getRole(true); // get user role\n    const classCode = classInfo.classCode;\n    let data = await getAssessment(classCode); //get all assessments in database\n    if (data.assessments.length == 0) {\n      data = false;\n    } //end if data.assessments.length\n    this.setState({ assessments: data });\n  }; //end getAllAssessment\n\n  //This function will add assessment on button click\n  //value:Object:contains the value form form\n  addAssessmentOnClick = (value) => {\n    this.createAssessment(value);\n  }; //end addAssessmentOnClick\n\n  //This function will create an assessment\n  //values:Object:contains value from form\n  createAssessment = async (value) => {\n    const date = value.date._d;\n    const descp = value.descp;\n    let { assessments, classInfo } = this.state;\n    const classCode = classInfo.classCode;\n    const roomId = uuid();\n    const assessmentObj = value.assessmentName;\n    const result = await addAssessment(\n      classCode,\n      assessmentObj,\n      roomId,\n      date,\n      descp\n    ); //create new assessment\n    if (result == false) {\n      alert(\"Error, please try again later\");\n    } else {\n      if (assessments == false) {\n        assessments = { assessments: [{ assessmentObj, descp, roomId }] };\n      } else {\n        assessments.assessments.push({ assessmentObj, descp, roomId });\n      } //end if assessments\n      this.handleOk();\n    } //end if result\n    this.setState({ assessments });\n  };\n\n  //This function handles the show button in modal\n  showModal = () => {\n    this.setState({ visible: true });\n  }; //end showModal\n\n  //This function handles the ok button in modal\n  handleOk = () => {\n    this.setState({ visible: false });\n  }; //end handleOk\n\n  //This function handles the cancel button in modal\n  handleCancel = () => {\n    this.setState({ visible: false });\n  }; //end handleCancel\n\n  //This function will delete the specific assessment\n  //roomId:String:room code\n  delete = async (roomId) => {\n    const { classInfo } = this.state;\n    const classCode = classInfo.classCode;\n    await deleteAssessment(classCode, roomId); //delete assessment\n    this.getAllAssessment();\n  }; //end delete\n\n  //This function will render the assessments\n  //return:Array:contains the jsx expression of each assessment\n  renderAssessments = () => {\n    const { assessments, classInfo } = this.state;\n    const { status } = this.context;\n    const classCode = classInfo.classCode;\n    if (assessments == false) return <h2>No Assessments</h2>; //end if assessments\n    return assessments.assessments.map((val, idx) => {\n      const { assessmentObj, roomId, descp, socketId } = val;\n      return (\n        <Card\n          className=\"customCard\"\n          key={idx}\n          type=\"inner\"\n          title={assessmentObj}\n          extra={\n            socketId != null || status.role == true ? (\n              <div>\n                {\n                  status.role == true ? (\n                    <Button\n                      type=\"primary\"\n                      style={{ marginRight: \"10px\" }}\n                      onClick={() => this.delete(roomId)}\n                    >\n                      Delete Assessment\n                    </Button>\n                  ) : (\n                    \"\"\n                  ) //end if status.role\n                }\n                <Link\n                  to={{\n                    pathname: \"/room\",\n                    state: {\n                      roomID: roomId,\n                      name: status.nickname,\n                      code: classCode,\n                      socketId,\n                      role: status.role,\n                    },\n                  }}\n                >\n                  Join Assessment Room\n                </Link>\n              </div>\n            ) : (\n              <Link disabled>{socketId}Assessment Not Open</Link>\n            ) //end if socketId and socket.role\n          }\n        >\n          {descp}\n        </Card>\n      );\n    }); //end mapping assessments\n  }; //end renderAssessments\n  //This function will render jsx depending on role\n  //return:String:contains jsx expression of teacher role parts\n  getRole = () => {\n    const { status } = this.context;\n    if (status != null) {\n      if (status.role) {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={this.showModal}\n            ></Button>\n            <Modal\n              title=\"Add Assessment\"\n              visible={this.state.visible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n            >\n              <Form\n                onFinish={this.addAssessmentOnClick}\n                name=\"dynamic_rule\"\n                labelCol={{\n                  span: 2,\n                }}\n                wrapperCol={{\n                  span: 14,\n                }}\n                layout=\"horizontal\"\n              >\n                <Form.Item\n                  name=\"assessmentName\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input Assessment Name\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Please input Assessment Name\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"descp\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input Description \",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Please input Description\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter a date\",\n                    },\n                  ]}\n                >\n                  <DatePicker />\n                </Form.Item>\n                <Form.Item>\n                  <Button\n                    className=\"addButton\"\n                    htmlType=\"submit\"\n                    type=\"primary\"\n                  >\n                    Add Assessment\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Modal>\n          </div>\n        );\n      } else {\n        return <div>Student</div>;\n      } //end if status.role\n    } //end if status\n  }; //end getRole\n\n  //This function will get all assessments on component mount\n  componentDidMount() {\n    this.getAllAssessment();\n  } //end componentDidMount\n\n  //This function will render the assessment component\n  //return:String:contians the jsx ecpression of the assessment componenet\n  render() {\n    const { assessments } = this.state;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SideBar state={this.props.location.state.collapse} />\n        <Layout className=\"site-layout\">\n          <HeaderSection />\n          <Content style={{ margin: \"10px 16px\" }}>\n            <Card title=\"Assessments\" extra={this.getRole()}>\n              {assessments == undefined ? (\n                <div className=\"loader\">\n                  <Spin size=\"large\" tip=\"Loading...\" />\n                </div>\n              ) : (\n                this.renderAssessments()\n              )}\n            </Card>\n          </Content>\n          <FooterSection />\n        </Layout>\n      </Layout>\n    );\n  } //end render\n} //end class Assessment\n\nexport default Assessment;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\base.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\Firestore.js",["173","174","175","176","177"],"//noel Gregory\n//2021-03-30\n//This file contains all functions needed for database calls\n\n//imports\nimport { db } from \"./base\";\nimport firebase from \"firebase/app\";\nimport { quickSort } from \"./algorithm\";\n\n//This function will check if a user exist in firestore\n//uid:String:user id\n//return:Boolean:if the user exist or not\nexport const checkUserExist = async (uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  const doc = await docRef.get();\n\n  if (!doc.exists) {\n    return true;\n  } else {\n    return false;\n  } //end if !doc.exists\n}; //end checkUserExist\n\n//This function will add a user to firestore\n//uid:String:user id\n//val:Object:user object\nexport const addUser = async (uid, val) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  let userRole = {\n    role: null,\n  };\n  if (val) {\n    userRole.role = true;\n  } else {\n    userRole.role = false;\n  } //end if val\n  await docRef.set(userRole);\n}; //end addUser\n\n//This function will add info to user\n//values:Object:user info\n//uid:String:user id\nexport const addInfo = async (values, uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  await docRef.update(values);\n}; //end addInfo\n\n//This function will add a class\n//code:String:class code\n//className:String: contains class name\n//uid:String:user id\n//room:String:room id\nexport const addClass = (code, className, uid, room) => {\n  const docRef = db.collection(\"classes\").doc(code);\n  let data = {\n    classCode: code,\n    className: className,\n    owner: uid,\n    room: room,\n    students: null,\n  };\n  docRef.set(data);\n  const asmRef = db.collection(\"assessment\").doc(code);\n  asmRef.set({\n    className: className,\n    assessments: [],\n  });\n  addClassToUser(code, uid);\n}; //end addClass\n\n//This function will join a class to a user\n//code:String: class code\n//uid:String: user id\nexport const joinClass = async (code, uid) => {\n  try {\n    const classesRef = db.collection(\"classes\").doc(code.trim());\n    await classesRef.update({\n      students: firebase.firestore.FieldValue.arrayUnion(uid),\n    });\n    addClassToUser(code, uid);\n  } catch (err) {\n    console.log(err);\n    return err;\n  } //end try\n}; //end joinClass\n\n//this function will get all classes\n//uid:String:user id\n//studentOrTeacher:Boolean: contaisn the user role\n//return:Object:contains classes\nexport const getAllClasses = async (uid, studentOrTeacher) => {\n  const docRef = db.collection(\"classes\");\n  let query = null;\n  if (studentOrTeacher == true) {\n    query = docRef.where(\"owner\", \"==\", uid);\n  } else {\n    query = docRef.where(\"students\", \"array-contains\", uid);\n  } //end if studentOrTeacher\n  const data = await query.get();\n  const classes = [];\n  for (let i = 0; i < data.docs.length; i++) {\n    let tempData = data.docs[i].data();\n    const id = tempData.owner;\n    const name = await getNameById(id);\n    tempData.owner = name;\n    classes.push(tempData);\n  } //end for i\n  return classes;\n}; //end getAllClasses\n\n//this function will add class to a user\n//code:String:class code\n//uid:String: user id\nexport const addClassToUser = async (code, uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  await docRef.update({\n    Classes: firebase.firestore.FieldValue.arrayUnion(code),\n  });\n}; //end addClassToUser\n\n//This function will get user role\n//uid:String:user id\n//return:Object:user info object\nexport const getUserRole = async (uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  const doc = await docRef.get();\n  const data = doc.data();\n  return data;\n}; //end getUserRole\n\n//This function will update the class info\n//classCode:String:class code\n//className:String: class name\nexport const updateClass = async (classCode, className) => {\n  try {\n    const docRef = db.collection(\"classes\").doc(classCode);\n    await docRef.update({\n      className,\n    });\n  } catch (e) {} //end try\n}; //end updateClass\n\n//This function will update the user info\n//uid:String:user id\n//nickname:String:user name\n//status:String:contains user status\nexport const updateUserDetails = async (uid, nickname, status) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  await docRef.update({\n    nickname,\n    status,\n  });\n}; //end updateUserDetails\n\n//This function will get latest assessments\n//classes:Array:an array of all classes user has\n//return:Array:hold latest assessments\nexport const getLatestAssessments = async (classes) => {\n  if (classes != undefined) {\n    const docRef = db.collection(\"assessment\");\n    const query = docRef.where(\"classCode\", \"in\", classes);\n    const data = await query.get();\n    const currentDate = new Date();\n    let filteredData = [];\n    data.docs.map((doc) => {\n      const tempData = doc.data();\n      tempData.assessments.map((val) => {\n        filteredData.push(val);\n        var storedDate = new Date(val.date);\n        var elapsedTime = storedDate.getTime() - currentDate.getTime();\n        val.elapsedTime = elapsedTime;\n        return val;\n      }); //end mapping assessments\n    }); //end mapping docs\n\n    if (filteredData.length > 1) {\n      filteredData = quickSort(filteredData, 0, filteredData.length - 1);\n    } //end if filteredData.lenght\n\n    return filteredData;\n  } else {\n    return [];\n  } //end classes\n}; //end getLatestAssessments\n\n//This function will get name of user form id\n//uid:String:user id\n//return:Boolean:caontsin ther username\nexport const getNameById = async (uid) => {\n  try {\n    const docRef = db.collection(\"users\").doc(uid);\n    const doc = await docRef.get();\n    const username = doc.data().nickname;\n    return username;\n  } catch (e) {\n    return false;\n  } //end try catch\n}; //end getNameById\n\n//This function will add assessments\n//classCode:String:class code\n//assessmentObj:String:contains assessment name\n//roomId:String:room id\n//date:String:contains date\n//descp:String:assessment description\n//return:Boolean:contain boolean if the assessment was added or not\nexport const addAssessment = async (\n  classCode,\n  assessmentObj,\n  roomId,\n  date,\n  descp\n) => {\n  try {\n    const docRef = db.collection(\"assessment\").doc(classCode);\n    await docRef.update({\n      classCode,\n      assessments: firebase.firestore.FieldValue.arrayUnion({\n        assessmentObj,\n        descp,\n        roomId,\n        date: date.toString(),\n        socketId: null,\n      }),\n    });\n    return true;\n  } catch (e) {\n    console.log(e);\n    return false;\n  } //end try\n}; //end addAssessment\n\n//This function will get all assessments\n//classCode:String:class code\n//return:Object:all assessments form database\nexport const getAssessment = async (classCode) => {\n  const docRef = db.collection(\"assessment\").doc(classCode);\n  const doc = await docRef.get();\n  return doc.data();\n}; //end getAssessment\n\n//This function will add teacher socket to database\n//socketId:String:socket id\n//classCode:String: class code\n//roomId:String: room id\nexport const addTeacherSocket = async (sockedId, classCode, roomdId) => {\n  const docRef = db.collection(\"assessment\").doc(classCode);\n  const doc = await docRef.get();\n  let data = doc.data();\n  let filteredArr = data.assessments.map((val) => {\n    if (val.roomId == roomdId) {\n      val[\"socketId\"] = sockedId;\n    } //end if val.roomId\n    return val;\n  }); //end mapping assessments\n  data.assessments = filteredArr;\n  docRef.set(data);\n}; //end addTeacherSocket\n\n//This function will delete assessments\n//classCode:String:class code\n//roomId:String: room id\nexport const deleteAssessment = async (classCode, roomId) => {\n  const docRef = db.collection(\"assessment\").doc(classCode);\n  const doc = await docRef.get();\n  let data = doc.data();\n  let filteredArr = data.assessments.filter((val) => val.roomId != roomId);\n  data.assessments = filteredArr;\n  docRef.set(data);\n}; //end deleteAssessment\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\FooterSection.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\HeaderSection.js",["178"],"//Noel Gregory\n//2021-03-29\n//This file will create a header section component\n\n//imports\nimport React from \"react\";\nimport { Layout, Input, Button } from \"antd\";\nimport { app } from \"../utils/base\";\nconst { Header } = Layout;\n\n//This function will return a header component\n//return:String:returns headersections jsx expression\nconst HeaderSection = () => {\n  return (\n    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n      <Button\n        size=\"large\"\n        style={{ float: \"right\", margin: \"10px\" }}\n        onClick={() => app.auth().signOut()} // sign out button\n        type=\"primary\"\n      >\n        Sign out\n      </Button>\n    </Header>\n  );\n}; //end HeaderSection\n\nexport default React.memo(HeaderSection);\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Navbar.js",["179"],"//Noel Gregory\n//2021-03-30\n\n//imports\nimport React from \"react\";\nimport { Layout, Menu } from \"antd\";\n\nconst { Header } = Layout;\n\n//This function will render the navbar component\n//return:String:contains jsx expression of navbar component\nconst Navbar = () => {\n  return (\n    <Header>\n      <img className=\"logoNavbar\" src=\"/logo.png\"></img>\n      <Menu theme=\"dark\" mode=\"horizontal\"></Menu>\n    </Header>\n  );\n}; //end Navbar\n\nexport default React.memo(Navbar);\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\SideBar.js",["180","181","182"],"//Noel Gregory\n//2021-03-30\n//This file creates the sidebar component\n\n//imports\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nconst { Sider } = Layout;\n\nclass SideBar extends Component {\n  //This function will create the gloabal variables\n  //props:Object:contains parent component values\n  constructor(props) {\n    super(props);\n    let temp = false;\n    if (this.props[\"state\"] != undefined) {\n      temp = this.props.state;\n    } //end this.props[\"state\"]\n    this.state = {\n      collapsed: temp,\n    };\n  } //end constructor\n\n  //This function will change collapse state\n  onCollapse = (collapsed) => {\n    this.setState({ collapsed });\n  }; //end onCollapse\n\n  //This function will render the sidebar component\n  //return:String:contains jsx expression of sidebar\n  render() {\n    const { collapsed } = this.state;\n    return (\n      <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n        {\n          collapsed ? (\n            <img className=\"logosmall\" src=\"/logosmall.png\"></img>\n          ) : (\n            <img className=\"logo\" src=\"/logo.png\"></img>\n          ) //end if collapsed\n        }\n        <Menu theme=\"dark\" mode=\"inline\">\n          <Menu.Item icon={<PieChartOutlined />}>\n            <Link\n              to={{\n                pathname: \"/\",\n                state: collapsed,\n              }}\n            >\n              Home\n            </Link>\n          </Menu.Item>\n          <Menu.Item icon={<DesktopOutlined />}>\n            <Link\n              to={{\n                pathname: \"/classes\",\n                state: collapsed,\n              }}\n            >\n              Classes\n            </Link>\n          </Menu.Item>\n          <Menu.Item icon={<SettingOutlined />}>\n            <Link\n              to={{\n                pathname: \"/setting\",\n                state: collapsed,\n              }}\n            >\n              Settings\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n  } //end render\n} //end class SideBar\n\nexport default React.memo(SideBar);\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\room.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\whiteboard.js",["197","198","199","200"],"//Noel Gregory\r\n//2021-03-30\r\n//This file will create a whiteboard component\r\n\r\n//imports\r\nimport React, { useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./room.css\";\r\nimport Sketch from \"react-p5\";\r\n\r\n//This function will render the whiteboard component\r\n//props:Object:contains props form parent component\r\nconst Whiteboard = (props) => {\r\n  const [color, setColor] = useState(\"#000000\");\r\n  const [weight, setWeight] = useState(3);\r\n  const socketRef = useRef();\r\n  const { roomID, role } = props.location.state;\r\n  const endPoint = {\r\n    local: \"http://localhost:8000/\",\r\n    prod: \"https://isugapi.herokuapp.com/\",\r\n  };\r\n  let p = null; //contains p5 instance\r\n\r\n  //This function will setup the canvas and socket.on\r\n  //p5:Object:contains in p5 Object\r\n  //parent:Object:contains p5 parent\r\n  const setup = (p5, parent) => {\r\n    socketRef.current = io.connect(endPoint.local);\r\n    //This function will send to clear student screen\r\n    //payload:ObJect:contains the roomeId\r\n    socketRef.current.on(\"sendClear\", (payload) => {\r\n      if (payload.room == roomID) {\r\n        p.background(240);\r\n      } //end if payload.room\r\n    });\r\n    //This function will  get the mouse position from teacher\r\n    //coord:Object:contians teacher send info\r\n    socketRef.current.on(\"sendCoord\", (coord) => {\r\n      if (roomID == coord.room) {\r\n        //calculations\r\n        const { x, y, px, py } = coord.data;\r\n        const { c, w, widthSize, heighthSize } = coord.settings;\r\n        let x1 = p5.map(x, 0, widthSize, 0, window.innerWidth);\r\n        let y1 = p5.map(\r\n          y,\r\n          0,\r\n          heighthSize,\r\n          0,\r\n          window.innerHeight - window.innerHeight / 18\r\n        );\r\n        let x2 = p5.map(px, 0, widthSize, 0, window.innerWidth);\r\n        let y2 = p5.map(\r\n          py,\r\n          0,\r\n          heighthSize,\r\n          0,\r\n          window.innerHeight - window.innerHeight / 18\r\n        );\r\n        //draw\r\n        p5.stroke(c);\r\n        p5.strokeWeight(w);\r\n        p5.line(x1, y1, x2, y2);\r\n      } //end if roomID\r\n    });\r\n    const canvas = p5\r\n      .createCanvas(\r\n        window.innerWidth,\r\n        window.innerHeight - window.innerHeight / 18\r\n      )\r\n      .parent(parent);\r\n    if (role == true) {\r\n      canvas.addClass(\"drawTeacherCanvas\");\r\n    } else {\r\n      canvas.addClass(\"drawStudentCanvas\");\r\n    } //end if role\r\n    p = p5;\r\n    p5.background(240);\r\n  }; //end setup\r\n\r\n  //This function  will clear the canvas\r\n  const clear = () => {\r\n    p.background(240);\r\n    //emit\r\n    socketRef.current.emit(\"clear\", {\r\n      room: roomID,\r\n    });\r\n  }; //end clear\r\n\r\n  //This function will draw a line where the mouse position is\r\n  //p5:Object:p5 object\r\n  function mouseDragged(p5) {\r\n    p5.stroke(color);\r\n    p5.strokeWeight(weight);\r\n    connection(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\r\n    p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY);\r\n    p = p5;\r\n  } //end mouseDragged\r\n\r\n  //This function will send  mouse position to students\r\n  //x:Integer:x position\r\n  //y:Integer:y position\r\n  //px:Integer:previous x position\r\n  //py:Integer:previous y position\r\n  const connection = (x, y, px, py) => {\r\n    socketRef.current.emit(\"coord\", {\r\n      data: { x, y, px, py },\r\n      settings: {\r\n        c: color,\r\n        w: weight,\r\n        widthSize: window.innerWidth,\r\n        heighthSize: window.innerHeight - window.innerHeight / 18,\r\n      },\r\n      room: roomID,\r\n    });\r\n  }; //end connection\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        role == true ? (\r\n          <div>\r\n            {\" \"}\r\n            <div className=\"optionToDraw\">\r\n              <label>Color:</label>\r\n              <button onClick={clear}>Clear Screen</button>\r\n              <input\r\n                type=\"color\"\r\n                value={color}\r\n                onChange={(e) => setColor(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                min={1}\r\n                max={100}\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              />\r\n            </div>\r\n            <Sketch setup={setup} mouseDragged={mouseDragged} />\r\n          </div>\r\n        ) : (\r\n          <Sketch setup={setup} />\r\n        ) //end if role\r\n      }\r\n    </div>\r\n  );\r\n}; //end Whiteboard\r\n\r\nexport default Whiteboard;\r\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Settings.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\algorithm.js",["201","202","203","204"],"//Noel Gregory\r\n//2021-03-30\r\n//This file has function for similarity of images and sorting\r\n\r\n//This function will check the similarity between two images\r\n//a:Array:image array of first image\r\n//b:Array:image array of second image\r\n//return:Float:contains similarity rate\r\nfunction kumarHassebrook(a, b) {\r\n  var ii = a.length;\r\n  var p = 0;\r\n  var p2 = 0;\r\n  var q2 = 0;\r\n  for (let i = 0; i < ii; i++) {\r\n    p += a[i] * b[i];\r\n    p2 += a[i] * a[i];\r\n    q2 += b[i] * b[i];\r\n  } //end for i\r\n  return p / (p2 + q2 - p);\r\n} //end kumarHassebrook\r\n\r\n//This function will calculate the mean of an array\r\n//a:Array:this contains the image array\r\n//return:Flaot:contains the mean value of array\r\nfunction mean(a) {\r\n  let total = a.reduce((acc, val) => (acc += val), 0);\r\n  return total / a.length;\r\n} //end mean\r\n\r\n//This function will normalize the images and get similarity\r\n//a:Array:image array of first image\r\n//b:Array:image array of second image\r\n//return:Float:contains similarity rate\r\nexport function pearson(a, b) {\r\n  var avgA = mean(a); //mean of array a\r\n  var avgB = mean(b); //mean of array b\r\n\r\n  var newA = new Array(a.length);\r\n  var newB = new Array(b.length);\r\n  for (var i = 0; i < newA.length; i++) {\r\n    newA[i] = a[i] - avgA;\r\n    newB[i] = b[i] - avgB;\r\n  } //end for i\r\n\r\n  return kumarHassebrook(newA, newB);\r\n}\r\n\r\n//This function generates a random code\r\n//returnLString:random code\r\nexport const generateCode = () => {\r\n  const str = \"qwertyuioplkjhgfdsazxcvbnm1234567890QAZXSWEDCVFRTGBNHYUJMKILOP\";\r\n  let genStr = \"\";\r\n  for (let i = 0; i < 5; i++) {\r\n    const randomIndex = Math.floor(Math.random() * str.length);\r\n    genStr += str[randomIndex];\r\n  } //end for i\r\n  return genStr;\r\n}; //end generateCode\r\n\r\n//This function will convert ms to date\r\n//ms:Integer:contains ms of date\r\n//return:String:date in formated string\r\nexport const convertMS = (ms) => {\r\n  var d, h, m, s;\r\n  s = Math.floor(ms / 1000);\r\n  m = Math.floor(s / 60);\r\n  s = s % 60;\r\n  h = Math.floor(m / 60);\r\n  m = m % 60;\r\n  d = Math.floor(h / 24);\r\n  h = h % 24;\r\n  let date = \"\";\r\n  if (d != 0) {\r\n    date += d + \" days, \";\r\n    return date;\r\n  } //end if d\r\n  if (h != 0) {\r\n    date += h + \" hours, \";\r\n  } //end if h\r\n  if (m != 0) {\r\n    date += m + \" minutes, \";\r\n  } //end if m\r\n  if (s != 0) {\r\n    date += s + \" seconds \";\r\n  } //end if s\r\n\r\n  return date;\r\n}; //end convertMS\r\n\r\n//This function will partition the array\r\n//arr:Array:contains the array\r\n//start:Intger:start index\r\n//end:Integer:contains end index\r\n//return:Integer:contains the pivot index\r\nconst partition = (arr, start, end) => {\r\n  let p = arr[end].elapsedTime;\r\n  let pIndex = start;\r\n  for (let i = start; i < end; i++) {\r\n    if (arr[i].elapsedTime <= p) {\r\n      let temp = arr[i];\r\n      arr[i] = arr[pIndex];\r\n      arr[pIndex] = temp;\r\n      pIndex++;\r\n    } //end if arr[i].elapsedTime\r\n  } //end for i\r\n  let temp = arr[pIndex];\r\n  arr[pIndex] = arr[end];\r\n  arr[end] = temp;\r\n  return pIndex;\r\n}; //end partition\r\n\r\n//This function will run quicksort on array\r\n//arr:Array:contains the array\r\n//start:Intger:start index\r\n//end:Integer:contains end index\r\n//return:Array:sorted array\r\nexport const quickSort = (arr, start, end) => {\r\n  if (start >= end) return; //end start\r\n\r\n  let index = partition(arr, start, end);\r\n  quickSort(arr, start, index - 1);\r\n  quickSort(arr, index + 1, end);\r\n  return arr;\r\n}; //end quickSort\r\n",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"205","replacedBy":"209"},{"ruleId":"207","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":28},{"ruleId":"205","replacedBy":"215"},{"ruleId":"207","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":50,"column":41,"nodeType":"219","messageId":"220","endLine":50,"endColumn":43},{"ruleId":"217","severity":1,"message":"218","line":71,"column":24,"nodeType":"219","messageId":"220","endLine":71,"endColumn":26},{"ruleId":"217","severity":1,"message":"221","line":30,"column":14,"nodeType":"219","messageId":"220","endLine":30,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":31,"column":29,"nodeType":"219","messageId":"220","endLine":31,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":38,"column":16,"nodeType":"219","messageId":"220","endLine":38,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":46,"column":16,"nodeType":"219","messageId":"220","endLine":46,"endColumn":18},{"ruleId":"217","severity":1,"message":"221","line":85,"column":18,"nodeType":"219","messageId":"220","endLine":85,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":98,"column":21,"nodeType":"219","messageId":"220","endLine":98,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":152,"column":24,"nodeType":"219","messageId":"220","endLine":152,"endColumn":26},{"ruleId":"211","severity":1,"message":"222","line":12,"column":18,"nodeType":"213","messageId":"214","endLine":12,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":21,"column":13,"nodeType":"219","messageId":"220","endLine":21,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":57,"column":7,"nodeType":"225","messageId":"220","endLine":57,"endColumn":12},{"ruleId":"217","severity":1,"message":"218","line":59,"column":17,"nodeType":"219","messageId":"220","endLine":59,"endColumn":19},{"ruleId":"217","severity":1,"message":"218","line":119,"column":17,"nodeType":"219","messageId":"220","endLine":119,"endColumn":19},{"ruleId":"217","severity":1,"message":"221","line":132,"column":31,"nodeType":"219","messageId":"220","endLine":132,"endColumn":33},{"ruleId":"217","severity":1,"message":"218","line":136,"column":29,"nodeType":"219","messageId":"220","endLine":136,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":271,"column":25,"nodeType":"219","messageId":"220","endLine":271,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":53,"column":33,"nodeType":"219","messageId":"220","endLine":53,"endColumn":35},{"ruleId":"217","severity":1,"message":"218","line":81,"column":16,"nodeType":"219","messageId":"220","endLine":81,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":84,"column":23,"nodeType":"219","messageId":"220","endLine":84,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":124,"column":21,"nodeType":"219","messageId":"220","endLine":124,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":134,"column":45,"nodeType":"219","messageId":"220","endLine":134,"endColumn":47},{"ruleId":"217","severity":1,"message":"218","line":137,"column":31,"nodeType":"219","messageId":"220","endLine":137,"endColumn":33},{"ruleId":"217","severity":1,"message":"218","line":272,"column":28,"nodeType":"219","messageId":"220","endLine":272,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":94,"column":24,"nodeType":"219","messageId":"220","endLine":94,"endColumn":26},{"ruleId":"217","severity":1,"message":"221","line":159,"column":15,"nodeType":"219","messageId":"220","endLine":159,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":165,"column":25,"nodeType":"228","messageId":"229","endLine":165,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":251,"column":20,"nodeType":"219","messageId":"220","endLine":251,"endColumn":22},{"ruleId":"217","severity":1,"message":"221","line":267,"column":65,"nodeType":"219","messageId":"220","endLine":267,"endColumn":67},{"ruleId":"211","severity":1,"message":"230","line":7,"column":18,"nodeType":"213","messageId":"214","endLine":7,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":15,"column":7,"nodeType":"233","endLine":15,"endColumn":51},{"ruleId":"217","severity":1,"message":"221","line":23,"column":29,"nodeType":"219","messageId":"220","endLine":23,"endColumn":31},{"ruleId":"231","severity":1,"message":"232","line":44,"column":13,"nodeType":"233","endLine":44,"endColumn":61},{"ruleId":"231","severity":1,"message":"232","line":46,"column":13,"nodeType":"233","endLine":46,"endColumn":51},{"ruleId":"234","severity":1,"message":"235","line":42,"column":6,"nodeType":"236","endLine":42,"endColumn":8,"suggestions":"237"},{"ruleId":"217","severity":1,"message":"218","line":170,"column":18,"nodeType":"219","messageId":"220","endLine":170,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":186,"column":29,"nodeType":"219","messageId":"220","endLine":186,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":186,"column":45,"nodeType":"219","messageId":"220","endLine":186,"endColumn":47},{"ruleId":"234","severity":1,"message":"238","line":187,"column":34,"nodeType":"239","endLine":187,"endColumn":48},{"ruleId":"217","severity":1,"message":"218","line":206,"column":18,"nodeType":"219","messageId":"220","endLine":206,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":217,"column":26,"nodeType":"219","messageId":"220","endLine":217,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":252,"column":18,"nodeType":"219","messageId":"220","endLine":252,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":256,"column":32,"nodeType":"219","messageId":"220","endLine":256,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":278,"column":58,"nodeType":"219","messageId":"220","endLine":278,"endColumn":60},{"ruleId":"217","severity":1,"message":"218","line":287,"column":61,"nodeType":"219","messageId":"220","endLine":287,"endColumn":63},{"ruleId":"217","severity":1,"message":"218","line":397,"column":16,"nodeType":"219","messageId":"220","endLine":397,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":415,"column":20,"nodeType":"219","messageId":"220","endLine":415,"endColumn":22},{"ruleId":"217","severity":1,"message":"218","line":451,"column":14,"nodeType":"219","messageId":"220","endLine":451,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":32,"column":24,"nodeType":"219","messageId":"220","endLine":32,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":39,"column":18,"nodeType":"219","messageId":"220","endLine":39,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":71,"column":14,"nodeType":"219","messageId":"220","endLine":71,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":120,"column":14,"nodeType":"219","messageId":"220","endLine":120,"endColumn":16},{"ruleId":"217","severity":1,"message":"221","line":73,"column":9,"nodeType":"219","messageId":"220","endLine":73,"endColumn":11},{"ruleId":"217","severity":1,"message":"221","line":77,"column":9,"nodeType":"219","messageId":"220","endLine":77,"endColumn":11},{"ruleId":"217","severity":1,"message":"221","line":80,"column":9,"nodeType":"219","messageId":"220","endLine":80,"endColumn":11},{"ruleId":"217","severity":1,"message":"221","line":83,"column":9,"nodeType":"219","messageId":"220","endLine":83,"endColumn":11},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],["240"],["241"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar",["240"],["241"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Steps' is defined but never used.","no-dupe-keys","Duplicate key 'owner'.","ObjectExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Input' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.id', 'props.peer.peer', and 'takepicture'. Either include them or remove the dependency array.","ArrayExpression",["242"],"Assignments to the 'currentImage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},"Update the dependencies array to be: [props.id, props.peer.peer, takepicture]",{"range":"245","text":"246"},[1308,1310],"[props.id, props.peer.peer, takepicture]"]