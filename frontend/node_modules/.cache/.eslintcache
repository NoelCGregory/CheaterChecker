[{"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\index.js":"1","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\App.js":"4","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\Home.js":"5","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\Login.js":"6","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\PrivateRoute.js":"7","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\utils\\Auth.js":"8","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\utils\\base.js":"9","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\index.js":"10","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\serviceWorker.js":"11","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\App.js":"12","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\PrivateRoute.js":"13","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\Auth.js":"14","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Home.js":"15","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Login.js":"16","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Main.js":"17","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\SelectRole.js":"18","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Classes.js":"19","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\ExtraInfo.js":"20","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Assessment.js":"21","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\base.js":"22","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\Firestore.js":"23","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\FooterSection.js":"24","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\HeaderSection.js":"25","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Navbar.js":"26","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\SideBar.js":"27","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\room.js":"28","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\algoritims.js":"29","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\whiteboard.js":"30","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Settings.js":"31"},{"size":463,"mtime":1613094876907,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":4951,"mtime":1585488580000,"results":"35","hashOfConfig":"33"},{"size":536,"mtime":1613095648203,"results":"36","hashOfConfig":"33"},{"size":227,"mtime":1613094862257,"results":"37","hashOfConfig":"33"},{"size":649,"mtime":1613095630672,"results":"38","hashOfConfig":"33"},{"size":533,"mtime":1613094860284,"results":"39","hashOfConfig":"33"},{"size":612,"mtime":1613094861248,"results":"40","hashOfConfig":"33"},{"size":403,"mtime":1613094806717,"results":"41","hashOfConfig":"33"},{"size":463,"mtime":1613963237000,"results":"42","hashOfConfig":"43"},{"size":4951,"mtime":1613963237000,"results":"44","hashOfConfig":"43"},{"size":1417,"mtime":1617130580160,"results":"45","hashOfConfig":"43"},{"size":505,"mtime":1613963237000,"results":"46","hashOfConfig":"43"},{"size":2760,"mtime":1617133313475,"results":"47","hashOfConfig":"43"},{"size":4967,"mtime":1617135173150,"results":"48","hashOfConfig":"43"},{"size":2877,"mtime":1617066177913,"results":"49","hashOfConfig":"43"},{"size":569,"mtime":1617066415347,"results":"50","hashOfConfig":"43"},{"size":1988,"mtime":1617066412739,"results":"51","hashOfConfig":"43"},{"size":8522,"mtime":1617135334975,"results":"52","hashOfConfig":"43"},{"size":2731,"mtime":1617066965095,"results":"53","hashOfConfig":"43"},{"size":6851,"mtime":1617132307545,"results":"54","hashOfConfig":"43"},{"size":484,"mtime":1615682595729,"results":"55","hashOfConfig":"43"},{"size":5372,"mtime":1617134913126,"results":"56","hashOfConfig":"43"},{"size":563,"mtime":1617066743186,"results":"57","hashOfConfig":"43"},{"size":718,"mtime":1617066736478,"results":"58","hashOfConfig":"43"},{"size":306,"mtime":1616805913703,"results":"59","hashOfConfig":"43"},{"size":1780,"mtime":1616861420009,"results":"60","hashOfConfig":"43"},{"size":10970,"mtime":1617134706250,"results":"61","hashOfConfig":"43"},{"size":2354,"mtime":1617116706040,"results":"62","hashOfConfig":"43"},{"size":3345,"mtime":1617135653522,"results":"63","hashOfConfig":"43"},{"size":3115,"mtime":1617067258493,"results":"64","hashOfConfig":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1635bik",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"jbey44",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"87"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"87"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"87"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"87"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"87"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"87"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"87"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\index.js",[],["142","143"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\reportWebVitals.js",[],["144","145"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\App.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\Home.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\Login.js",["146"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\utils\\Auth.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\ISU Project\\frontend\\src\\utils\\base.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\index.js",[],["147","148"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\App.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\Auth.js",["149","150"],"import React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport { Spin } from \"antd\";\nimport { checkUserExist, getUserRole } from \"./Firestore\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const AuthContext = React.createContext();\n\nclass AuthProvider extends Component {\n  state = {\n    currentUser: null,\n    photoUrl: null,\n    loader: true,\n    status: null,\n    sendUser: false,\n  };\n  style = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"75vh\",\n  };\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged((user) => {\n      if (user != null) {\n        this.setState({\n          currentUser: user,\n          status: null,\n        });\n      } else {\n        this.setState({\n          currentUser: null,\n          loader: false,\n        });\n      }\n    });\n  }\n  checkUser = async () => {\n    let { currentUser, sendUser } = this.state;\n    const { history } = this.props;\n    if (currentUser != null && sendUser == false) {\n      let res = await checkUserExist(currentUser.uid);\n      let temp = \"\";\n      if (res) {\n        temp = \"/selectrole\";\n      } else {\n        temp = \"/\";\n      }\n      sendUser = true;\n      history.push(temp);\n      this.setState({ currentUser, sendUser });\n    }\n  };\n\n  getRole = async (onForce) => {\n    const { currentUser, status } = this.state;\n    if (currentUser != null && status == null) {\n      const data = await getUserRole(currentUser.uid);\n      this.setState({ status: data, loader: false });\n    } else if (onForce == true) {\n      const data = await getUserRole(currentUser.uid);\n      this.setState({ status: data, loader: false });\n    }\n  };\n  componentDidUpdate() {\n    this.checkUser();\n    this.getRole();\n  }\n\n  render() {\n    const { currentUser, loader, status } = this.state;\n    if (loader) {\n      return (\n        <div style={this.style}>\n          <Spin size=\"large\" tip=\"Loading...\" />\n        </div>\n      );\n    } else {\n      return (\n        <AuthContext.Provider\n          value={{ currentUser, status, getRole: this.getRole }}\n        >\n          {this.props.children}\n        </AuthContext.Provider>\n      );\n    }\n  }\n}\n\nexport default withRouter(AuthProvider);\n// export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Home.js",["151","152","153","154","155"],"// Noel Gregory\n//2021-03-29\n//This class is made for the home route and will return the home page in jsx\n\n//imports\nimport React, { Component } from \"react\";\nimport { AuthContext } from \"../utils/Auth\";\nimport { getLatestAssessments, joinClass } from \"../utils/Firestore\";\nimport \"./ui.css\";\nimport { Layout, Card, Spin, Button, Form, Input, Modal } from \"antd\";\nimport SiderBar from \"./SideBar\";\nimport FooterSection from \"./FooterSection\";\nimport HeaderSection from \"./HeaderSection\";\nimport { convertMS } from \"../utils/algoritims\";\nconst { Content } = Layout;\n\nclass Home extends Component {\n  static contextType = AuthContext;\n  //This function will be called when the class instance is created\n  //props:Object:holds values given by parent components\n  constructor(props) {\n    super(props);\n    this.state = { latest: undefined, visible: false }; //creating state variables\n  } //end constructor\n\n  //This function will get the latest assesments from the database\n  getLatestAssesment = async () => {\n    const { status } = this.context;\n    console.log(status);\n    console.log(\"fdf\");\n    let latest = await getLatestAssessments(status.Classes);\n    if (latest == undefined) latest = false; // end if latest\n    this.setState({ latest });\n  }; //end getLatestAssesment\n\n  //This function will render the lastest assesments from the database\n  //return:JSX:returns the latest assements using jsx expressions\n  renderLatest = () => {\n    const { latest } = this.state;\n    if (latest == false) return <h3>No Latest Assessment</h3>; //end if latest\n    return latest.map((val, idx) => {\n      return (\n        <Card\n          className=\"customCard\"\n          key={idx}\n          type=\"inner\"\n          title={val.assessmentObj}\n          extra={\n            val.elapsedTime > 0 ? convertMS(val.elapsedTime) : \"Assessment Done\"\n          }\n        >\n          {val.descp}\n        </Card>\n      );\n    });\n  }; //end renderLatest\n\n  //This function handles the show button in modal\n  showModal = () => {\n    this.setState({ visible: true });\n  }; //end showModal\n\n  //This function handles the ok button in modal\n  handleOk = () => {\n    this.setState({ visible: false });\n  }; //end handleOk\n\n  //This function handles the cancel button in modal\n  handleCancel = () => {\n    this.setState({ visible: false });\n  }; //end handleCancel\n\n  //This function will add a class to the database\n  //values:Object:holds values from the form\n  addToClass = async (values) => {\n    const { currentUser, getRole } = this.context;\n    if (values != null) {\n      const result = await joinClass(values.code, currentUser.uid); //calling joinClass to add class to firestore\n      if (result != undefined) {\n        alert(\"This Class Does Not Exist\");\n      } //end if result\n    } //end if values\n    await getRole(true);\n    this.getLatestAssesment();\n    this.handleCancel();\n  }; //end addToClass\n\n  //This function will check if the user is a student and return student info\n  //return:JSX:this returns a jsx expression if the user is a student\n  getRole = () => {\n    const { status } = this.context;\n    if (status.role == false) {\n      return (\n        <div>\n          <Button type=\"primary\" onClick={this.showModal}>\n            Join Class\n          </Button>\n          <Modal\n            title=\"Join Class\"\n            visible={this.state.visible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n          >\n            <Form onFinish={this.addToClass} name=\"dynamic_rule\">\n              <Form.Item\n                name=\"code\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input class code\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Please input class code\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Join Class\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </div>\n      );\n    } //end if status.role\n  }; //end getRole\n\n  //This function is called at component mount\n  componentDidMount() {\n    this.getLatestAssesment();\n  } //end componentDidMount\n\n  render() {\n    const { latest } = this.state;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SiderBar state={this.props.location.state} />\n        <Layout className=\"site-layout\">\n          <HeaderSection />\n          <Content style={{ margin: \"10px 16px\" }}>\n            <Card title=\"Latest Assessments\" extra={this.getRole()}>\n              {latest == undefined ? (\n                <div className=\"loader\">\n                  <Spin size=\"large\" tip=\"Loading...\" />\n                </div>\n              ) : (\n                this.renderLatest()\n              )}\n            </Card>\n          </Content>\n          <FooterSection />\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default Home;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Login.js",["156"],"//Noel Gregory\n//2021-03-29\n//This class will create a login page\n\n//imports\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport { app } from \"../utils/base.js\";\nimport firebase from \"firebase\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport Navbar from \"./Navbar\";\nimport { Layout, Steps } from \"antd\";\nimport FooterSection from \"./FooterSection\";\nconst { Content } = Layout;\n\nclass Login extends Component {\n  static contextType = AuthContext;\n\n  //This function will handle gooLogin\n  googleLogin = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    app.auth().signInWithRedirect(provider);\n  }; //end googleLogin\n\n  //This function will render the login page\n  //return:JSX:returns thr login page\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navbar />\n        <Content style={{ padding: \"5vh\" }}>\n          <div className=\"site-layout-content\">\n            <h1>Log in</h1>\n            <button\n              type=\"button\"\n              onClick={this.googleLogin}\n              className=\"google-button\"\n            >\n              <span className=\"google-button__icon\">\n                <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\"\n                    id=\"Shape\"\n                    fill=\"#EA4335\"\n                  />\n                  <path\n                    d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\"\n                    id=\"Shape\"\n                    fill=\"#FBBC05\"\n                  />\n                  <path\n                    d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\"\n                    id=\"Shape\"\n                    fill=\"#4285F4\"\n                  />\n                  <path\n                    d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\"\n                    fill=\"#34A853\"\n                  />\n                </svg>\n              </span>\n              <span className=\"google-button__text\">Sign in with Google</span>\n            </button>\n          </div>\n        </Content>\n        <FooterSection />\n      </Layout>\n    );\n  } //end render\n} //end class Login\n\nexport default Login;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Main.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\SelectRole.js",["157"],"//Noel Gregory\n//2021-03-29\n//This class will create the select role component\n\n//imports\nimport React, { Component } from \"react\";\nimport { addUser } from \"../utils/Firestore\";\nimport Navbar from \"./Navbar\";\nimport { Layout, Steps, Button } from \"antd\";\nimport FooterSection from \"./FooterSection\";\nimport { AuthContext } from \"../utils/Auth\";\nconst { Content } = Layout;\nconst { Step } = Steps;\n\nclass SelectRole extends Component {\n  static contextType = AuthContext;\n  //This function will handle selecting role\n  //val:Object:holds the object from the form\n  selectRole = async (val) => {\n    const { currentUser } = this.context;\n    if (val == \"teacher\") {\n      await addUser(currentUser.uid, true);\n    } else {\n      await addUser(currentUser.uid, false);\n    } //end if val\n    this.props.history.push(\"/extrainfo\"); //push to history\n  }; //end selectRole\n  //This function will render the select role page\n  //return:JSX:returns the select role page\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navbar />\n        <Content style={{ padding: \"5vh\" }}>\n          <div className=\"site-layout-content\">\n            <Steps size=\"small\" current={1}>\n              <Step title=\"Login\" />\n              <Step title=\"Select Role\" />\n              <Step title=\"Extra Info\" />\n            </Steps>\n            <Button\n              size=\"large\"\n              style={{ float: \"center\", margin: \"10px\" }}\n              onClick={() => this.selectRole(\"student\")}\n              type=\"primary\"\n            >\n              Student\n            </Button>\n            <Button\n              size=\"large\"\n              style={{ float: \"center\", margin: \"10px\" }}\n              onClick={() => this.selectRole(\"teacher\")}\n              type=\"primary\"\n            >\n              Teacher\n            </Button>\n          </div>\n        </Content>\n        <FooterSection />\n      </Layout>\n    );\n  } //end render\n} //end class SelectRole\n\nexport default SelectRole;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Classes.js",["158","159","160","161","162","163"],"//Noel Gregory\n//2021-03-30\n//This file will contains teh class component\n\nimport React, { Component } from \"react\";\nimport \"./ui.css\";\nimport {\n  addClass,\n  getAllClasses,\n  getNameById,\n  updateClass,\n} from \"../utils/Firestore\";\nimport FooterSection from \"./FooterSection\";\nimport HeaderSection from \"./HeaderSection\";\nimport { Layout, Card, Spin, Button, Form, Input, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport SiderBar from \"./SideBar\";\nimport { AuthContext } from \"../utils/Auth\";\nimport { Link } from \"react-router-dom\";\nimport { v1 as uuid } from \"uuid\";\nimport { generateCode } from \"../utils/algoritims\";\nconst { Content } = Layout;\n\nclass Classes extends Component {\n  static contextType = AuthContext;\n  //This function is called when class instance is made and will define state variables\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: undefined,\n      visible: [],\n    };\n  } //end constructor\n\n  //This function handle adding class from button\n  //values:Object:holds form values\n  addClass = (values) => {\n    this.createClass(values); //send info\n    this.handleCancel(0);\n  }; //end addClass\n  //this function will create new classes\n  //values:Object:contians new class info\n  createClass = async (values) => {\n    const { currentUser } = this.context;\n    let { classes } = this.state;\n    const str = generateCode();\n    const room = uuid();\n    addClass(str, values.className, currentUser.uid, room);\n    let name = await getNameById(currentUser.uid);\n\n    let data = {\n      classCode: str,\n      className: values.className,\n      owner: currentUser.uid,\n      students: null,\n      code: true,\n      owner: name,\n    };\n    if (classes == false) {\n      classes = [data];\n    } else {\n      classes.push(data);\n    } //end if classes\n    this.setState({ classes });\n  }; //end createClass\n\n  //This function will get all the classes for user\n  getClass = async () => {\n    const { currentUser, status } = this.context;\n    let data = await getAllClasses(currentUser.uid, status.role);\n    if (data == null) data = false; //end if data\n    this.setState({ classes: data });\n  }; //end getClass\n\n  //This function will be called when component is mounted and will get all class user is in\n  componentDidMount() {\n    this.getClass();\n  } //end componentDidMount\n\n  //This function will handles show of modal\n  //idx:Intger:holds the id for current modal\n  showModal = (idx) => {\n    const { visible } = this.state;\n    visible[idx] = true;\n    this.setState({ visible });\n  }; //end showModal\n\n  //This function will handles ok of modal\n  //idx:Intger:holds the id for current modal\n  handleOk = (idx) => {\n    const { visible } = this.state;\n    visible[idx] = false;\n    this.setState({ visible });\n  }; //end handleOk\n\n  //This function will handles cancel of modal\n  //idx:Intger:holds the id for current modal\n  handleCancel = (idx) => {\n    const { visible } = this.state;\n    visible[idx] = false;\n    this.setState({ visible });\n  }; //end handleCancel\n\n  //This function will edit class detials\n  //code:String:class code\n  //value:Object:contains class details fromt he form\n  editClass = (code, value) => {\n    updateClass(code, value.className);\n    this.handleCancelClass();\n  }; //editClass\n\n  //This function will render all the classes\n  //classes:Object:contains all the classes\n  //return:JSX:contains jsx expression of class section\n  renderClass = (classes) => {\n    const { status } = this.context;\n    if (classes == false) return <h2>No Class</h2>; //end if classes\n    return classes.map((val, idx) => {\n      idx++;\n      return (\n        <Card\n          className=\"customCard\"\n          key={idx}\n          type=\"inner\"\n          title={val.className}\n          extra={\n            <div>\n              <h4>\n                {val[\"code\"] != undefined ? `Class Code: ${val.classCode}` : \"\"}\n              </h4>\n              {\n                status.role == true ? (\n                  <Button type=\"primary\" onClick={() => this.showModal(idx)}>\n                    Edit Class{\" \"}\n                  </Button>\n                ) : (\n                  \"\"\n                ) //end if statis.role\n              }\n\n              <Modal\n                title=\"Edit Class\"\n                visible={this.state.visible[idx]}\n                onOk={() => this.handleOk(idx)}\n                onCancel={() => this.handleCancel(idx)}\n              >\n                <Form\n                  onFinish={(value) => this.editClass(val.classCode, value)}\n                  layout=\"inline\"\n                  name=\"dynamic_rule\"\n                >\n                  <Form.Item name=\"className\">\n                    <h4>{`Class Code: ${val.classCode}`}</h4>\n                  </Form.Item>\n                  <Form.Item\n                    name=\"className\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input Class Name\",\n                      },\n                    ]}\n                  >\n                    <Input\n                      className=\"infoInput\"\n                      defaultValue={val.className}\n                      placeholder=\"Please input Class Name\"\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      className=\"addButton\"\n                      htmlType=\"submit\"\n                      type=\"primary\"\n                    >\n                      Add Class\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Modal>\n              <Link\n                style={{ margin: \"10px\" }}\n                to={{\n                  pathname: `/whiteboard`,\n                  state: { roomID: val.roomId, role: status.role },\n                }}\n              >\n                Whiteboard\n              </Link>\n              <Link\n                to={{\n                  pathname: \"/assessment\",\n                  state: { val, collapse: this.props.location.state },\n                }}\n              >\n                Assessment\n              </Link>\n            </div>\n          }\n        >\n          Teacher: {val.owner}\n        </Card>\n      );\n    });\n  }; //end renderClass\n\n  //This function will render jsx depending on role\n  //return:JSX:contains jsx expression of teacher role parts\n  getRole = () => {\n    const { status } = this.context;\n    if (status.role) {\n      return (\n        <div>\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => this.showModal(0)}\n          ></Button>\n          <Modal\n            title=\"Create Class\"\n            visible={this.state.visible[0]}\n            onOk={() => this.handleOk(0)}\n            onCancel={() => this.handleCancel(0)}\n          >\n            <Form onFinish={this.addClass} layout=\"inline\" name=\"dynamic_rule\">\n              <Form.Item\n                name=\"className\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input Class Name\",\n                  },\n                ]}\n              >\n                <Input\n                  className=\"infoInput\"\n                  placeholder=\"Please input Class Name\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Button className=\"addButton\" htmlType=\"submit\" type=\"primary\">\n                  Create Class\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </div>\n      );\n    }\n  }; //end getRole\n\n  //This function will render the class component\n  //return:JSX:contians the jsx ecpression of the class componenet\n  render() {\n    const { classes } = this.state;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SiderBar state={this.props.location.state} />\n        <Layout className=\"site-layout\">\n          <HeaderSection />\n          <Content style={{ margin: \"10px 16px\" }}>\n            <Card title=\"Classes\" extra={this.getRole()}>\n              {\" \"}\n              {classes == undefined ? (\n                <div className=\"loader\">\n                  <Spin size=\"large\" tip=\"Loading...\" />\n                </div>\n              ) : (\n                this.renderClass(classes)\n              )}\n            </Card>\n          </Content>\n          <FooterSection />\n        </Layout>\n      </Layout>\n    );\n  } //end render\n} //end class Classes\n\nexport default Classes;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\ExtraInfo.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Assessment.js",["164","165","166","167","168","169","170"],"import React, { Component } from \"react\";\nimport \"./ui.css\";\nimport FooterSection from \"./FooterSection\";\nimport HeaderSection from \"./HeaderSection\";\nimport {\n  Layout,\n  Card,\n  Spin,\n  Button,\n  Form,\n  Input,\n  Modal,\n  DatePicker,\n} from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport SideBar from \"./SideBar\";\nimport { AuthContext } from \"../utils/Auth\";\nimport { Link } from \"react-router-dom\";\nimport { v1 as uuid } from \"uuid\";\nimport {\n  deleteAssessment,\n  getAssessment,\n  addAssessment,\n} from \"../utils/Firestore\";\nconst { Content } = Layout;\n\nclass Assessment extends Component {\n  static contextType = AuthContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      classInfo: this.props.location.state.val,\n      assessments: undefined,\n      visible: false,\n    };\n  }\n  getAllAssessment = async () => {\n    const { classInfo } = this.state;\n    const classCode = classInfo.classCode;\n    let data = await getAssessment(classCode);\n    if (data.assessments.length == 0) {\n      data = false;\n    }\n    this.setState({ assessments: data });\n  };\n  addAssessmentOnClick = (value) => {\n    this.createAssessment(value);\n  };\n  createAssessment = async (value) => {\n    const date = value.date._d;\n    const descp = value.descp;\n    let { assessments, classInfo } = this.state;\n    const classCode = classInfo.classCode;\n    const roomId = uuid();\n    const assessmentObj = value.assessmentName;\n    const result = await addAssessment(\n      classCode,\n      assessmentObj,\n      roomId,\n      date,\n      descp\n    );\n    if (result == false) {\n      alert(\"Error, please try again later\");\n    } else {\n      if (assessments == false) {\n        assessments = { assessments: [{ assessmentObj, descp, roomId }] };\n      } else {\n        assessments.assessments.push({ assessmentObj, descp, roomId });\n      }\n      this.handleOk();\n    }\n    this.setState({ assessments });\n  };\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleOk = () => {\n    this.setState({ visible: false });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  delete = async (roomId) => {\n    const { classInfo } = this.state;\n    const classCode = classInfo.classCode;\n    await deleteAssessment(classCode, roomId);\n    this.getAllAssessment();\n  };\n\n  renderAssessments = () => {\n    const { assessments, classInfo } = this.state;\n    const { status } = this.context;\n    const classCode = classInfo.classCode;\n    if (assessments == false) return <h2>No Assessments</h2>;\n    return assessments.assessments.map((val, idx) => {\n      const { assessmentObj, roomId, descp, socketId } = val;\n      return (\n        <Card\n          className=\"customCard\"\n          key={idx}\n          type=\"inner\"\n          title={assessmentObj}\n          extra={\n            socketId != undefined || status.role == true ? (\n              <div>\n                <Button\n                  type=\"primary\"\n                  style={{ marginRight: \"10px\" }}\n                  onClick={() => this.delete(roomId)}\n                >\n                  Delete Assessment\n                </Button>\n                <Link\n                  to={{\n                    pathname: \"/room\",\n                    state: {\n                      roomID: roomId,\n                      name: status.nickname,\n                      code: classCode,\n                      socketId,\n                      role: status.role,\n                    },\n                  }}\n                >\n                  Join Assessment Room\n                </Link>\n              </div>\n            ) : (\n              <Link disabled>{socketId}Assessment Not Open</Link>\n            )\n          }\n        >\n          {descp}\n        </Card>\n      );\n    });\n  };\n\n  getRole = () => {\n    const { status } = this.context;\n    if (status != null) {\n      if (status.role) {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={this.showModal}\n            ></Button>\n            <Modal\n              title=\"Add Assessment\"\n              visible={this.state.visible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n            >\n              <Form\n                onFinish={this.addAssessmentOnClick}\n                name=\"dynamic_rule\"\n                labelCol={{\n                  span: 2,\n                }}\n                wrapperCol={{\n                  span: 14,\n                }}\n                layout=\"horizontal\"\n              >\n                <Form.Item\n                  name=\"assessmentName\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input Assessment Name\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Please input Assessment Name\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"descp\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input Description \",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Please input Description\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter a date\",\n                    },\n                  ]}\n                >\n                  <DatePicker />\n                </Form.Item>\n                <Form.Item>\n                  <Button\n                    className=\"addButton\"\n                    htmlType=\"submit\"\n                    type=\"primary\"\n                  >\n                    Add Assessment\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Modal>\n          </div>\n        );\n      } else {\n        return <div>Student</div>;\n      }\n    }\n  };\n  componentDidMount() {\n    this.getAllAssessment();\n  }\n  render() {\n    const { assessments } = this.state;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SideBar state={this.props.location.state.collapse} />\n        <Layout className=\"site-layout\">\n          <HeaderSection />\n          <Content style={{ margin: \"10px 16px\" }}>\n            <Card title=\"Assessments\" extra={this.getRole()}>\n              {assessments == undefined ? (\n                <div className=\"loader\">\n                  <Spin size=\"large\" tip=\"Loading...\" />\n                </div>\n              ) : (\n                this.renderAssessments()\n              )}\n            </Card>\n          </Content>\n          <FooterSection />\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default Assessment;\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\base.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\Firestore.js",["171","172","173","174","175"],"import { db } from \"./base\";\nimport firebase from \"firebase/app\";\nimport { quickSort } from \"./algoritims\";\n\nconst checkUserExist = async (uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  const doc = await docRef.get();\n\n  if (!doc.exists) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst addUser = async (uid, val) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  let userRole = {\n    role: null,\n  };\n  if (val) {\n    userRole.role = true;\n  } else {\n    userRole.role = false;\n  }\n  await docRef.set(userRole);\n};\n\nconst addInfo = async (values, uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  await docRef.update(values);\n};\nconst addClass = (code, className, uid, room) => {\n  const docRef = db.collection(\"classes\").doc(code);\n  let data = {\n    classCode: code,\n    className: className,\n    owner: uid,\n    room: room,\n    students: null,\n  };\n  docRef.set(data);\n  const asmRef = db.collection(\"assessment\").doc(code);\n  asmRef.set({\n    className: className,\n    assessments: [],\n  });\n  addClassToUser(code, uid);\n};\nconst joinClass = async (code, uid) => {\n  try {\n    console.log(code, uid);\n    const classesRef = db.collection(\"classes\").doc(code.trim());\n    await classesRef.update({\n      students: firebase.firestore.FieldValue.arrayUnion(uid),\n    });\n    addClassToUser(code, uid);\n  } catch (err) {\n    console.log(err);\n    return err;\n  }\n};\nconst getAllClasses = async (uid, studentOrTeacher) => {\n  const docRef = db.collection(\"classes\");\n  let query = null;\n  if (studentOrTeacher == true) {\n    query = docRef.where(\"owner\", \"==\", uid);\n  } else {\n    query = docRef.where(\"students\", \"array-contains\", uid);\n  }\n  const data = await query.get();\n  const classes = [];\n  for (let i = 0; i < data.docs.length; i++) {\n    let tempData = data.docs[i].data();\n    const id = tempData.owner;\n    const name = await getNameById(id);\n    tempData.owner = name;\n    classes.push(tempData);\n  }\n  return classes;\n};\nconst addClassToUser = async (code, uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  await docRef.update({\n    Classes: firebase.firestore.FieldValue.arrayUnion(code),\n  });\n};\nconst getUserRole = async (uid) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  const doc = await docRef.get();\n  const data = doc.data();\n  return data;\n};\n\nconst updateClass = async (classCode, className) => {\n  try {\n    const docRef = db.collection(\"classes\").doc(classCode);\n    await docRef.update({\n      className,\n    });\n  } catch (e) {}\n};\nconst updateUserDetails = async (uid, nickname, status) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  await docRef.update({\n    nickname,\n    status,\n  });\n};\nconst getLatestAssessments = async (classes) => {\n  if (classes != undefined) {\n    const docRef = db.collection(\"assessment\");\n    const query = docRef.where(\"classCode\", \"in\", classes);\n    const data = await query.get();\n    const currentDate = new Date();\n    let filteredData = [];\n    data.docs.map((doc) => {\n      const tempData = doc.data();\n      tempData.assessments.map((val) => {\n        filteredData.push(val);\n        var storedDate = new Date(val.date);\n        var elapsedTime = storedDate.getTime() - currentDate.getTime();\n        val.elapsedTime = elapsedTime;\n        return val;\n      });\n    });\n    console.log(filteredData.lenght + \" dsddds\");\n    if (filteredData.lenght > 1) {\n      filteredData = quickSort(filteredData, 0, filteredData.length - 1);\n    }\n    return filteredData;\n  } else {\n    return [];\n  }\n};\n\nconst getNameById = async (uid) => {\n  try {\n    const docRef = db.collection(\"users\").doc(uid);\n    const doc = await docRef.get();\n    const username = doc.data().nickname;\n    return username;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst addAssessment = async (classCode, assessmentObj, roomId, date, descp) => {\n  try {\n    const docRef = db.collection(\"assessment\").doc(classCode);\n    await docRef.update({\n      classCode,\n      assessments: firebase.firestore.FieldValue.arrayUnion({\n        assessmentObj,\n        descp,\n        roomId,\n        date: date.toString(),\n        socketId: null,\n      }),\n    });\n    return true;\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n};\nconst getAssessment = async (classCode) => {\n  const docRef = db.collection(\"assessment\").doc(classCode);\n  const doc = await docRef.get();\n  return doc.data();\n};\n\nconst addTeacherSocket = async (sockedId, classCode, roomdId) => {\n  const docRef = db.collection(\"assessment\").doc(classCode);\n  const doc = await docRef.get();\n  let data = doc.data();\n  let filteredArr = data.assessments.map((val) => {\n    if (val.roomId == roomdId) {\n      val[\"socketId\"] = sockedId;\n    }\n    return val;\n  });\n  data.assessments = filteredArr;\n  docRef.set(data);\n};\n\nconst deleteAssessment = async (classCode, roomId) => {\n  const docRef = db.collection(\"assessment\").doc(classCode);\n  const doc = await docRef.get();\n  let data = doc.data();\n  let filteredArr = data.assessments.filter((val) => val.roomId != roomId);\n  data.assessments = filteredArr;\n  docRef.set(data);\n};\n\nexport {\n  getNameById,\n  deleteAssessment,\n  updateClass,\n  updateUserDetails,\n  getLatestAssessments,\n  addTeacherSocket,\n  getAssessment,\n  addAssessment,\n  checkUserExist,\n  addUser,\n  getUserRole,\n  addClass,\n  joinClass,\n  addInfo,\n  getAllClasses,\n};\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\FooterSection.js",[],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\HeaderSection.js",["176"],"//Noel Gregory\n//2021-03-29\n//This file will create a header section component\n\n//imports\nimport React from \"react\";\nimport { Layout, Input, Button } from \"antd\";\nimport { app } from \"../utils/base\";\nconst { Header } = Layout;\n\n//This function will return a header component\n//return:JSX:returns headersections jsx expression\nconst HeaderSection = () => {\n  return (\n    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n      <Button\n        size=\"large\"\n        style={{ float: \"right\", margin: \"10px\" }}\n        onClick={() => app.auth().signOut()}\n        type=\"primary\"\n      >\n        Sign out\n      </Button>\n    </Header>\n  );\n}; //end HeaderSection\n\nexport default React.memo(HeaderSection);\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Navbar.js",["177"],"import React from \"react\";\nimport { Layout, Menu } from \"antd\";\n\nconst { Header } = Layout;\n\nconst Navbar = () => {\n  return (\n    <Header>\n      <img className=\"logoNavbar\" src=\"/logo.png\"></img>\n      <Menu theme=\"dark\" mode=\"horizontal\"></Menu>\n    </Header>\n  );\n};\n\nexport default React.memo(Navbar);\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\SideBar.js",["178","179","180","181"],"import React, { Component } from \"react\";\nimport \"./ui.css\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props);\n    let temp = false;\n    if (this.props[\"state\"] != undefined) {\n      temp = this.props.state;\n    }\n    this.state = {\n      collapsed: temp,\n    };\n  }\n\n  onCollapse = (collapsed) => {\n    this.setState({ collapsed });\n  };\n\n  render() {\n    const { collapsed } = this.state;\n    return (\n      <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n        {collapsed ? (\n          <img className=\"logosmall\" src=\"/logosmall.png\"></img>\n        ) : (\n          <img className=\"logo\" src=\"/logo.png\"></img>\n        )}\n        <Menu theme=\"dark\" mode=\"inline\">\n          <Menu.Item icon={<PieChartOutlined />}>\n            <Link\n              to={{\n                pathname: \"/\",\n                state: collapsed,\n              }}\n            >\n              Home\n            </Link>\n          </Menu.Item>\n          <Menu.Item icon={<DesktopOutlined />}>\n            <Link\n              to={{\n                pathname: \"/classes\",\n                state: collapsed,\n              }}\n            >\n              Classes\n            </Link>\n          </Menu.Item>\n          <Menu.Item icon={<SettingOutlined />}>\n            <Link\n              to={{\n                pathname: \"/setting\",\n                state: collapsed,\n              }}\n            >\n              Settings\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n  }\n}\n\nexport default React.memo(SideBar);\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\room.js",["182","183","184","185","186","187","188","189","190","191","192","193","194","195"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport { addTeacherSocket } from \"../utils/Firestore\";\r\nimport { pearson } from \"../utils/algoritims\";\r\nimport { Modal, Button, Image } from \"antd\";\r\nimport \"./room.css\";\r\nconst Video = (props) => {\r\n  const ref = useRef();\r\n  const [visible, setVisible] = useState(false);\r\n  const [url, setUrl] = useState();\r\n\r\n  useEffect(() => {\r\n    props.peer.peer.on(\"stream\", (stream) => {\r\n      ref.current.srcObject = stream;\r\n    });\r\n    var target = document.getElementById(\"d\" + props.id);\r\n\r\n    var observer = new MutationObserver(function (mutations) {\r\n      mutations.forEach(function (mutation) {\r\n        takepicture();\r\n      });\r\n    });\r\n\r\n    var config = {\r\n      childList: true,\r\n      subtree: true,\r\n      characterData: true,\r\n    };\r\n\r\n    observer.observe(target, config);\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const takepicture = () => {\r\n    const percentTxt = parseInt(\r\n      document\r\n        .getElementById(\"d\" + props.id)\r\n        .innerText.replace(\"Cheating %: \", \"\")\r\n    );\r\n\r\n    if (percentTxt >= 60) {\r\n      var canvas = document.createElement(\"CANVAS\");\r\n      var context = canvas.getContext(\"2d\");\r\n      context.drawImage(ref.current, 0, 0, canvas.width, canvas.height);\r\n      var data = canvas.toDataURL(\"image/png\");\r\n      setUrl(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ width: vid.width + 30, height: vid.height + 30 }}\r\n      className=\"grid-item\"\r\n    >\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td id={\"d\" + props.id}>Cheating %: 0</td>\r\n            <td style={{ marginLeft: \"20px\" }} id={props.id}></td>\r\n            <td\r\n              style={{ marginLeft: \"20px\" }}\r\n              className=\"cheating_blink\"\r\n              id={\"c\" + props.id}\r\n            ></td>\r\n            <td>\r\n              {\" \"}\r\n              <Button type=\"primary\" onClick={showModal}>\r\n                Get Cheating Image\r\n              </Button>\r\n              <Modal\r\n                title=\"Cheating Image\"\r\n                visible={visible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                width={vid.width + 50}\r\n                height={vid.height}\r\n              >\r\n                <Image\r\n                  width={vid.width}\r\n                  height={vid.height}\r\n                  id={\"img\" + props.id}\r\n                  src={url}\r\n                  alt=\"Not Available\"\r\n                />\r\n              </Modal>\r\n            </td>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <video\r\n        width={vid.width}\r\n        height={vid.height}\r\n        playsInline\r\n        autoPlay\r\n        ref={ref}\r\n      ></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet vid = {\r\n  height: window.innerHeight / 1,\r\n  width: window.innerWidth / 1,\r\n};\r\n\r\nconst Room = (props) => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [visible, setVisible] = useState();\r\n  let checker = 0;\r\n  let currentImage = [];\r\n  const socketRef = useRef();\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const { name, roomID, code, socketId, role } = props.location.state;\r\n  let counter = 1;\r\n  const endPoint = {\r\n    local: \"http://localhost:8000/\",\r\n    prod: \"https://isugapi.herokuapp.com/\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(endPoint.prod);\r\n    navigator.mediaDevices\r\n      .getDisplayMedia({\r\n        video: {\r\n          width: 1280,\r\n          height: 720,\r\n          frameRate: {\r\n            ideal: 10,\r\n            max: 15,\r\n          },\r\n        },\r\n        cursor: true,\r\n        mimeType: \"video/webm; codecs=vp9\",\r\n      })\r\n      .then((stream) => {\r\n        userVideo.current.srcObject = stream;\r\n\r\n        if (role == false) {\r\n          setInterval(() => {\r\n            try {\r\n              if (checker >= 1) {\r\n                const canvas = document.getElementById(\"canvas\");\r\n                const ctx = canvas.getContext(\"2d\");\r\n                ctx.drawImage(userVideo.current, 0, 0, 16, 12);\r\n                const imageData = ctx.getImageData(\r\n                  0,\r\n                  0,\r\n                  canvas.width,\r\n                  canvas.height\r\n                );\r\n                let data = imageData.data;\r\n\r\n                if (checker == 1 || checker == 2) {\r\n                  currentImage = imageData.data;\r\n                  checker++;\r\n                }\r\n                const result = pearson(data, currentImage);\r\n                const date = new Date().getTime();\r\n                socketRef.current.emit(\"sendMsg\", {\r\n                  data: result,\r\n                  id: socketId,\r\n                  myId: socketRef.current.id,\r\n                  time: date,\r\n                  name: name,\r\n                });\r\n              }\r\n            } catch (e) {}\r\n          }, 1000);\r\n        }\r\n\r\n        socketRef.current.emit(\"join room\", roomID);\r\n\r\n        if (role == true) {\r\n          addSocket(socketRef.current.id);\r\n        }\r\n        socketRef.current.on(\"all users\", (users) => {\r\n          const peers = [];\r\n\r\n          users.forEach((userID) => {\r\n            if (socketId == userID) {\r\n              const peer = createPeer(userID, socketRef.current.id, stream);\r\n              peersRef.current.push({\r\n                id: userID,\r\n                peer,\r\n              });\r\n              peers.push({ peer, id: userID });\r\n            }\r\n          });\r\n          setPeers(peers);\r\n        });\r\n        socketRef.current.on(\"cheater\", (payload) => {\r\n          try {\r\n            let data = document.getElementById(payload.myId);\r\n            let count = document.getElementById(\"d\" + payload.myId);\r\n\r\n            data.innerText = \"Name: \" + payload.name;\r\n            if (typeof payload.data === \"number\") {\r\n              const percent = parseInt(Math.abs(payload.data * 100 - 100));\r\n\r\n              if (percent >= 60) {\r\n                document.getElementById(\"c\" + payload.myId).innerText =\r\n                  \"Cheating !\";\r\n                setTimeout(() => {\r\n                  document.getElementById(\"c\" + payload.myId).innerText = \"\";\r\n                }, 5000);\r\n              }\r\n              count.innerText = `Cheating %: ${percent}`;\r\n            }\r\n          } catch (e) {}\r\n        });\r\n        if (role == false) {\r\n          socketRef.current.on(\"startChecker\", (payload) => {\r\n            if (payload.roomId == roomID) {\r\n              checker++;\r\n            }\r\n          });\r\n        }\r\n\r\n        socketRef.current.on(\"user joined\", (payload) => {\r\n          const peer = addPeer(payload.signal, payload.callerID, stream);\r\n          peersRef.current.push({\r\n            id: payload.callerID,\r\n            peer,\r\n          });\r\n          counter++;\r\n          calcPlayerSize();\r\n\r\n          setPeers((users) => [...users, { peer, id: payload.callerID }]);\r\n        });\r\n\r\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.id == payload.id);\r\n          if (item) {\r\n            item.peer.signal(payload.signal);\r\n          }\r\n        });\r\n\r\n        socketRef.current.on(\"user disconnected\", (id) => {\r\n          const peerObj = peersRef.current.find((p) => p.id == id);\r\n          if (peerObj) {\r\n            peerObj.peer.destroy();\r\n            counter--;\r\n            calcPlayerSize();\r\n          }\r\n\r\n          const peers = peersRef.current.filter((p) => p.id !== id);\r\n          peersRef.current = peers;\r\n          setPeers(peers);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const addSocket = (id) => {\r\n    addTeacherSocket(id, code, roomID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socketRef.current.close();\r\n    };\r\n  }, []);\r\n\r\n  function createPeer(userToSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      console.log(signal);\r\n      socketRef.current.emit(\"sending signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n      });\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerID, stream) {\r\n    console.log(stream);\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      console.log(signal);\r\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  const calcPlayerSize = () => {\r\n    if (\r\n      window.innerHeight / counter > 150 ||\r\n      window.innerWidth / counter > 150\r\n    ) {\r\n      vid.height = window.innerHeight / counter;\r\n      vid.width = window.innerWidth / counter;\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const startChecker = () => {\r\n    socketRef.current.emit(\"checker\", { roomId: roomID });\r\n    handleCancel();\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div\r\n        style={\r\n          role == true\r\n            ? { width: vid.width + 30, height: vid.height + 30 }\r\n            : { width: vid.width, height: vid.height }\r\n        }\r\n        className=\"grid-item\"\r\n      >\r\n        <table>\r\n          <tr>\r\n            <td>\r\n              <canvas\r\n                style={{ display: \"none\" }}\r\n                id=\"canvas\"\r\n                width=\"16\"\r\n                height=\"12\"\r\n              ></canvas>\r\n            </td>\r\n\r\n            {role == true ? (\r\n              <td>\r\n                <Button type=\"primary\" onClick={showModal}>\r\n                  Start Cheater Checker\r\n                </Button>\r\n                <Modal\r\n                  title=\"Cheating Image\"\r\n                  visible={visible}\r\n                  onOk={handleOk}\r\n                  onCancel={handleCancel}\r\n                >\r\n                  <p> Click Start when all students are on test screen</p>\r\n                  <Button type=\"primary\" onClick={startChecker}>\r\n                    Start\r\n                  </Button>\r\n                </Modal>\r\n              </td>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <td style={{ marginLeft: \"100px\" }}>{\"Name: \" + name}</td>\r\n          </tr>\r\n        </table>\r\n\r\n        <video\r\n          width={vid.width}\r\n          height={vid.height}\r\n          playsInline\r\n          autoPlay\r\n          ref={userVideo}\r\n        ></video>\r\n      </div>\r\n\r\n      {role == true\r\n        ? peers.map((peer) => {\r\n            return <Video key={peer.id} id={peer.id} peer={peer} />;\r\n          })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\utils\\algoritims.js",["196","197","198","199","200"],"function kumarHassebrook(a, b) {\r\n  var ii = a.length;\r\n  var p = 0;\r\n  var p2 = 0;\r\n  var q2 = 0;\r\n  for (var i = 0; i < ii; i++) {\r\n    p += a[i] * b[i];\r\n    p2 += a[i] * a[i];\r\n    q2 += b[i] * b[i];\r\n  }\r\n  return p / (p2 + q2 - p);\r\n}\r\n\r\nfunction mean(a) {\r\n  let total = a.reduce((acc, val) => (acc += val), 0);\r\n  return total / a.length;\r\n}\r\nexport function pearson(a, b) {\r\n  var avgA = mean(a);\r\n  var avgB = mean(b);\r\n\r\n  var newA = new Array(a.length);\r\n  var newB = new Array(b.length);\r\n  for (var i = 0; i < newA.length; i++) {\r\n    newA[i] = a[i] - avgA;\r\n    newB[i] = b[i] - avgB;\r\n  }\r\n\r\n  return kumarHassebrook(newA, newB);\r\n}\r\n\r\nexport const generateCode = () => {\r\n  const str = \"qwertyuioplkjhgfdsazxcvbnm1234567890QAZXSWEDCVFRTGBNHYUJMKILOP\";\r\n  let genStr = \"\";\r\n  for (let i = 0; i < 5; i++) {\r\n    const randomIndex = Math.floor(Math.random() * str.length);\r\n    genStr += str[randomIndex];\r\n  }\r\n  return genStr;\r\n};\r\n\r\nexport const convertMS = (ms) => {\r\n  var d, h, m, s;\r\n  s = Math.floor(ms / 1000);\r\n  m = Math.floor(s / 60);\r\n  s = s % 60;\r\n  h = Math.floor(m / 60);\r\n  m = m % 60;\r\n  d = Math.floor(h / 24);\r\n  h = h % 24;\r\n  let date = \"\";\r\n  if (d != 0) {\r\n    date += d + \" days, \";\r\n    return date;\r\n  }\r\n  if (h != 0) {\r\n    date += h + \" hours, \";\r\n  }\r\n  if (m != 0) {\r\n    date += m + \" minutes, \";\r\n  }\r\n  if (s != 0) {\r\n    date += s + \" seconds \";\r\n  }\r\n\r\n  return date;\r\n};\r\n\r\nconst partition = (arr, start, end) => {\r\n  let p = arr[end].elapsedTime;\r\n  let pIndex = start;\r\n  for (let i = start; i < end; i++) {\r\n    if (arr[i].elapsedTime <= p) {\r\n      let temp = arr[i];\r\n      arr[i] = arr[pIndex];\r\n      arr[pIndex] = temp;\r\n      pIndex++;\r\n    }\r\n  }\r\n  let temp = arr[pIndex];\r\n  arr[pIndex] = arr[end];\r\n  arr[end] = temp;\r\n  return pIndex;\r\n};\r\n\r\nexport const quickSort = (arr, start, end) => {\r\n  if (start >= end) return;\r\n\r\n  let index = partition(arr, start, end);\r\n  quickSort(arr, start, index - 1);\r\n  quickSort(arr, index + 1, end);\r\n  return arr;\r\n};\r\n\r\nconst cosineSimilar = (A, B) => {\r\n  var dotproduct = 0;\r\n  var mA = 0;\r\n  var mB = 0;\r\n  for (let i = 0; i < A.length; i++) {\r\n    dotproduct += A[i] * B[i];\r\n    mA += A[i] * A[i];\r\n    mB += B[i] * B[i];\r\n  }\r\n  mA = Math.sqrt(mA);\r\n  mB = Math.sqrt(mB);\r\n  var similarity = dotproduct / (mA * mB);\r\n  return similarity;\r\n};\r\n","C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\whiteboard.js",["201","202","203","204"],"C:\\Users\\Noel\\Desktop\\Javascript\\Node.js\\CheaterChecker\\frontend\\src\\components\\Settings.js",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"205","replacedBy":"209"},{"ruleId":"207","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":28},{"ruleId":"205","replacedBy":"215"},{"ruleId":"207","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":42,"column":41,"nodeType":"219","messageId":"220","endLine":42,"endColumn":43},{"ruleId":"217","severity":1,"message":"218","line":61,"column":24,"nodeType":"219","messageId":"220","endLine":61,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":32,"column":16,"nodeType":"219","messageId":"220","endLine":32,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":40,"column":16,"nodeType":"219","messageId":"220","endLine":40,"endColumn":18},{"ruleId":"217","severity":1,"message":"221","line":79,"column":18,"nodeType":"219","messageId":"220","endLine":79,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":92,"column":21,"nodeType":"219","messageId":"220","endLine":92,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":143,"column":23,"nodeType":"219","messageId":"220","endLine":143,"endColumn":25},{"ruleId":"211","severity":1,"message":"222","line":12,"column":18,"nodeType":"213","messageId":"214","endLine":12,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":21,"column":13,"nodeType":"219","messageId":"220","endLine":21,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":57,"column":7,"nodeType":"225","messageId":"220","endLine":57,"endColumn":12},{"ruleId":"217","severity":1,"message":"218","line":59,"column":17,"nodeType":"219","messageId":"220","endLine":59,"endColumn":19},{"ruleId":"217","severity":1,"message":"218","line":117,"column":17,"nodeType":"219","messageId":"220","endLine":117,"endColumn":19},{"ruleId":"217","severity":1,"message":"221","line":129,"column":30,"nodeType":"219","messageId":"220","endLine":129,"endColumn":32},{"ruleId":"217","severity":1,"message":"218","line":132,"column":29,"nodeType":"219","messageId":"220","endLine":132,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":264,"column":24,"nodeType":"219","messageId":"220","endLine":264,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":41,"column":33,"nodeType":"219","messageId":"220","endLine":41,"endColumn":35},{"ruleId":"217","severity":1,"message":"218","line":63,"column":16,"nodeType":"219","messageId":"220","endLine":63,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":66,"column":23,"nodeType":"219","messageId":"220","endLine":66,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":98,"column":21,"nodeType":"219","messageId":"220","endLine":98,"endColumn":23},{"ruleId":"217","severity":1,"message":"221","line":108,"column":22,"nodeType":"219","messageId":"220","endLine":108,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":108,"column":50,"nodeType":"219","messageId":"220","endLine":108,"endColumn":52},{"ruleId":"217","severity":1,"message":"218","line":234,"column":28,"nodeType":"219","messageId":"220","endLine":234,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":66,"column":24,"nodeType":"219","messageId":"220","endLine":66,"endColumn":26},{"ruleId":"217","severity":1,"message":"221","line":111,"column":15,"nodeType":"219","messageId":"220","endLine":111,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":117,"column":25,"nodeType":"228","messageId":"229","endLine":117,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":178,"column":20,"nodeType":"219","messageId":"220","endLine":178,"endColumn":22},{"ruleId":"217","severity":1,"message":"221","line":191,"column":65,"nodeType":"219","messageId":"220","endLine":191,"endColumn":67},{"ruleId":"211","severity":1,"message":"230","line":7,"column":18,"nodeType":"213","messageId":"214","endLine":7,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":9,"column":7,"nodeType":"233","endLine":9,"endColumn":51},{"ruleId":"211","severity":1,"message":"234","line":11,"column":9,"nodeType":"213","messageId":"214","endLine":11,"endColumn":16},{"ruleId":"217","severity":1,"message":"221","line":17,"column":29,"nodeType":"219","messageId":"220","endLine":17,"endColumn":31},{"ruleId":"231","severity":1,"message":"232","line":34,"column":11,"nodeType":"233","endLine":34,"endColumn":59},{"ruleId":"231","severity":1,"message":"232","line":36,"column":11,"nodeType":"233","endLine":36,"endColumn":49},{"ruleId":"235","severity":1,"message":"236","line":32,"column":6,"nodeType":"237","endLine":32,"endColumn":8,"suggestions":"238"},{"ruleId":"217","severity":1,"message":"218","line":151,"column":18,"nodeType":"219","messageId":"220","endLine":151,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":166,"column":29,"nodeType":"219","messageId":"220","endLine":166,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":166,"column":45,"nodeType":"219","messageId":"220","endLine":166,"endColumn":47},{"ruleId":"235","severity":1,"message":"239","line":167,"column":34,"nodeType":"240","endLine":167,"endColumn":48},{"ruleId":"217","severity":1,"message":"218","line":186,"column":18,"nodeType":"219","messageId":"220","endLine":186,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":193,"column":26,"nodeType":"219","messageId":"220","endLine":193,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":224,"column":18,"nodeType":"219","messageId":"220","endLine":224,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":226,"column":32,"nodeType":"219","messageId":"220","endLine":226,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":245,"column":58,"nodeType":"219","messageId":"220","endLine":245,"endColumn":60},{"ruleId":"217","severity":1,"message":"218","line":252,"column":61,"nodeType":"219","messageId":"220","endLine":252,"endColumn":63},{"ruleId":"217","severity":1,"message":"218","line":344,"column":16,"nodeType":"219","messageId":"220","endLine":344,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":361,"column":19,"nodeType":"219","messageId":"220","endLine":361,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":395,"column":13,"nodeType":"219","messageId":"220","endLine":395,"endColumn":15},{"ruleId":"217","severity":1,"message":"221","line":52,"column":9,"nodeType":"219","messageId":"220","endLine":52,"endColumn":11},{"ruleId":"217","severity":1,"message":"221","line":56,"column":9,"nodeType":"219","messageId":"220","endLine":56,"endColumn":11},{"ruleId":"217","severity":1,"message":"221","line":59,"column":9,"nodeType":"219","messageId":"220","endLine":59,"endColumn":11},{"ruleId":"217","severity":1,"message":"221","line":62,"column":9,"nodeType":"219","messageId":"220","endLine":62,"endColumn":11},{"ruleId":"211","severity":1,"message":"241","line":95,"column":7,"nodeType":"213","messageId":"214","endLine":95,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":22,"column":24,"nodeType":"219","messageId":"220","endLine":22,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":27,"column":18,"nodeType":"219","messageId":"220","endLine":27,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":57,"column":14,"nodeType":"219","messageId":"220","endLine":57,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":96,"column":13,"nodeType":"219","messageId":"220","endLine":96,"endColumn":15},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],["242"],["243"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar",["242"],["243"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Steps' is defined but never used.","no-dupe-keys","Duplicate key 'owner'.","ObjectExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Input' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SubMenu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.id', 'props.peer.peer', and 'takepicture'. Either include them or remove the dependency array.","ArrayExpression",["244"],"Assignments to the 'currentImage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'cosineSimilar' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},"Update the dependencies array to be: [props.id, props.peer.peer, takepicture]",{"range":"247","text":"248"},[927,929],"[props.id, props.peer.peer, takepicture]"]