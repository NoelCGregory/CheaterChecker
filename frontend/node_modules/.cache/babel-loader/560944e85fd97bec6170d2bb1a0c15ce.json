{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\utils\\\\Auth.js\";\nimport React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport { checkUserExist } from \"./Firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nclass AuthProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null\n    };\n\n    this.checkUser = async () => {\n      console.log(\"fdfdfdffdf\");\n      const {\n        currentUser\n      } = this.state;\n\n      if (currentUser != null) {\n        let res = await checkUserExist(currentUser.uid);\n\n        if (res) {\n          this.props.history.push({\n            pathname: \"/selectrole\",\n            state: {\n              uid: currentUser.uid\n            }\n          });\n        } else {\n          this.props.history.push(\"/\");\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged(user => {\n      this.setState({\n        currentUser: user\n      });\n    });\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.state;\n    this.checkUser();\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        currentUser\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport { AuthProvider, AuthContext }; // export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/utils/Auth.js"],"names":["React","Component","app","checkUserExist","AuthContext","createContext","AuthProvider","constructor","props","state","currentUser","checkUser","console","log","res","uid","history","push","pathname","componentDidMount","auth","onAuthStateChanged","user","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAGnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,KAEmB,GAFX;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAEW;;AAAA,SASnBC,SATmB,GASP,YAAY;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,YAAM;AAAEH,QAAAA;AAAF,UAAkB,KAAKD,KAA7B;;AACA,UAAIC,WAAW,IAAI,IAAnB,EAAyB;AACvB,YAAII,GAAG,GAAG,MAAMX,cAAc,CAACO,WAAW,CAACK,GAAb,CAA9B;;AACA,YAAID,GAAJ,EAAS;AACP,eAAKN,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,YAAAA,QAAQ,EAAE,aADY;AAEtBT,YAAAA,KAAK,EAAE;AAAEM,cAAAA,GAAG,EAAEL,WAAW,CAACK;AAAnB;AAFe,WAAxB;AAID,SALD,MAKO;AACL,eAAKP,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;AACF,KAvBkB;AAElB;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,GAAG,CAACkB,IAAJ,GAAWC,kBAAX,CAA+BC,IAAD,IAAU;AACtC,WAAKC,QAAL,CAAc;AAAEb,QAAAA,WAAW,EAAEY;AAAf,OAAd;AACD,KAFD;AAGD;;AAiBDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,SAAKE,SAAL;AACA,wBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAED,QAAAA;AAAF,OAA7B;AAAA,gBACG,KAAKF,KAAL,CAAWiB;AADd;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApCkC;;AAuCrC,SAASnB,YAAT,EAAuBF,WAAvB,G,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport { checkUserExist } from \"./Firestore\";\n\nconst AuthContext = React.createContext();\n\nclass AuthProvider extends Component {\n  state = { currentUser: null };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged((user) => {\n      this.setState({ currentUser: user });\n    });\n  }\n  checkUser = async () => {\n    console.log(\"fdfdfdffdf\");\n    const { currentUser } = this.state;\n    if (currentUser != null) {\n      let res = await checkUserExist(currentUser.uid);\n      if (res) {\n        this.props.history.push({\n          pathname: \"/selectrole\",\n          state: { uid: currentUser.uid },\n        });\n      } else {\n        this.props.history.push(\"/\");\n      }\n    }\n  };\n\n  render() {\n    const { currentUser } = this.state;\n    this.checkUser();\n    return (\n      <AuthContext.Provider value={{ currentUser }}>\n        {this.props.children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport { AuthProvider, AuthContext };\n// export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}