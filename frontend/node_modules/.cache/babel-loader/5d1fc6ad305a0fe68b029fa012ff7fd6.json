{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\utils\\\\Auth.js\";\nimport React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport \"antd/dist/antd.css\";\nimport { Spin } from \"antd\";\nimport { checkUserExist, getUserRole } from \"./Firestore\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nclass AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null,\n      loader: true,\n      status: null,\n      selectedRole: false\n    };\n    this.style = {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"75vh\"\n    };\n\n    this.checkUser = async () => {\n      let {\n        currentUser,\n        selectedRole\n      } = this.state;\n\n      if (currentUser != null) {\n        let res = await checkUserExist(currentUser.uid);\n\n        if (res) {\n          selectedRole = \"/selectrole\";\n        } else {\n          selectedRole = \"/\";\n        }\n      }\n\n      this.setState({\n        currentUser,\n        selectedRole\n      });\n    };\n\n    this.getRole = async () => {\n      const {\n        currentUser,\n        status\n      } = this.state;\n\n      if (currentUser != null && status == null) {\n        const data = await getUserRole(currentUser.uid);\n        this.setState({\n          status: data\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged(user => {\n      this.setState({\n        currentUser: user,\n        loader: false\n      });\n      this.checkUser();\n    });\n  }\n\n  componentDidUpdate() {\n    this.getRole();\n  }\n\n  render() {\n    const {\n      currentUser,\n      loader,\n      status,\n      selectedRole\n    } = this.state;\n    console.log(selectedRole);\n\n    if (selectedRole != false) {\n      console.log(selectedRole);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: selectedRole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (loader) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.style,\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\",\n          tip: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n        value: {\n          currentUser,\n          status\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport { AuthProvider, AuthContext }; // export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/utils/Auth.js"],"names":["React","Component","app","Spin","checkUserExist","getUserRole","Redirect","withRouter","AuthContext","createContext","AuthProvider","state","currentUser","loader","status","selectedRole","style","display","justifyContent","alignItems","height","checkUser","res","uid","setState","getRole","data","componentDidMount","auth","onAuthStateChanged","user","componentDidUpdate","render","console","log","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport \"antd/dist/antd.css\";\nimport { Spin } from \"antd\";\nimport { checkUserExist, getUserRole } from \"./Firestore\";\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nconst AuthContext = React.createContext();\n\nclass AuthProvider extends Component {\n  state = {\n    currentUser: null,\n    loader: true,\n    status: null,\n    selectedRole: false,\n  };\n  style = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"75vh\",\n  };\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged((user) => {\n      this.setState({ currentUser: user, loader: false });\n      this.checkUser();\n    });\n  }\n  checkUser = async () => {\n    let { currentUser, selectedRole } = this.state;\n    if (currentUser != null) {\n      let res = await checkUserExist(currentUser.uid);\n      if (res) {\n        selectedRole = \"/selectrole\";\n      } else {\n        selectedRole = \"/\";\n      }\n    }\n    this.setState({ currentUser, selectedRole });\n  };\n\n  getRole = async () => {\n    const { currentUser, status } = this.state;\n    if (currentUser != null && status == null) {\n      const data = await getUserRole(currentUser.uid);\n      this.setState({ status: data });\n    }\n  };\n  componentDidUpdate() {\n    this.getRole();\n  }\n  render() {\n    const { currentUser, loader, status, selectedRole } = this.state;\n    console.log(selectedRole);\n    if (selectedRole != false) {\n      console.log(selectedRole);\n      return <Redirect to={selectedRole} />;\n    }\n    if (loader) {\n      return (\n        <div style={this.style}>\n          <Spin size=\"large\" tip=\"Loading...\" />\n        </div>\n      );\n    } else {\n      return (\n        <AuthContext.Provider value={{ currentUser, status }}>\n          {this.props.children}\n        </AuthContext.Provider>\n      );\n    }\n  }\n}\n\nexport { AuthProvider, AuthContext };\n// export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}