{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { app } from \"../utils/base.js\";\nimport firebase from \"firebase\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport { checkUserExist, addUser } from \"../utils/Firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.googleLogin = async () => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      app.auth().signInWithRedirect(provider);\n    };\n\n    this.checkUser = async () => {\n      const {\n        currentUser\n      } = this.context;\n\n      if (currentUser != null) {\n        let res = await checkUserExist(currentUser.uid);\n\n        if (res) {\n          this.props.history.push({\n            pathname: \"/selectrole\",\n            state: {\n              uid: currentUser.uid\n            }\n          });\n        } else {\n          this.props.history.push(\"/\");\n        }\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    this.checkUser();\n  }\n\n  componentDidMount() {\n    this.checkUser();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.googleLogin,\n        children: \"OnClick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLogin.contextType = AuthContext;\nexport default Login; // const Login = ({ history }) => {\n//   const googleLogin = () => {\n//     var provider = new firebase.auth.GoogleAuthProvider();\n//     app.auth().signInWithRedirect(provider);\n//   };\n//   const { currentUser } = useContext(AuthContext);\n//   const loadPage = async () => {\n//     let res = await checkUserExist(currentUser.uid);\n//     if (res) {\n//       history.push({\n//         pathname: \"/chooserole\",\n//         state: { uid: currentUser.uid },\n//       });\n//     } else {\n//       history.push(\"/\");\n//     }\n//   };\n//   if (currentUser) {\n//     console.log(currentUser);\n//     loadPage();\n//   }\n//   return (\n//     <div>\n//       <h1>Log in</h1>\n//       <button onClick={googleLogin}>OnClick</button>\n//     </div>\n//   );\n// };\n// export default withRouter(Login);","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/components/Login.js"],"names":["React","Component","withRouter","app","firebase","AuthContext","checkUserExist","addUser","Login","googleLogin","provider","auth","GoogleAuthProvider","signInWithRedirect","checkUser","currentUser","context","res","uid","props","history","push","pathname","state","componentDidUpdate","componentDidMount","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,oBAAxC;;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAE5BQ,WAF4B,GAEd,YAAY;AACxB,UAAIC,QAAQ,GAAG,IAAIN,QAAQ,CAACO,IAAT,CAAcC,kBAAlB,EAAf;AACAT,MAAAA,GAAG,CAACQ,IAAJ,GAAWE,kBAAX,CAA8BH,QAA9B;AACD,KAL2B;;AAAA,SAO5BI,SAP4B,GAOhB,YAAY;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,OAA7B;;AACA,UAAID,WAAW,IAAI,IAAnB,EAAyB;AACvB,YAAIE,GAAG,GAAG,MAAMX,cAAc,CAACS,WAAW,CAACG,GAAb,CAA9B;;AACA,YAAID,GAAJ,EAAS;AACP,eAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,YAAAA,QAAQ,EAAE,aADY;AAEtBC,YAAAA,KAAK,EAAE;AAAEL,cAAAA,GAAG,EAAEH,WAAW,CAACG;AAAnB;AAFe,WAAxB;AAID,SALD,MAKO;AACL,eAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;AACF,KApB2B;AAAA;;AAsB5BG,EAAAA,kBAAkB,GAAG;AACnB,SAAKV,SAAL;AACD;;AACDW,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,SAAL;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKjB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApC2B;;AAAxBD,K,CACGmB,W,GAActB,W;AAsCvB,eAAeG,KAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { app } from \"../utils/base.js\";\nimport firebase from \"firebase\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport { checkUserExist, addUser } from \"../utils/Firestore\";\n\nclass Login extends Component {\n  static contextType = AuthContext;\n  googleLogin = async () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    app.auth().signInWithRedirect(provider);\n  };\n\n  checkUser = async () => {\n    const { currentUser } = this.context;\n    if (currentUser != null) {\n      let res = await checkUserExist(currentUser.uid);\n      if (res) {\n        this.props.history.push({\n          pathname: \"/selectrole\",\n          state: { uid: currentUser.uid },\n        });\n      } else {\n        this.props.history.push(\"/\");\n      }\n    }\n  };\n\n  componentDidUpdate() {\n    this.checkUser();\n  }\n  componentDidMount() {\n    this.checkUser();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Log in</h1>\n        <button onClick={this.googleLogin}>OnClick</button>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n// const Login = ({ history }) => {\n//   const googleLogin = () => {\n//     var provider = new firebase.auth.GoogleAuthProvider();\n//     app.auth().signInWithRedirect(provider);\n//   };\n//   const { currentUser } = useContext(AuthContext);\n\n//   const loadPage = async () => {\n//     let res = await checkUserExist(currentUser.uid);\n//     if (res) {\n//       history.push({\n//         pathname: \"/chooserole\",\n//         state: { uid: currentUser.uid },\n//       });\n//     } else {\n//       history.push(\"/\");\n//     }\n//   };\n\n//   if (currentUser) {\n//     console.log(currentUser);\n//     loadPage();\n//   }\n//   return (\n//     <div>\n//       <h1>Log in</h1>\n//       <button onClick={googleLogin}>OnClick</button>\n//     </div>\n//   );\n// };\n\n// export default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}