{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\utils\\\\Auth.js\";\nimport React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport { checkUserExist } from \"./Firestore\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nclass AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null,\n      loader: true,\n      path: null\n    };\n\n    this.checkUser = async () => {\n      const {\n        currentUser,\n        path\n      } = this.state;\n      console.log(currentUser);\n\n      if (currentUser != null) {\n        let res = await checkUserExist(currentUser.uid);\n\n        if (res) {\n          path = \"/selectrole\";\n        } else {\n          path = \"/\";\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged(user => {\n      this.setState({\n        currentUser: user,\n        loader: false\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    this.checkUser();\n  }\n\n  render() {\n    const {\n      currentUser,\n      loader,\n      path\n    } = this.state;\n\n    if (path != null) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n      path = null;\n    }\n\n    if (loader) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loader....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n        value: {\n          currentUser\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport { AuthProvider, AuthContext }; // export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/utils/Auth.js"],"names":["React","Component","app","checkUserExist","Redirect","AuthContext","createContext","AuthProvider","state","currentUser","loader","path","checkUser","console","log","res","uid","componentDidMount","auth","onAuthStateChanged","user","setState","componentDidUpdate","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCO,KADmC,GAC3B;AAAEC,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,MAAM,EAAE,IAA7B;AAAmCC,MAAAA,IAAI,EAAE;AAAzC,KAD2B;;AAAA,SAQnCC,SARmC,GAQvB,YAAY;AACtB,YAAM;AAAEH,QAAAA,WAAF;AAAeE,QAAAA;AAAf,UAAwB,KAAKH,KAAnC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;;AACA,UAAIA,WAAW,IAAI,IAAnB,EAAyB;AACvB,YAAIM,GAAG,GAAG,MAAMZ,cAAc,CAACM,WAAW,CAACO,GAAb,CAA9B;;AACA,YAAID,GAAJ,EAAS;AACPJ,UAAAA,IAAI,GAAG,aAAP;AACD,SAFD,MAEO;AACLA,UAAAA,IAAI,GAAG,GAAP;AACD;AACF;AACF,KAnBkC;AAAA;;AAGnCM,EAAAA,iBAAiB,GAAG;AAClBf,IAAAA,GAAG,CAACgB,IAAJ,GAAWC,kBAAX,CAA+BC,IAAD,IAAU;AACtC,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAEW,IAAf;AAAqBV,QAAAA,MAAM,EAAE;AAA7B,OAAd;AACD,KAFD;AAGD;;AAaDY,EAAAA,kBAAkB,GAAG;AACnB,SAAKV,SAAL;AACD;;AACDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,WAAF;AAAeC,MAAAA,MAAf;AAAuBC,MAAAA;AAAvB,QAAgC,KAAKH,KAA3C;;AACA,QAAIG,IAAI,IAAI,IAAZ,EAAkB;AAChB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACAA,MAAAA,IAAI,GAAG,IAAP;AACD;;AACD,QAAID,MAAJ,EAAY;AACV,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAED,UAAAA;AAAF,SAA7B;AAAA,kBACG,KAAKe,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAtCkC;;AAyCrC,SAASlB,YAAT,EAAuBF,WAAvB,G,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport { checkUserExist } from \"./Firestore\";\nimport { Redirect } from \"react-router-dom\";\n\nconst AuthContext = React.createContext();\n\nclass AuthProvider extends Component {\n  state = { currentUser: null, loader: true, path: null };\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged((user) => {\n      this.setState({ currentUser: user, loader: false });\n    });\n  }\n  checkUser = async () => {\n    const { currentUser, path } = this.state;\n    console.log(currentUser);\n    if (currentUser != null) {\n      let res = await checkUserExist(currentUser.uid);\n      if (res) {\n        path = \"/selectrole\";\n      } else {\n        path = \"/\";\n      }\n    }\n  };\n  componentDidUpdate() {\n    this.checkUser();\n  }\n  render() {\n    const { currentUser, loader, path } = this.state;\n    if (path != null) {\n      return <Redirect to=\"path\"></Redirect>;\n      path = null;\n    }\n    if (loader) {\n      return <div>Loader....</div>;\n    } else {\n      return (\n        <AuthContext.Provider value={{ currentUser }}>\n          {this.props.children}\n        </AuthContext.Provider>\n      );\n    }\n  }\n}\n\nexport { AuthProvider, AuthContext };\n// export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}