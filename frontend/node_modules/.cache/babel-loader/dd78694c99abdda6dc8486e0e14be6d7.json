{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\utils\\\\Auth.js\";\nimport React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport \"antd/dist/antd.css\";\nimport { Spin } from \"antd\";\nimport { getUserRole } from \"./Firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nclass AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null,\n      loader: true,\n      status: null\n    };\n    this.style = {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"75vh\"\n    };\n\n    this.getRole = async () => {\n      const {\n        currentUser,\n        status\n      } = this.context;\n\n      if (currentUser != null && status == null) {\n        const data = await getUserRole(currentUser.uid);\n        this.setState({\n          status: data\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged(user => {\n      this.setState({\n        currentUser: user,\n        loader: false\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    this.getRole;\n  }\n\n  render() {\n    const {\n      currentUser,\n      loader,\n      status\n    } = this.state;\n\n    if (loader) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.style,\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\",\n          tip: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n        value: {\n          currentUser,\n          status\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport { AuthProvider, AuthContext }; // export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/utils/Auth.js"],"names":["React","Component","app","Spin","getUserRole","AuthContext","createContext","AuthProvider","state","currentUser","loader","status","style","display","justifyContent","alignItems","height","getRole","context","data","uid","setState","componentDidMount","auth","onAuthStateChanged","user","componentDidUpdate","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AACA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCO,KADmC,GAC3B;AAAEC,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,MAAM,EAAE,IAA7B;AAAmCC,MAAAA,MAAM,EAAE;AAA3C,KAD2B;AAAA,SAEnCC,KAFmC,GAE3B;AACNC,MAAAA,OAAO,EAAE,MADH;AAENC,MAAAA,cAAc,EAAE,QAFV;AAGNC,MAAAA,UAAU,EAAE,QAHN;AAINC,MAAAA,MAAM,EAAE;AAJF,KAF2B;;AAAA,SAcnCC,OAdmC,GAczB,YAAY;AACpB,YAAM;AAAER,QAAAA,WAAF;AAAeE,QAAAA;AAAf,UAA0B,KAAKO,OAArC;;AACA,UAAIT,WAAW,IAAI,IAAf,IAAuBE,MAAM,IAAI,IAArC,EAA2C;AACzC,cAAMQ,IAAI,GAAG,MAAMf,WAAW,CAACK,WAAW,CAACW,GAAb,CAA9B;AACA,aAAKC,QAAL,CAAc;AAAEV,UAAAA,MAAM,EAAEQ;AAAV,SAAd;AACD;AACF,KApBkC;AAAA;;AASnCG,EAAAA,iBAAiB,GAAG;AAClBpB,IAAAA,GAAG,CAACqB,IAAJ,GAAWC,kBAAX,CAA+BC,IAAD,IAAU;AACtC,WAAKJ,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAEgB,IAAf;AAAqBf,QAAAA,MAAM,EAAE;AAA7B,OAAd;AACD,KAFD;AAGD;;AAQDgB,EAAAA,kBAAkB,GAAG;AACnB,SAAKT,OAAL;AACD;;AACDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA,WAAF;AAAeC,MAAAA,MAAf;AAAuBC,MAAAA;AAAvB,QAAkC,KAAKH,KAA7C;;AACA,QAAIE,MAAJ,EAAY;AACV,0BACE;AAAK,QAAA,KAAK,EAAE,KAAKE,KAAjB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,MAMO;AACL,0BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEH,UAAAA,WAAF;AAAeE,UAAAA;AAAf,SAA7B;AAAA,kBACG,KAAKiB,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAvCkC;;AA0CrC,SAAStB,YAAT,EAAuBF,WAAvB,G,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport { app } from \"./base\";\nimport \"antd/dist/antd.css\";\nimport { Spin } from \"antd\";\nimport { getUserRole } from \"./Firestore\";\nconst AuthContext = React.createContext();\n\nclass AuthProvider extends Component {\n  state = { currentUser: null, loader: true, status: null };\n  style = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"75vh\",\n  };\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged((user) => {\n      this.setState({ currentUser: user, loader: false });\n    });\n  }\n  getRole = async () => {\n    const { currentUser, status } = this.context;\n    if (currentUser != null && status == null) {\n      const data = await getUserRole(currentUser.uid);\n      this.setState({ status: data });\n    }\n  };\n  componentDidUpdate() {\n    this.getRole;\n  }\n  render() {\n    const { currentUser, loader, status } = this.state;\n    if (loader) {\n      return (\n        <div style={this.style}>\n          <Spin size=\"large\" tip=\"Loading...\" />\n        </div>\n      );\n    } else {\n      return (\n        <AuthContext.Provider value={{ currentUser, status }}>\n          {this.props.children}\n        </AuthContext.Provider>\n      );\n    }\n  }\n}\n\nexport { AuthProvider, AuthContext };\n// export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}