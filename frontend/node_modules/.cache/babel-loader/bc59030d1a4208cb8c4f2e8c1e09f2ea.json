{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { app } from \"../utils/base.js\";\nimport firebase from \"firebase\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport { checkUserExist, addUser } from \"../utils/Firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.googleLogin = async () => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      app.auth().signInWithRedirect(provider).then(async result => {\n        console.log(\"dfd\");\n        var currentUser = result.user;\n        let res = await checkUserExist(currentUser.uid);\n\n        if (res) {\n          this.props.history.push({\n            pathname: \"/selectrole\",\n            state: {\n              uid: currentUser.uid\n            }\n          });\n        } else {\n          this.props.history.push(\"/\");\n        }\n      }).catch(error => {\n        var errorMessage = error.message;\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.googleLogin,\n        children: \"OnClick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login; // const Login = ({ history }) => {\n//   const googleLogin = () => {\n//     var provider = new firebase.auth.GoogleAuthProvider();\n//     app.auth().signInWithRedirect(provider);\n//   };\n//   const { currentUser } = useContext(AuthContext);\n//   const loadPage = async () => {\n//     let res = await checkUserExist(currentUser.uid);\n//     if (res) {\n//       history.push({\n//         pathname: \"/chooserole\",\n//         state: { uid: currentUser.uid },\n//       });\n//     } else {\n//       history.push(\"/\");\n//     }\n//   };\n//   if (currentUser) {\n//     console.log(currentUser);\n//     loadPage();\n//   }\n//   return (\n//     <div>\n//       <h1>Log in</h1>\n//       <button onClick={googleLogin}>OnClick</button>\n//     </div>\n//   );\n// };\n// export default withRouter(Login);","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/components/Login.js"],"names":["React","Component","withRouter","app","firebase","AuthContext","checkUserExist","addUser","Login","googleLogin","provider","auth","GoogleAuthProvider","signInWithRedirect","then","result","console","log","currentUser","user","res","uid","props","history","push","pathname","state","catch","error","errorMessage","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,oBAAxC;;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC5BQ,WAD4B,GACd,YAAY;AACxB,UAAIC,QAAQ,GAAG,IAAIN,QAAQ,CAACO,IAAT,CAAcC,kBAAlB,EAAf;AACAT,MAAAA,GAAG,CACAQ,IADH,GAEGE,kBAFH,CAEsBH,QAFtB,EAGGI,IAHH,CAGQ,MAAOC,MAAP,IAAkB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,YAAIC,WAAW,GAAGH,MAAM,CAACI,IAAzB;AACA,YAAIC,GAAG,GAAG,MAAMd,cAAc,CAACY,WAAW,CAACG,GAAb,CAA9B;;AACA,YAAID,GAAJ,EAAS;AACP,eAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,YAAAA,QAAQ,EAAE,aADY;AAEtBC,YAAAA,KAAK,EAAE;AAAEL,cAAAA,GAAG,EAAEH,WAAW,CAACG;AAAnB;AAFe,WAAxB;AAID,SALD,MAKO;AACL,eAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF,OAfH,EAgBGG,KAhBH,CAgBUC,KAAD,IAAW;AAChB,YAAIC,YAAY,GAAGD,KAAK,CAACE,OAAzB;AACD,OAlBH;AAmBD,KAtB2B;AAAA;;AAwB5BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKtB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA/B2B;;AAkC9B,eAAeD,KAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { app } from \"../utils/base.js\";\nimport firebase from \"firebase\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport { checkUserExist, addUser } from \"../utils/Firestore\";\n\nclass Login extends Component {\n  googleLogin = async () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    app\n      .auth()\n      .signInWithRedirect(provider)\n      .then(async (result) => {\n        console.log(\"dfd\");\n        var currentUser = result.user;\n        let res = await checkUserExist(currentUser.uid);\n        if (res) {\n          this.props.history.push({\n            pathname: \"/selectrole\",\n            state: { uid: currentUser.uid },\n          });\n        } else {\n          this.props.history.push(\"/\");\n        }\n      })\n      .catch((error) => {\n        var errorMessage = error.message;\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Log in</h1>\n        <button onClick={this.googleLogin}>OnClick</button>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n// const Login = ({ history }) => {\n//   const googleLogin = () => {\n//     var provider = new firebase.auth.GoogleAuthProvider();\n//     app.auth().signInWithRedirect(provider);\n//   };\n//   const { currentUser } = useContext(AuthContext);\n\n//   const loadPage = async () => {\n//     let res = await checkUserExist(currentUser.uid);\n//     if (res) {\n//       history.push({\n//         pathname: \"/chooserole\",\n//         state: { uid: currentUser.uid },\n//       });\n//     } else {\n//       history.push(\"/\");\n//     }\n//   };\n\n//   if (currentUser) {\n//     console.log(currentUser);\n//     loadPage();\n//   }\n//   return (\n//     <div>\n//       <h1>Log in</h1>\n//       <button onClick={googleLogin}>OnClick</button>\n//     </div>\n//   );\n// };\n\n// export default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}