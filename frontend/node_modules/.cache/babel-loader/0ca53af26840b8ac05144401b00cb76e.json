{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\components\\\\Main.js\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Typography, Button, Hidden, IconButton, withStyles } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  menuButtonText: {\n    fontSize: theme.typography.body1.fontSize,\n    fontWeight: theme.typography.h6.fontWeight\n  },\n  brandText: {\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\n    fontWeight: 400\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavBar(props) {\n  const {\n    classes,\n    openRegisterDialog,\n    openLoginDialog,\n    handleMobileDrawerOpen,\n    handleMobileDrawerClose,\n    mobileDrawerOpen,\n    selectedTab\n  } = props;\n  const menuItems = [{\n    link: \"/\",\n    name: \"Home\"\n  }, {\n    link: \"/blog\",\n    name: \"Blog\"\n  }, {\n    name: \"Register\",\n    onClick: openRegisterDialog\n  }, {\n    name: \"Login\",\n    onClick: openLoginDialog\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            className: classes.brandText,\n            display: \"inline\",\n            color: \"primary\",\n            children: \"Wa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            className: classes.brandText,\n            display: \"inline\",\n            color: \"secondary\",\n            children: \"Ver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            mdUp: true,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.menuButton,\n              onClick: handleMobileDrawerOpen,\n              \"aria-label\": \"Open Navigation\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n            smDown: true,\n            children: menuItems.map(element => {\n              if (element.link) {\n                return /*#__PURE__*/_jsxDEV(Link, {\n                  to: element.link,\n                  className: classes.noDecoration,\n                  onClick: handleMobileDrawerClose,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"secondary\",\n                    size: \"large\",\n                    classes: {\n                      text: classes.menuButtonText\n                    },\n                    children: element.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this)\n                }, element.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this);\n              }\n\n              return /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                size: \"large\",\n                onClick: element.onClick,\n                classes: {\n                  text: classes.menuButtonText\n                },\n                children: element.name\n              }, element.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationDrawer, {\n      menuItems: menuItems,\n      anchor: \"right\",\n      open: mobileDrawerOpen,\n      selectedItem: selectedTab,\n      onClose: handleMobileDrawerClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/components/Main.js"],"names":["React","memo","PropTypes","Link","AppBar","Toolbar","Typography","Button","Hidden","IconButton","withStyles","MenuIcon","styles","theme","appBar","boxShadow","shadows","backgroundColor","palette","common","white","toolbar","display","justifyContent","menuButtonText","fontSize","typography","body1","fontWeight","h6","brandText","fontFamily","noDecoration","textDecoration","NavBar","props","classes","openRegisterDialog","openLoginDialog","handleMobileDrawerOpen","handleMobileDrawerClose","mobileDrawerOpen","selectedTab","menuItems","link","name","onClick","root","menuButton","map","element","text"],"mappings":"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","sourcesContent":["import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Hidden,\r\n  IconButton,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    boxShadow: theme.shadows[6],\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  menuButtonText: {\r\n    fontSize: theme.typography.body1.fontSize,\r\n    fontWeight: theme.typography.h6.fontWeight,\r\n  },\r\n  brandText: {\r\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\r\n    fontWeight: 400,\r\n  },\r\n  noDecoration: {\r\n    textDecoration: \"none !important\",\r\n  },\r\n});\r\n\r\nfunction NavBar(props) {\r\n  const {\r\n    classes,\r\n    openRegisterDialog,\r\n    openLoginDialog,\r\n    handleMobileDrawerOpen,\r\n    handleMobileDrawerClose,\r\n    mobileDrawerOpen,\r\n    selectedTab,\r\n  } = props;\r\n  const menuItems = [\r\n    {\r\n      link: \"/\",\r\n      name: \"Home\",\r\n    },\r\n    {\r\n      link: \"/blog\",\r\n      name: \"Blog\",\r\n    },\r\n    {\r\n      name: \"Register\",\r\n      onClick: openRegisterDialog,\r\n    },\r\n    {\r\n      name: \"Login\",\r\n      onClick: openLoginDialog,\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <div>\r\n            <Typography\r\n              variant=\"h4\"\r\n              className={classes.brandText}\r\n              display=\"inline\"\r\n              color=\"primary\"\r\n            >\r\n              Wa\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h4\"\r\n              className={classes.brandText}\r\n              display=\"inline\"\r\n              color=\"secondary\"\r\n            >\r\n              Ver\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Hidden mdUp>\r\n              <IconButton\r\n                className={classes.menuButton}\r\n                onClick={handleMobileDrawerOpen}\r\n                aria-label=\"Open Navigation\"\r\n              >\r\n                <MenuIcon color=\"primary\" />\r\n              </IconButton>\r\n            </Hidden>\r\n            <Hidden smDown>\r\n              {menuItems.map((element) => {\r\n                if (element.link) {\r\n                  return (\r\n                    <Link\r\n                      key={element.name}\r\n                      to={element.link}\r\n                      className={classes.noDecoration}\r\n                      onClick={handleMobileDrawerClose}\r\n                    >\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        classes={{ text: classes.menuButtonText }}\r\n                      >\r\n                        {element.name}\r\n                      </Button>\r\n                    </Link>\r\n                  );\r\n                }\r\n                return (\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    onClick={element.onClick}\r\n                    classes={{ text: classes.menuButtonText }}\r\n                    key={element.name}\r\n                  >\r\n                    {element.name}\r\n                  </Button>\r\n                );\r\n              })}\r\n            </Hidden>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <NavigationDrawer\r\n        menuItems={menuItems}\r\n        anchor=\"right\"\r\n        open={mobileDrawerOpen}\r\n        selectedItem={selectedTab}\r\n        onClose={handleMobileDrawerClose}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}