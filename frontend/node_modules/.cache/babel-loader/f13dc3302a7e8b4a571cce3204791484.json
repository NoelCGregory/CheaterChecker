{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { app } from \"../utils/base.js\";\nimport firebase from \"firebase\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport { checkUserExist, addUser } from \"../utils/Firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.googleLogin = async () => {\n      const {\n        role\n      } = this.state;\n      var provider = new firebase.auth.GoogleAuthProvider();\n      app.auth().signInWithRedirect(provider); // .then(async (result) => {\n      //   The signed-in user info.\n      //   console.log(\"dfd\");\n      //   var user = result.user;\n      //   console.log(user);\n      //   if (role) {\n      //     const exist = await checkUserExist(user.uid);\n      //     console.log(exist + \" dsd\");\n      //     if (exist) {\n      //       await addUser(user.uid, role);\n      //       this.props.history.push(\"/\");\n      //     }\n      //   }\n      //   console.log(\"fdf\");\n      //   this.props.history.push(\"/\");\n      // })\n      // .catch((error) => {\n      //   var errorMessage = error.message;\n      // });\n    };\n\n    this.state = {\n      role: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.state) {\n      this.setState({\n        role: this.props.location.state.role\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(\"fdf\");\n    console.log(this.context);\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.googleLogin,\n        children: \"OnClick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLogin.contextType = AuthContext;\nexport default Login; // const Login = ({ history }) => {\n//   const googleLogin = () => {\n//     var provider = new firebase.auth.GoogleAuthProvider();\n//     app.auth().signInWithRedirect(provider);\n//   };\n//   const { currentUser } = useContext(AuthContext);\n//   const loadPage = async () => {\n//     let res = await checkUserExist(currentUser.uid);\n//     if (res) {\n//       history.push({\n//         pathname: \"/chooserole\",\n//         state: { uid: currentUser.uid },\n//       });\n//     } else {\n//       history.push(\"/\");\n//     }\n//   };\n//   if (currentUser) {\n//     console.log(currentUser);\n//     loadPage();\n//   }\n//   return (\n//     <div>\n//       <h1>Log in</h1>\n//       <button onClick={googleLogin}>OnClick</button>\n//     </div>\n//   );\n// };\n// export default withRouter(Login);","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/components/Login.js"],"names":["React","Component","withRouter","app","firebase","AuthContext","checkUserExist","addUser","Login","constructor","props","googleLogin","role","state","provider","auth","GoogleAuthProvider","signInWithRedirect","componentDidMount","location","setState","componentDidUpdate","console","log","context","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,oBAAxC;;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAE5BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,WAVmB,GAUL,YAAY;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACA,UAAIC,QAAQ,GAAG,IAAIV,QAAQ,CAACW,IAAT,CAAcC,kBAAlB,EAAf;AACAb,MAAAA,GAAG,CAACY,IAAJ,GAAWE,kBAAX,CAA8BH,QAA9B,EAHwB,CAIxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAjCkB;;AAEjB,SAAKD,KAAL,GAAa;AAAED,MAAAA,IAAI,EAAE;AAAR,KAAb;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKR,KAAL,CAAWS,QAAX,CAAoBN,KAAxB,EAA+B;AAC7B,WAAKO,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWS,QAAX,CAAoBN,KAApB,CAA0BD;AAAlC,OAAd;AACD;AACF;;AAyBDS,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,OAAjB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKF,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAhD2B;;AAAxBH,K,CACGkB,W,GAAcrB,W;AAkDvB,eAAeG,KAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { app } from \"../utils/base.js\";\nimport firebase from \"firebase\";\nimport { AuthContext } from \"../utils/Auth.js\";\nimport { checkUserExist, addUser } from \"../utils/Firestore\";\n\nclass Login extends Component {\n  static contextType = AuthContext;\n  constructor(props) {\n    super(props);\n    this.state = { role: null };\n  }\n\n  componentDidMount() {\n    if (this.props.location.state) {\n      this.setState({ role: this.props.location.state.role });\n    }\n  }\n  googleLogin = async () => {\n    const { role } = this.state;\n    var provider = new firebase.auth.GoogleAuthProvider();\n    app.auth().signInWithRedirect(provider);\n    // .then(async (result) => {\n    //   The signed-in user info.\n    //   console.log(\"dfd\");\n    //   var user = result.user;\n    //   console.log(user);\n    //   if (role) {\n    //     const exist = await checkUserExist(user.uid);\n    //     console.log(exist + \" dsd\");\n    //     if (exist) {\n    //       await addUser(user.uid, role);\n    //       this.props.history.push(\"/\");\n    //     }\n    //   }\n    //   console.log(\"fdf\");\n    //   this.props.history.push(\"/\");\n    // })\n    // .catch((error) => {\n    //   var errorMessage = error.message;\n    // });\n  };\n  componentDidUpdate() {\n    console.log(\"fdf\");\n    console.log(this.context);\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <h1>Log in</h1>\n        <button onClick={this.googleLogin}>OnClick</button>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n// const Login = ({ history }) => {\n//   const googleLogin = () => {\n//     var provider = new firebase.auth.GoogleAuthProvider();\n//     app.auth().signInWithRedirect(provider);\n//   };\n//   const { currentUser } = useContext(AuthContext);\n\n//   const loadPage = async () => {\n//     let res = await checkUserExist(currentUser.uid);\n//     if (res) {\n//       history.push({\n//         pathname: \"/chooserole\",\n//         state: { uid: currentUser.uid },\n//       });\n//     } else {\n//       history.push(\"/\");\n//     }\n//   };\n\n//   if (currentUser) {\n//     console.log(currentUser);\n//     loadPage();\n//   }\n//   return (\n//     <div>\n//       <h1>Log in</h1>\n//       <button onClick={googleLogin}>OnClick</button>\n//     </div>\n//   );\n// };\n\n// export default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}