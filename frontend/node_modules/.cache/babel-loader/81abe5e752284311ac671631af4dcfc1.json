{"ast":null,"code":"import { db } from \"./base\";\n\nconst checkUserExist = async uid => {\n  const docRef = db.collection(\"users\").doc(uid);\n  const doc = await docRef.get();\n  console.log(doc.exists);\n\n  if (!doc.exists) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst addUser = async (uid, val) => {\n  const docRef = db.collection(\"users\").doc(uid);\n  let userRole = {\n    teacher: false,\n    student: false\n  };\n\n  if (val) {\n    userRole.teacher = true;\n  } else {\n    userRole.student = true;\n  }\n\n  await docRef.set(userRole);\n};\n\nconst addClass = code => {\n  const docRef = db.collection(\"classes\").doc(code);\n  let data = {\n    classCode: code,\n    className: \"Class\" + code,\n    students: null\n  };\n  docRef.set(data);\n};\n\nconst getUserRole = async uid => {\n  console.log(uid);\n  const docRef = db.collection(\"users\").doc(uid);\n  const doc = await docRef.get();\n  console.log(doc); //const data = doc.data();\n\n  doc.forEach(doc => {\n    console.log(doc.id, \"=>\", doc.data());\n  });\n  console.log(\"data:\");\n  console.log(data); //return data;\n};\n\nexport { checkUserExist, addUser, getUserRole, addClass };","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/utils/Firestore.js"],"names":["db","checkUserExist","uid","docRef","collection","doc","get","console","log","exists","addUser","val","userRole","teacher","student","set","addClass","code","data","classCode","className","students","getUserRole","forEach","id"],"mappings":"AAAA,SAASA,EAAT,QAAmB,QAAnB;;AAEA,MAAMC,cAAc,GAAG,MAAOC,GAAP,IAAe;AACpC,QAAMC,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,GAA3B,CAAf;AACA,QAAMG,GAAG,GAAG,MAAMF,MAAM,CAACG,GAAP,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAhB;;AAEA,MAAI,CAACJ,GAAG,CAACI,MAAT,EAAiB;AACf,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CAVD;;AAYA,MAAMC,OAAO,GAAG,OAAOR,GAAP,EAAYS,GAAZ,KAAoB;AAClC,QAAMR,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,GAA3B,CAAf;AACA,MAAIU,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE,KADI;AAEbC,IAAAA,OAAO,EAAE;AAFI,GAAf;;AAIA,MAAIH,GAAJ,EAAS;AACPC,IAAAA,QAAQ,CAACC,OAAT,GAAmB,IAAnB;AACD,GAFD,MAEO;AACLD,IAAAA,QAAQ,CAACE,OAAT,GAAmB,IAAnB;AACD;;AACD,QAAMX,MAAM,CAACY,GAAP,CAAWH,QAAX,CAAN;AACD,CAZD;;AAcA,MAAMI,QAAQ,GAAIC,IAAD,IAAU;AACzB,QAAMd,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BY,IAA7B,CAAf;AACA,MAAIC,IAAI,GAAG;AACTC,IAAAA,SAAS,EAAEF,IADF;AAETG,IAAAA,SAAS,EAAE,UAAUH,IAFZ;AAGTI,IAAAA,QAAQ,EAAE;AAHD,GAAX;AAMAlB,EAAAA,MAAM,CAACY,GAAP,CAAWG,IAAX;AACD,CATD;;AAWA,MAAMI,WAAW,GAAG,MAAOpB,GAAP,IAAe;AACjCK,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,QAAMC,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,GAA3B,CAAf;AACA,QAAMG,GAAG,GAAG,MAAMF,MAAM,CAACG,GAAP,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAJiC,CAKjC;;AACAA,EAAAA,GAAG,CAACkB,OAAJ,CAAalB,GAAD,IAAS;AACnBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACmB,EAAhB,EAAoB,IAApB,EAA0BnB,GAAG,CAACa,IAAJ,EAA1B;AACD,GAFD;AAGAX,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ,EAViC,CAWjC;AACD,CAZD;;AAcA,SAASjB,cAAT,EAAyBS,OAAzB,EAAkCY,WAAlC,EAA+CN,QAA/C","sourcesContent":["import { db } from \"./base\";\r\n\r\nconst checkUserExist = async (uid) => {\r\n  const docRef = db.collection(\"users\").doc(uid);\r\n  const doc = await docRef.get();\r\n  console.log(doc.exists);\r\n\r\n  if (!doc.exists) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst addUser = async (uid, val) => {\r\n  const docRef = db.collection(\"users\").doc(uid);\r\n  let userRole = {\r\n    teacher: false,\r\n    student: false,\r\n  };\r\n  if (val) {\r\n    userRole.teacher = true;\r\n  } else {\r\n    userRole.student = true;\r\n  }\r\n  await docRef.set(userRole);\r\n};\r\n\r\nconst addClass = (code) => {\r\n  const docRef = db.collection(\"classes\").doc(code);\r\n  let data = {\r\n    classCode: code,\r\n    className: \"Class\" + code,\r\n    students: null,\r\n  };\r\n\r\n  docRef.set(data);\r\n};\r\n\r\nconst getUserRole = async (uid) => {\r\n  console.log(uid);\r\n  const docRef = db.collection(\"users\").doc(uid);\r\n  const doc = await docRef.get();\r\n  console.log(doc);\r\n  //const data = doc.data();\r\n  doc.forEach((doc) => {\r\n    console.log(doc.id, \"=>\", doc.data());\r\n  });\r\n  console.log(\"data:\");\r\n  console.log(data);\r\n  //return data;\r\n};\r\n\r\nexport { checkUserExist, addUser, getUserRole, addClass };\r\n"]},"metadata":{},"sourceType":"module"}