{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\utils\\\\Auth.js\";\nimport React, { Component } from \"react\";\nimport { app } from \"./base\"; //import \"../components/ui.css\";\n\nimport \"antd/dist/antd.css\";\nimport { Spin } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nclass AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null,\n      loader: true\n    };\n  }\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged(user => {\n      this.setState({\n        currentUser: user,\n        loader: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      currentUser,\n      loader\n    } = this.state;\n\n    if (loader) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\",\n          tip: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n        value: {\n          currentUser\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport { AuthProvider, AuthContext }; // export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/utils/Auth.js"],"names":["React","Component","app","Spin","AuthContext","createContext","AuthProvider","state","currentUser","loader","componentDidMount","auth","onAuthStateChanged","user","setState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,QAApB,C,CACA;;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,QAAqB,MAArB;;AACA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCM,KADmC,GAC3B;AAAEC,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KAD2B;AAAA;;AAGnCC,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,GAAG,CAACS,IAAJ,GAAWC,kBAAX,CAA+BC,IAAD,IAAU;AACtC,WAAKC,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEK,IAAf;AAAqBJ,QAAAA,MAAM,EAAE;AAA7B,OAAd;AACD,KAFD;AAGD;;AACDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA0B,KAAKF,KAArC;;AACA,QAAIE,MAAJ,EAAY;AACV,0BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,MAMO;AACL,0BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAED,UAAAA;AAAF,SAA7B;AAAA,kBACG,KAAKQ,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAvBkC;;AA0BrC,SAASX,YAAT,EAAuBF,WAAvB,G,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport { app } from \"./base\";\n//import \"../components/ui.css\";\nimport \"antd/dist/antd.css\";\nimport { Spin } from \"antd\";\nconst AuthContext = React.createContext();\n\nclass AuthProvider extends Component {\n  state = { currentUser: null, loader: true };\n\n  componentDidMount() {\n    app.auth().onAuthStateChanged((user) => {\n      this.setState({ currentUser: user, loader: false });\n    });\n  }\n  render() {\n    const { currentUser, loader } = this.state;\n    if (loader) {\n      return (\n        <div className=\"loader\">\n          <Spin size=\"large\" tip=\"Loading...\" />\n        </div>\n      );\n    } else {\n      return (\n        <AuthContext.Provider value={{ currentUser }}>\n          {this.props.children}\n        </AuthContext.Provider>\n      );\n    }\n  }\n}\n\nexport { AuthProvider, AuthContext };\n// export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setPending(false);\n//     });\n//   }, []);\n\n//   if (pending) {\n//     return <>Loading...</>;\n//   }\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}