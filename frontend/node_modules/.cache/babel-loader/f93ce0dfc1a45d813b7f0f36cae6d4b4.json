{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Javascript\\\\Node.js\\\\CheaterChecker\\\\frontend\\\\src\\\\utils\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: RouteComponent,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  checkUser = async () => {\n    const {\n      currentUser\n    } = this.context;\n\n    if (currentUser != null) {\n      let res = await checkUserExist(currentUser.uid);\n\n      if (res) {\n        this.props.history.push({\n          pathname: \"/selectrole\",\n          state: {\n            uid: currentUser.uid\n          }\n        });\n      } else {\n        this.props.history.push(\"/\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: routeProps => !!currentUser ? /*#__PURE__*/_jsxDEV(RouteComponent, { ...routeProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Noel/Desktop/Javascript/Node.js/CheaterChecker/frontend/src/utils/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","RouteComponent","rest","currentUser","checkUser","context","res","checkUserExist","uid","props","history","push","pathname","state","routeProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,QAA5B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,cAAb;AAA6B,KAAGC;AAAhC,CAAD,KAA4C;AAAA;;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAkBR,UAAU,CAACG,WAAD,CAAlC;;AAEAM,EAAAA,SAAS,GAAG,YAAY;AACtB,UAAM;AAAED,MAAAA;AAAF,QAAkB,KAAKE,OAA7B;;AACA,QAAIF,WAAW,IAAI,IAAnB,EAAyB;AACvB,UAAIG,GAAG,GAAG,MAAMC,cAAc,CAACJ,WAAW,CAACK,GAAb,CAA9B;;AACA,UAAIF,GAAJ,EAAS;AACP,aAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,UAAAA,QAAQ,EAAE,aADY;AAEtBC,UAAAA,KAAK,EAAE;AAAEL,YAAAA,GAAG,EAAEL,WAAW,CAACK;AAAnB;AAFe,SAAxB;AAID,OALD,MAKO;AACL,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;AACF,GAbD;;AAcA,sBACE,QAAC,KAAD,OACMT,IADN;AAEE,IAAA,MAAM,EAAGY,UAAD,IACN,CAAC,CAACX,WAAF,gBACE,QAAC,cAAD,OAAoBW;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7BD;;GAAMf,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n\n  checkUser = async () => {\n    const { currentUser } = this.context;\n    if (currentUser != null) {\n      let res = await checkUserExist(currentUser.uid);\n      if (res) {\n        this.props.history.push({\n          pathname: \"/selectrole\",\n          state: { uid: currentUser.uid },\n        });\n      } else {\n        this.props.history.push(\"/\");\n      }\n    }\n  };\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/login\"} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}